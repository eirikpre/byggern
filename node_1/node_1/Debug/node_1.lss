
node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000152  00800100  000017d4  00001868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  00800252  00800252  000019ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019ba  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000250  00000000  00000000  00001a16  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000020a3  00000000  00000000  00001c66  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d62  00000000  00000000  00003d09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b2e  00000000  00000000  00004a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000548  00000000  00000000  0000559c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000687  00000000  00000000  00005ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e99  00000000  00000000  0000616b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001c8  00000000  00000000  00007004  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <menu_print+0x5c>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 ed       	ldi	r30, 0xD4	; 212
     37c:	f7 e1       	ldi	r31, 0x17	; 23
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a2 35       	cpi	r26, 0x52	; 82
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a2 e5       	ldi	r26, 0x52	; 82
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a5 36       	cpi	r26, 0x65	; 101
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 a0 03 	call	0x740	; 0x740 <main>
     39e:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
int adc_channels[2];


char ADC_read(int channel){
	
	*ADC_START = 0x04 + channel;
     3a6:	8c 5f       	subi	r24, 0xFC	; 252
     3a8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	8a 95       	dec	r24
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <ADC_read+0x8>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <ADC_read+0xe>
	_delay_us(40);
	return *ADC_START;
     3b4:	80 91 00 14 	lds	r24, 0x1400
	 
}
     3b8:	08 95       	ret

000003ba <check_and_report_shot>:
}


		
void check_and_report_shot( void )
{
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	2a 97       	sbiw	r28, 0x0a	; 10
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61
	can_message_t shot_msg = {'s',1};
     3ce:	fe 01       	movw	r30, r28
     3d0:	31 96       	adiw	r30, 0x01	; 1
     3d2:	8a e0       	ldi	r24, 0x0A	; 10
     3d4:	df 01       	movw	r26, r30
     3d6:	1d 92       	st	X+, r1
     3d8:	8a 95       	dec	r24
     3da:	e9 f7       	brne	.-6      	; 0x3d6 <check_and_report_shot+0x1c>
     3dc:	83 e7       	ldi	r24, 0x73	; 115
     3de:	89 83       	std	Y+1, r24	; 0x01
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	8a 83       	std	Y+2, r24	; 0x02
	static int recent_shot = 0;
	
	if (recent_shot == 0)
     3e4:	80 91 52 02 	lds	r24, 0x0252
     3e8:	90 91 53 02 	lds	r25, 0x0253
     3ec:	89 2b       	or	r24, r25
     3ee:	89 f4       	brne	.+34     	; 0x412 <check_and_report_shot+0x58>
	{
		if(ADC_read(3) > 100)
     3f0:	83 e0       	ldi	r24, 0x03	; 3
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     3f8:	85 36       	cpi	r24, 0x65	; 101
     3fa:	a8 f0       	brcs	.+42     	; 0x426 <check_and_report_shot+0x6c>
		{
			can_message_send(&shot_msg);
     3fc:	ce 01       	movw	r24, r28
     3fe:	01 96       	adiw	r24, 0x01	; 1
     400:	0e 94 c4 03 	call	0x788	; 0x788 <can_message_send>
			recent_shot = 1;
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	90 93 53 02 	sts	0x0253, r25
     40c:	80 93 52 02 	sts	0x0252, r24
     410:	0a c0       	rjmp	.+20     	; 0x426 <check_and_report_shot+0x6c>
		}
	}
	else
	{
		if (ADC_read(3) < 100){
     412:	83 e0       	ldi	r24, 0x03	; 3
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     41a:	84 36       	cpi	r24, 0x64	; 100
     41c:	20 f4       	brcc	.+8      	; 0x426 <check_and_report_shot+0x6c>
			recent_shot = 0;
     41e:	10 92 53 02 	sts	0x0253, r1
     422:	10 92 52 02 	sts	0x0252, r1

		}
	}
}
     426:	2a 96       	adiw	r28, 0x0a	; 10
     428:	0f b6       	in	r0, 0x3f	; 63
     42a:	f8 94       	cli
     42c:	de bf       	out	0x3e, r29	; 62
     42e:	0f be       	out	0x3f, r0	; 63
     430:	cd bf       	out	0x3d, r28	; 61
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	08 95       	ret

00000438 <print_highscore>:

void print_highscore( void )
{
     438:	ef 92       	push	r14
     43a:	ff 92       	push	r15
     43c:	0f 93       	push	r16
     43e:	1f 93       	push	r17
     440:	cf 93       	push	r28
     442:	df 93       	push	r29

	
	int i;
	char* temp = "00000000000000000";

	oled_clear_all();
     444:	0e 94 ce 06 	call	0xd9c	; 0xd9c <oled_clear_all>
	oled_goto(0,0);
     448:	60 e0       	ldi	r22, 0x00	; 0
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
	oled_print("Highscores");
     450:	8d ee       	ldi	r24, 0xED	; 237
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	for (i=0; i<3 ;i++)
     458:	c0 e0       	ldi	r28, 0x00	; 0
     45a:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i+2,8);
		sprintf(temp,"%d. %d",i+1,eeprom_read_word((uint16_t*)(i*2)));
     45c:	0f 2e       	mov	r0, r31
     45e:	f8 ef       	ldi	r31, 0xF8	; 248
     460:	ef 2e       	mov	r14, r31
     462:	f1 e0       	ldi	r31, 0x01	; 1
     464:	ff 2e       	mov	r15, r31
     466:	f0 2d       	mov	r31, r0
     468:	0f ef       	ldi	r16, 0xFF	; 255
     46a:	11 e0       	ldi	r17, 0x01	; 1
	oled_clear_all();
	oled_goto(0,0);
	oled_print("Highscores");
	for (i=0; i<3 ;i++)
	{
		oled_goto(i+2,8);
     46c:	68 e0       	ldi	r22, 0x08	; 8
     46e:	8c 2f       	mov	r24, r28
     470:	8e 5f       	subi	r24, 0xFE	; 254
     472:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
		sprintf(temp,"%d. %d",i+1,eeprom_read_word((uint16_t*)(i*2)));
     476:	ce 01       	movw	r24, r28
     478:	88 0f       	add	r24, r24
     47a:	99 1f       	adc	r25, r25
     47c:	0e 94 99 09 	call	0x1332	; 0x1332 <__eerd_word_m162>
     480:	21 96       	adiw	r28, 0x01	; 1
     482:	9f 93       	push	r25
     484:	8f 93       	push	r24
     486:	df 93       	push	r29
     488:	cf 93       	push	r28
     48a:	ff 92       	push	r15
     48c:	ef 92       	push	r14
     48e:	1f 93       	push	r17
     490:	0f 93       	push	r16
     492:	0e 94 a5 07 	call	0xf4a	; 0xf4a <sprintf>
		oled_print(temp);
     496:	c8 01       	movw	r24, r16
     498:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	char* temp = "00000000000000000";

	oled_clear_all();
	oled_goto(0,0);
	oled_print("Highscores");
	for (i=0; i<3 ;i++)
     49c:	8d b7       	in	r24, 0x3d	; 61
     49e:	9e b7       	in	r25, 0x3e	; 62
     4a0:	08 96       	adiw	r24, 0x08	; 8
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	9e bf       	out	0x3e, r25	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	8d bf       	out	0x3d, r24	; 61
     4ac:	c3 30       	cpi	r28, 0x03	; 3
     4ae:	d1 05       	cpc	r29, r1
     4b0:	e9 f6       	brne	.-70     	; 0x46c <print_highscore+0x34>
		oled_print(temp);
	}

	
	return;
}
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	08 95       	ret

000004c0 <update_eeprom>:

void update_eeprom( int score, uint16_t* highscore )
{
     4c0:	0f 93       	push	r16
     4c2:	1f 93       	push	r17
     4c4:	cf 93       	push	r28
     4c6:	df 93       	push	r29
     4c8:	08 2f       	mov	r16, r24
     4ca:	19 2f       	mov	r17, r25
     4cc:	eb 01       	movw	r28, r22
	if (score > highscore[0])
     4ce:	28 2f       	mov	r18, r24
     4d0:	39 2f       	mov	r19, r25
     4d2:	48 81       	ld	r20, Y
     4d4:	59 81       	ldd	r21, Y+1	; 0x01
     4d6:	42 17       	cp	r20, r18
     4d8:	53 07       	cpc	r21, r19
     4da:	98 f4       	brcc	.+38     	; 0x502 <__stack+0x3>
	{
		eeprom_write_word((uint16_t*)4, highscore[1]);
     4dc:	6a 81       	ldd	r22, Y+2	; 0x02
     4de:	7b 81       	ldd	r23, Y+3	; 0x03
     4e0:	84 e0       	ldi	r24, 0x04	; 4
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
		eeprom_write_word((uint16_t*)2, highscore[0]);
     4e8:	68 81       	ld	r22, Y
     4ea:	79 81       	ldd	r23, Y+1	; 0x01
     4ec:	82 e0       	ldi	r24, 0x02	; 2
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
		eeprom_write_word((uint16_t*)0, score );
     4f4:	60 2f       	mov	r22, r16
     4f6:	71 2f       	mov	r23, r17
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
     500:	1b c0       	rjmp	.+54     	; 0x538 <__stack+0x39>
	}
	else if(score > highscore[1])
     502:	6a 81       	ldd	r22, Y+2	; 0x02
     504:	7b 81       	ldd	r23, Y+3	; 0x03
     506:	62 17       	cp	r22, r18
     508:	73 07       	cpc	r23, r19
     50a:	58 f4       	brcc	.+22     	; 0x522 <__stack+0x23>
	{
		eeprom_write_word((uint16_t*)4, highscore[1]);
     50c:	84 e0       	ldi	r24, 0x04	; 4
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
		eeprom_write_word((uint16_t*)2, score );
     514:	60 2f       	mov	r22, r16
     516:	71 2f       	mov	r23, r17
     518:	82 e0       	ldi	r24, 0x02	; 2
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
     520:	0b c0       	rjmp	.+22     	; 0x538 <__stack+0x39>
	}
	else if(score > highscore[2])
     522:	4c 81       	ldd	r20, Y+4	; 0x04
     524:	5d 81       	ldd	r21, Y+5	; 0x05
     526:	42 17       	cp	r20, r18
     528:	53 07       	cpc	r21, r19
     52a:	30 f4       	brcc	.+12     	; 0x538 <__stack+0x39>
	{
		eeprom_write_word((uint16_t*)4, score );
     52c:	68 2f       	mov	r22, r24
     52e:	79 2f       	mov	r23, r25
     530:	84 e0       	ldi	r24, 0x04	; 4
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
	}
}
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	08 95       	ret

00000542 <play_game>:
	
void check_and_report_shot( void );
void update_eeprom( int score, uint16_t* highscore );

void play_game( void )
{
     542:	4f 92       	push	r4
     544:	5f 92       	push	r5
     546:	6f 92       	push	r6
     548:	7f 92       	push	r7
     54a:	8f 92       	push	r8
     54c:	9f 92       	push	r9
     54e:	af 92       	push	r10
     550:	bf 92       	push	r11
     552:	cf 92       	push	r12
     554:	df 92       	push	r13
     556:	ef 92       	push	r14
     558:	ff 92       	push	r15
     55a:	0f 93       	push	r16
     55c:	1f 93       	push	r17
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
     562:	cd b7       	in	r28, 0x3d	; 61
     564:	de b7       	in	r29, 0x3e	; 62
     566:	60 97       	sbiw	r28, 0x10	; 16
     568:	0f b6       	in	r0, 0x3f	; 63
     56a:	f8 94       	cli
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	0f be       	out	0x3f, r0	; 63
     570:	cd bf       	out	0x3d, r28	; 61
	int score = 0;
	int score_sub = 0;
	char* score_print = "0000000000";
	joy_position_t joystick;
	
	can_message_t message = {'m',1,"00"};
     572:	8a e0       	ldi	r24, 0x0A	; 10
     574:	e3 ee       	ldi	r30, 0xE3	; 227
     576:	f1 e0       	ldi	r31, 0x01	; 1
     578:	de 01       	movw	r26, r28
     57a:	17 96       	adiw	r26, 0x07	; 7
     57c:	01 90       	ld	r0, Z+
     57e:	0d 92       	st	X+, r0
     580:	8a 95       	dec	r24
     582:	e1 f7       	brne	.-8      	; 0x57c <play_game+0x3a>
	
	// Get highscores
	for(i=0; i<3; i++)
	{
		highscore[i] = eeprom_read_word((uint16_t*)(i*2));
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	0e 94 99 09 	call	0x1332	; 0x1332 <__eerd_word_m162>
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	82 e0       	ldi	r24, 0x02	; 2
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	0e 94 99 09 	call	0x1332	; 0x1332 <__eerd_word_m162>
     598:	9c 83       	std	Y+4, r25	; 0x04
     59a:	8b 83       	std	Y+3, r24	; 0x03
     59c:	84 e0       	ldi	r24, 0x04	; 4
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	0e 94 99 09 	call	0x1332	; 0x1332 <__eerd_word_m162>
     5a4:	9e 83       	std	Y+6, r25	; 0x06
     5a6:	8d 83       	std	Y+5, r24	; 0x05
	}
	
	//Setup OLED Screen
	oled_clear_all();
     5a8:	0e 94 ce 06 	call	0xd9c	; 0xd9c <oled_clear_all>
	oled_goto(0,0);
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
	oled_print("     GAME");
     5b4:	81 e1       	ldi	r24, 0x11	; 17
     5b6:	92 e0       	ldi	r25, 0x02	; 2
     5b8:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	oled_goto(3,0);
     5bc:	60 e0       	ldi	r22, 0x00	; 0
     5be:	83 e0       	ldi	r24, 0x03	; 3
     5c0:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
	oled_print("    Score: ");
     5c4:	8b e1       	ldi	r24, 0x1B	; 27
     5c6:	92 e0       	ldi	r25, 0x02	; 2
     5c8:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	
	// Sending game mode to node 2
	message.data[0] = TOUCH_JOY_MODE;
     5cc:	80 91 1a 01 	lds	r24, 0x011A
     5d0:	89 87       	std	Y+9, r24	; 0x09
	can_message_send(&message);
     5d2:	ce 01       	movw	r24, r28
     5d4:	07 96       	adiw	r24, 0x07	; 7
     5d6:	0e 94 c4 03 	call	0x788	; 0x788 <can_message_send>
void play_game( void )
{
	uint16_t highscore[3];
	int i;
	int score = 0;
	int score_sub = 0;
     5da:	c1 2c       	mov	r12, r1
     5dc:	d1 2c       	mov	r13, r1

void play_game( void )
{
	uint16_t highscore[3];
	int i;
	int score = 0;
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	10 e0       	ldi	r17, 0x00	; 0
	
	while(1)
	{
		//Joystick
		joystick =  get_position();
		joystick_msg.data[0] = joystick.x_pos;
     5e2:	0f 2e       	mov	r0, r31
     5e4:	f2 e1       	ldi	r31, 0x12	; 18
     5e6:	8f 2e       	mov	r8, r31
     5e8:	f1 e0       	ldi	r31, 0x01	; 1
     5ea:	9f 2e       	mov	r9, r31
     5ec:	f0 2d       	mov	r31, r0
		joystick_msg.data[1] = joystick.y_pos;
     5ee:	0f 2e       	mov	r0, r31
     5f0:	f3 e1       	ldi	r31, 0x13	; 19
     5f2:	6f 2e       	mov	r6, r31
     5f4:	f1 e0       	ldi	r31, 0x01	; 1
     5f6:	7f 2e       	mov	r7, r31
     5f8:	f0 2d       	mov	r31, r0
		can_message_send(&joystick_msg);
		
		if (TOUCH_JOY_MODE == 1){
			touch_msg.data[0] = ADC_read(2);
     5fa:	0f 2e       	mov	r0, r31
     5fc:	f8 e0       	ldi	r31, 0x08	; 8
     5fe:	4f 2e       	mov	r4, r31
     600:	f1 e0       	ldi	r31, 0x01	; 1
     602:	5f 2e       	mov	r5, r31
     604:	f0 2d       	mov	r31, r0
		// Check for quit
		if ( (ADC_read(2) > 180 && TOUCH_JOY_MODE == 0) || (ADC_read(0) > 200 && TOUCH_JOY_MODE == 1) ) break;
		
		// Print Score
		oled_goto(4, 0);
		sprintf(score_print,"       %d",score);
     606:	0f 2e       	mov	r0, r31
     608:	f7 e2       	ldi	r31, 0x27	; 39
     60a:	af 2e       	mov	r10, r31
     60c:	f2 e0       	ldi	r31, 0x02	; 2
     60e:	bf 2e       	mov	r11, r31
     610:	f0 2d       	mov	r31, r0
     612:	0f 2e       	mov	r0, r31
     614:	f6 e0       	ldi	r31, 0x06	; 6
     616:	ef 2e       	mov	r14, r31
     618:	f2 e0       	ldi	r31, 0x02	; 2
     61a:	ff 2e       	mov	r15, r31
     61c:	f0 2d       	mov	r31, r0
     61e:	03 c0       	rjmp	.+6      	; 0x626 <play_game+0xe4>
		oled_print(score_print);
		
		// Add score
		if(score_sub++ > 700)
     620:	8f ef       	ldi	r24, 0xFF	; 255
     622:	c8 1a       	sub	r12, r24
     624:	d8 0a       	sbc	r13, r24
	
	
	while(1)
	{
		//Joystick
		joystick =  get_position();
     626:	0e 94 db 04 	call	0x9b6	; 0x9b6 <get_position>
		joystick_msg.data[0] = joystick.x_pos;
     62a:	f4 01       	movw	r30, r8
     62c:	60 83       	st	Z, r22
		joystick_msg.data[1] = joystick.y_pos;
     62e:	f3 01       	movw	r30, r6
     630:	80 83       	st	Z, r24
		can_message_send(&joystick_msg);
     632:	80 e1       	ldi	r24, 0x10	; 16
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	0e 94 c4 03 	call	0x788	; 0x788 <can_message_send>
		
		if (TOUCH_JOY_MODE == 1){
     63a:	80 91 1a 01 	lds	r24, 0x011A
     63e:	90 91 1b 01 	lds	r25, 0x011B
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	51 f4       	brne	.+20     	; 0x65a <play_game+0x118>
			touch_msg.data[0] = ADC_read(2);
     646:	82 e0       	ldi	r24, 0x02	; 2
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     64e:	f2 01       	movw	r30, r4
     650:	80 83       	st	Z, r24
			can_message_send(&touch_msg);	
     652:	86 e0       	ldi	r24, 0x06	; 6
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	0e 94 c4 03 	call	0x788	; 0x788 <can_message_send>
		}
		
		// Handle potential goals
		if (can_get_message(&message) == 1)
     65a:	ce 01       	movw	r24, r28
     65c:	07 96       	adiw	r24, 0x07	; 7
     65e:	0e 94 1c 04 	call	0x838	; 0x838 <can_get_message>
     662:	01 97       	sbiw	r24, 0x01	; 1
     664:	19 f4       	brne	.+6      	; 0x66c <play_game+0x12a>
		{
			if(message.id == 'g')	// Goal
     666:	8f 81       	ldd	r24, Y+7	; 0x07
     668:	87 36       	cpi	r24, 0x67	; 103
     66a:	d1 f1       	breq	.+116    	; 0x6e0 <play_game+0x19e>
				break;
			}
		}
		
		// Check for shot button
		check_and_report_shot();
     66c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <check_and_report_shot>
		
		// Check for quit
		if ( (ADC_read(2) > 180 && TOUCH_JOY_MODE == 0) || (ADC_read(0) > 200 && TOUCH_JOY_MODE == 1) ) break;
     670:	82 e0       	ldi	r24, 0x02	; 2
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     678:	85 3b       	cpi	r24, 0xB5	; 181
     67a:	30 f0       	brcs	.+12     	; 0x688 <play_game+0x146>
     67c:	80 91 1a 01 	lds	r24, 0x011A
     680:	90 91 1b 01 	lds	r25, 0x011B
     684:	89 2b       	or	r24, r25
     686:	61 f1       	breq	.+88     	; 0x6e0 <play_game+0x19e>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     690:	89 3c       	cpi	r24, 0xC9	; 201
     692:	30 f0       	brcs	.+12     	; 0x6a0 <play_game+0x15e>
     694:	80 91 1a 01 	lds	r24, 0x011A
     698:	90 91 1b 01 	lds	r25, 0x011B
     69c:	01 97       	sbiw	r24, 0x01	; 1
     69e:	01 f1       	breq	.+64     	; 0x6e0 <play_game+0x19e>
		
		// Print Score
		oled_goto(4, 0);
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	84 e0       	ldi	r24, 0x04	; 4
     6a4:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
		sprintf(score_print,"       %d",score);
     6a8:	1f 93       	push	r17
     6aa:	0f 93       	push	r16
     6ac:	bf 92       	push	r11
     6ae:	af 92       	push	r10
     6b0:	ff 92       	push	r15
     6b2:	ef 92       	push	r14
     6b4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <sprintf>
		oled_print(score_print);
     6b8:	c7 01       	movw	r24, r14
     6ba:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
		
		// Add score
		if(score_sub++ > 700)
     6be:	0f 90       	pop	r0
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	0f 90       	pop	r0
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	fd eb       	ldi	r31, 0xBD	; 189
     6cc:	cf 16       	cp	r12, r31
     6ce:	f2 e0       	ldi	r31, 0x02	; 2
     6d0:	df 06       	cpc	r13, r31
     6d2:	0c f4       	brge	.+2      	; 0x6d6 <play_game+0x194>
     6d4:	a5 cf       	rjmp	.-182    	; 0x620 <play_game+0xde>
		{
			score_sub = 0;
			score++;
     6d6:	0f 5f       	subi	r16, 0xFF	; 255
     6d8:	1f 4f       	sbci	r17, 0xFF	; 255
		oled_print(score_print);
		
		// Add score
		if(score_sub++ > 700)
		{
			score_sub = 0;
     6da:	c1 2c       	mov	r12, r1
     6dc:	d1 2c       	mov	r13, r1
     6de:	a3 cf       	rjmp	.-186    	; 0x626 <play_game+0xe4>
			score++;
		}
	}
	update_eeprom(score,highscore);
     6e0:	be 01       	movw	r22, r28
     6e2:	6f 5f       	subi	r22, 0xFF	; 255
     6e4:	7f 4f       	sbci	r23, 0xFF	; 255
     6e6:	c8 01       	movw	r24, r16
     6e8:	0e 94 60 02 	call	0x4c0	; 0x4c0 <update_eeprom>
	return;
}
     6ec:	60 96       	adiw	r28, 0x10	; 16
     6ee:	0f b6       	in	r0, 0x3f	; 63
     6f0:	f8 94       	cli
     6f2:	de bf       	out	0x3e, r29	; 62
     6f4:	0f be       	out	0x3f, r0	; 63
     6f6:	cd bf       	out	0x3d, r28	; 61
     6f8:	df 91       	pop	r29
     6fa:	cf 91       	pop	r28
     6fc:	1f 91       	pop	r17
     6fe:	0f 91       	pop	r16
     700:	ff 90       	pop	r15
     702:	ef 90       	pop	r14
     704:	df 90       	pop	r13
     706:	cf 90       	pop	r12
     708:	bf 90       	pop	r11
     70a:	af 90       	pop	r10
     70c:	9f 90       	pop	r9
     70e:	8f 90       	pop	r8
     710:	7f 90       	pop	r7
     712:	6f 90       	pop	r6
     714:	5f 90       	pop	r5
     716:	4f 90       	pop	r4
     718:	08 95       	ret

0000071a <reset_eeprom>:
	}
}

void reset_eeprom ( void )
{
	eeprom_write_word((uint16_t*)0, 0 );	//	Reset the highscores
     71a:	60 e0       	ldi	r22, 0x00	; 0
     71c:	70 e0       	ldi	r23, 0x00	; 0
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
	eeprom_write_word((uint16_t*)2, 0 );
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	82 e0       	ldi	r24, 0x02	; 2
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
	eeprom_write_word((uint16_t*)4, 0 );
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	84 e0       	ldi	r24, 0x04	; 4
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 9f 09 	call	0x133e	; 0x133e <__eewr_word_m162>
     73e:	08 95       	ret

00000740 <main>:


int main(void)
{	
	// Activate external memory
	MCUCR |= (1 << SRE);
     740:	85 b7       	in	r24, 0x35	; 53
     742:	80 68       	ori	r24, 0x80	; 128
     744:	85 bf       	out	0x35, r24	; 53
		
	// Initialize	
	USART_init(MYUBRR);
     746:	8f e1       	ldi	r24, 0x1F	; 31
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <USART_init>
	joy_init();
     74e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <joy_init>
	oled_init();
     752:	0e 94 94 06 	call	0xd28	; 0xd28 <oled_init>
	can_init();
     756:	0e 94 b2 03 	call	0x764	; 0x764 <can_init>
	menu_init();
     75a:	0e 94 b7 05 	call	0xb6e	; 0xb6e <menu_init>
	
	// Starts the FSM
	while(1)
	{
		menu_fsm();
     75e:	0e 94 d6 05 	call	0xbac	; 0xbac <menu_fsm>
     762:	fd cf       	rjmp	.-6      	; 0x75e <main+0x1e>

00000764 <can_init>:
#include "MCP2515.h"

void can_init()
{
	
	mcp2515_init();
     764:	0e 94 9a 04 	call	0x934	; 0x934 <mcp2515_init>
	
	mcp2515_bit_modify(MCP_RXF0SIDH, 0xff , 0x00);
     768:	40 e0       	ldi	r20, 0x00	; 0
     76a:	6f ef       	ldi	r22, 0xFF	; 255
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	0e 94 67 04 	call	0x8ce	; 0x8ce <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXF0SIDL, 0xE0 , 0x00);
     772:	40 e0       	ldi	r20, 0x00	; 0
     774:	60 ee       	ldi	r22, 0xE0	; 224
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	0e 94 67 04 	call	0x8ce	; 0x8ce <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_CANCTRL, 0xE0 , MODE_NORMAL);
     77c:	40 e0       	ldi	r20, 0x00	; 0
     77e:	60 ee       	ldi	r22, 0xE0	; 224
     780:	8f e0       	ldi	r24, 0x0F	; 15
     782:	0e 94 67 04 	call	0x8ce	; 0x8ce <mcp2515_bit_modify>
     786:	08 95       	ret

00000788 <can_message_send>:
	
}


void can_message_send(can_message_t *message)
{
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	ec 01       	movw	r28, r24
	char i;
	
	// ID
	mcp2515_write(MCP_TXB0CTRL + 1,message->id);
     790:	68 81       	ld	r22, Y
     792:	81 e3       	ldi	r24, 0x31	; 49
     794:	0e 94 48 04 	call	0x890	; 0x890 <mcp2515_write>
	mcp2515_write(0x32,0x00);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	82 e3       	ldi	r24, 0x32	; 50
     79c:	0e 94 48 04 	call	0x890	; 0x890 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
     7a0:	69 81       	ldd	r22, Y+1	; 0x01
     7a2:	85 e3       	ldi	r24, 0x35	; 53
     7a4:	0e 94 48 04 	call	0x890	; 0x890 <mcp2515_write>
	
	// Data
	for (i = 0; i< message->length; i++){
     7a8:	89 81       	ldd	r24, Y+1	; 0x01
     7aa:	88 23       	and	r24, r24
     7ac:	69 f0       	breq	.+26     	; 0x7c8 <can_message_send+0x40>
     7ae:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
     7b0:	fe 01       	movw	r30, r28
     7b2:	e1 0f       	add	r30, r17
     7b4:	f1 1d       	adc	r31, r1
     7b6:	62 81       	ldd	r22, Z+2	; 0x02
     7b8:	86 e3       	ldi	r24, 0x36	; 54
     7ba:	81 0f       	add	r24, r17
     7bc:	0e 94 48 04 	call	0x890	; 0x890 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
	
	// Data
	for (i = 0; i< message->length; i++){
     7c0:	1f 5f       	subi	r17, 0xFF	; 255
     7c2:	89 81       	ldd	r24, Y+1	; 0x01
     7c4:	18 17       	cp	r17, r24
     7c6:	a0 f3       	brcs	.-24     	; 0x7b0 <can_message_send+0x28>
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
	}
	
	mcp2515_request_to_send(MCP_RTS_TX0);
     7c8:	81 e8       	ldi	r24, 0x81	; 129
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <mcp2515_request_to_send>
}
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	08 95       	ret

000007d8 <can_message_receive>:

void can_message_receive(can_message_t* message, int buffer)
{
     7d8:	ef 92       	push	r14
     7da:	ff 92       	push	r15
     7dc:	0f 93       	push	r16
     7de:	1f 93       	push	r17
     7e0:	cf 93       	push	r28
     7e2:	df 93       	push	r29
     7e4:	8c 01       	movw	r16, r24
     7e6:	e6 2e       	mov	r14, r22
	char i;
	
	// ID
	message->id = mcp2515_read(MCP_RXB0CTRL+buffer + 1);
     7e8:	81 e6       	ldi	r24, 0x61	; 97
     7ea:	86 0f       	add	r24, r22
     7ec:	0e 94 36 04 	call	0x86c	; 0x86c <mcp2515_read>
     7f0:	f8 01       	movw	r30, r16
     7f2:	80 83       	st	Z, r24
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
     7f4:	85 e6       	ldi	r24, 0x65	; 101
     7f6:	8e 0d       	add	r24, r14
     7f8:	0e 94 36 04 	call	0x86c	; 0x86c <mcp2515_read>
     7fc:	f8 01       	movw	r30, r16
     7fe:	81 83       	std	Z+1, r24	; 0x01
	
	// Data
	for(i=0;i<message->length;i++)
     800:	88 23       	and	r24, r24
     802:	99 f0       	breq	.+38     	; 0x82a <can_message_receive+0x52>
     804:	c0 e0       	ldi	r28, 0x00	; 0
     806:	d0 e0       	ldi	r29, 0x00	; 0
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
     808:	f6 e6       	ldi	r31, 0x66	; 102
     80a:	ef 0e       	add	r14, r31
     80c:	fc 2e       	mov	r15, r28
     80e:	8c 2f       	mov	r24, r28
     810:	8e 0d       	add	r24, r14
     812:	0e 94 36 04 	call	0x86c	; 0x86c <mcp2515_read>
     816:	f8 01       	movw	r30, r16
     818:	ec 0f       	add	r30, r28
     81a:	f1 1d       	adc	r31, r1
     81c:	82 83       	std	Z+2, r24	; 0x02
     81e:	f3 94       	inc	r15
     820:	21 96       	adiw	r28, 0x01	; 1
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
	
	// Data
	for(i=0;i<message->length;i++)
     822:	f8 01       	movw	r30, r16
     824:	81 81       	ldd	r24, Z+1	; 0x01
     826:	f8 16       	cp	r15, r24
     828:	88 f3       	brcs	.-30     	; 0x80c <can_message_receive+0x34>
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
	}
	
}
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	1f 91       	pop	r17
     830:	0f 91       	pop	r16
     832:	ff 90       	pop	r15
     834:	ef 90       	pop	r14
     836:	08 95       	ret

00000838 <can_get_message>:

int can_get_message(can_message_t* message)
{
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	ec 01       	movw	r28, r24
	
	if ((mcp2515_read(MCP_CANINTF) & 0x01) == 0x01)
     83e:	8c e2       	ldi	r24, 0x2C	; 44
     840:	0e 94 36 04 	call	0x86c	; 0x86c <mcp2515_read>
     844:	80 ff       	sbrs	r24, 0
     846:	0d c0       	rjmp	.+26     	; 0x862 <can_get_message+0x2a>
	{
		can_message_receive(message,0);
     848:	60 e0       	ldi	r22, 0x00	; 0
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	ce 01       	movw	r24, r28
     84e:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <can_message_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     852:	40 e0       	ldi	r20, 0x00	; 0
     854:	61 e0       	ldi	r22, 0x01	; 1
     856:	8c e2       	ldi	r24, 0x2C	; 44
     858:	0e 94 67 04 	call	0x8ce	; 0x8ce <mcp2515_bit_modify>
		return 1;
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	02 c0       	rjmp	.+4      	; 0x866 <can_get_message+0x2e>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
		return 1;
	}*/
	else
	{
		return 0;
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	08 95       	ret

0000086c <mcp2515_read>:
     86c:	cf 93       	push	r28
     86e:	c8 2f       	mov	r28, r24
     870:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     874:	83 e0       	ldi	r24, 0x03	; 3
     876:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     87a:	8c 2f       	mov	r24, r28
     87c:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     880:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <spi_receive>
     884:	c8 2f       	mov	r28, r24
     886:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     88a:	8c 2f       	mov	r24, r28
     88c:	cf 91       	pop	r28
     88e:	08 95       	ret

00000890 <mcp2515_write>:
     890:	cf 93       	push	r28
     892:	df 93       	push	r29
     894:	d8 2f       	mov	r29, r24
     896:	c6 2f       	mov	r28, r22
     898:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     89c:	82 e0       	ldi	r24, 0x02	; 2
     89e:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8a2:	8d 2f       	mov	r24, r29
     8a4:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8a8:	8c 2f       	mov	r24, r28
     8aa:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8ae:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	08 95       	ret

000008b8 <mcp2515_request_to_send>:
     8b8:	cf 93       	push	r28
     8ba:	c8 2f       	mov	r28, r24
     8bc:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     8c0:	8c 2f       	mov	r24, r28
     8c2:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8c6:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     8ca:	cf 91       	pop	r28
     8cc:	08 95       	ret

000008ce <mcp2515_bit_modify>:
     8ce:	1f 93       	push	r17
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	18 2f       	mov	r17, r24
     8d6:	d6 2f       	mov	r29, r22
     8d8:	c4 2f       	mov	r28, r20
     8da:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     8de:	85 e0       	ldi	r24, 0x05	; 5
     8e0:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8e4:	81 2f       	mov	r24, r17
     8e6:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8ea:	8d 2f       	mov	r24, r29
     8ec:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8f0:	8c 2f       	mov	r24, r28
     8f2:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     8f6:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	1f 91       	pop	r17
     900:	08 95       	ret

00000902 <mcp2515_reset>:
     902:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     906:	80 ec       	ldi	r24, 0xC0	; 192
     908:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     90c:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     910:	08 95       	ret

00000912 <mcp2515_read_status>:
     912:	cf 93       	push	r28
     914:	0e 94 db 06 	call	0xdb6	; 0xdb6 <spi_select>
     918:	83 e0       	ldi	r24, 0x03	; 3
     91a:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     91e:	8e e0       	ldi	r24, 0x0E	; 14
     920:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     924:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <spi_receive>
     928:	c8 2f       	mov	r28, r24
     92a:	0e 94 dd 06 	call	0xdba	; 0xdba <spi_deselect>
     92e:	8c 2f       	mov	r24, r28
     930:	cf 91       	pop	r28
     932:	08 95       	ret

00000934 <mcp2515_init>:
     934:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_init>
     938:	0e 94 81 04 	call	0x902	; 0x902 <mcp2515_reset>
     93c:	0e 94 89 04 	call	0x912	; 0x912 <mcp2515_read_status>
     940:	80 7e       	andi	r24, 0xE0	; 224
     942:	80 38       	cpi	r24, 0x80	; 128
     944:	21 f0       	breq	.+8      	; 0x94e <mcp2515_init+0x1a>
     946:	81 e3       	ldi	r24, 0x31	; 49
     948:	92 e0       	ldi	r25, 0x02	; 2
     94a:	0e 94 78 07 	call	0xef0	; 0xef0 <puts>
     94e:	08 95       	ret

00000950 <joy_calibrate>:
char x_ref = 0;
char y_ref = 0;



void joy_calibrate(){
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	ca e0       	ldi	r28, 0x0A	; 10
     95e:	d0 e0       	ldi	r29, 0x00	; 0
	int sum_x=0;
	int sum_y=0;
     960:	00 e0       	ldi	r16, 0x00	; 0
     962:	10 e0       	ldi	r17, 0x00	; 0
char y_ref = 0;



void joy_calibrate(){
	int sum_x=0;
     964:	e1 2c       	mov	r14, r1
     966:	f1 2c       	mov	r15, r1
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
		sum_x += ADC_read(1);
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     970:	e8 0e       	add	r14, r24
     972:	f1 1c       	adc	r15, r1
		sum_y += ADC_read(0);
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     97c:	08 0f       	add	r16, r24
     97e:	11 1d       	adc	r17, r1
     980:	21 97       	sbiw	r28, 0x01	; 1

void joy_calibrate(){
	int sum_x=0;
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
     982:	20 97       	sbiw	r28, 0x00	; 0
     984:	89 f7       	brne	.-30     	; 0x968 <joy_calibrate+0x18>
		sum_x += ADC_read(1);
		sum_y += ADC_read(0);
	}
	x_ref = sum_x/10;
     986:	2a e0       	ldi	r18, 0x0A	; 10
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	c7 01       	movw	r24, r14
     98c:	b9 01       	movw	r22, r18
     98e:	0e 94 05 07 	call	0xe0a	; 0xe0a <__divmodhi4>
     992:	60 93 55 02 	sts	0x0255, r22
	y_ref = sum_y/10;
     996:	c8 01       	movw	r24, r16
     998:	b9 01       	movw	r22, r18
     99a:	0e 94 05 07 	call	0xe0a	; 0xe0a <__divmodhi4>
     99e:	60 93 54 02 	sts	0x0254, r22
	
}
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	08 95       	ret

000009b0 <joy_init>:

void joy_init(){
	joy_calibrate();
     9b0:	0e 94 a8 04 	call	0x950	; 0x950 <joy_calibrate>
     9b4:	08 95       	ret

000009b6 <get_position>:
	
}

joy_position_t get_position(){
     9b6:	cf 93       	push	r28
     9b8:	df 93       	push	r29
	joy_position_t position;
	position.x_pos = (ADC_read(1) - x_ref)*100/128;
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	20 91 55 02 	lds	r18, 0x0255
     9c8:	82 1b       	sub	r24, r18
     9ca:	91 09       	sbc	r25, r1
     9cc:	44 e6       	ldi	r20, 0x64	; 100
     9ce:	48 9f       	mul	r20, r24
     9d0:	90 01       	movw	r18, r0
     9d2:	49 9f       	mul	r20, r25
     9d4:	30 0d       	add	r19, r0
     9d6:	11 24       	eor	r1, r1
     9d8:	33 23       	and	r19, r19
     9da:	14 f4       	brge	.+4      	; 0x9e0 <get_position+0x2a>
     9dc:	21 58       	subi	r18, 0x81	; 129
     9de:	3f 4f       	sbci	r19, 0xFF	; 255
     9e0:	e9 01       	movw	r28, r18
     9e2:	cc 0f       	add	r28, r28
     9e4:	cd 2f       	mov	r28, r29
     9e6:	cc 1f       	adc	r28, r28
     9e8:	dd 0b       	sbc	r29, r29
	position.y_pos = (ADC_read(0) - y_ref)*100/128;
     9ea:	80 e0       	ldi	r24, 0x00	; 0
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	20 91 54 02 	lds	r18, 0x0254
     9f8:	82 1b       	sub	r24, r18
     9fa:	91 09       	sbc	r25, r1
     9fc:	44 e6       	ldi	r20, 0x64	; 100
     9fe:	48 9f       	mul	r20, r24
     a00:	90 01       	movw	r18, r0
     a02:	49 9f       	mul	r20, r25
     a04:	30 0d       	add	r19, r0
     a06:	11 24       	eor	r1, r1
     a08:	33 23       	and	r19, r19
     a0a:	14 f4       	brge	.+4      	; 0xa10 <get_position+0x5a>
     a0c:	21 58       	subi	r18, 0x81	; 129
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
	return position;
     a10:	be 01       	movw	r22, r28
     a12:	c9 01       	movw	r24, r18
     a14:	88 0f       	add	r24, r24
     a16:	89 2f       	mov	r24, r25
     a18:	88 1f       	adc	r24, r24
     a1a:	99 0b       	sbc	r25, r25
}
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	08 95       	ret

00000a22 <get_direction>:


direction get_direction(){
	
	joy_position_t position = get_position();
     a22:	0e 94 db 04 	call	0x9b6	; 0x9b6 <get_position>
	
	if (position.x_pos > 70)
     a26:	67 34       	cpi	r22, 0x47	; 71
     a28:	71 05       	cpc	r23, r1
     a2a:	64 f4       	brge	.+24     	; 0xa44 <get_direction+0x22>
		{

			return RIGHT;
		}
	else if (position.x_pos < -70)
     a2c:	6a 3b       	cpi	r22, 0xBA	; 186
     a2e:	4f ef       	ldi	r20, 0xFF	; 255
     a30:	74 07       	cpc	r23, r20
     a32:	54 f0       	brlt	.+20     	; 0xa48 <get_direction+0x26>
		{

			return LEFT;
		}
	else if (position.y_pos > 70)
     a34:	87 34       	cpi	r24, 0x47	; 71
     a36:	91 05       	cpc	r25, r1
     a38:	4c f4       	brge	.+18     	; 0xa4c <get_direction+0x2a>
		{

			return UP;
		}
	else if (position.y_pos < -70)
     a3a:	8a 3b       	cpi	r24, 0xBA	; 186
     a3c:	9f 4f       	sbci	r25, 0xFF	; 255
     a3e:	44 f4       	brge	.+16     	; 0xa50 <get_direction+0x2e>
		{

			return DOWN;
     a40:	83 e0       	ldi	r24, 0x03	; 3
     a42:	08 95       	ret
	joy_position_t position = get_position();
	
	if (position.x_pos > 70)
		{

			return RIGHT;
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	08 95       	ret
		}
	else if (position.x_pos < -70)
		{

			return LEFT;
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	08 95       	ret
		}
	else if (position.y_pos > 70)
		{

			return UP;
     a4c:	82 e0       	ldi	r24, 0x02	; 2
     a4e:	08 95       	ret
			return DOWN;
		}
	else
		{

			return NEUTRAL;
     a50:	84 e0       	ldi	r24, 0x04	; 4
		}
	
}
     a52:	08 95       	ret

00000a54 <update_next>:
	last_dir = curr_dir;
}


void update_next(direction dir){
	if (dir == DOWN)
     a54:	83 30       	cpi	r24, 0x03	; 3
     a56:	41 f5       	brne	.+80     	; 0xaa8 <update_next+0x54>
	{
		if (next+1 <= current->number_children)
     a58:	80 91 59 02 	lds	r24, 0x0259
     a5c:	90 91 5a 02 	lds	r25, 0x025A
     a60:	ac 01       	movw	r20, r24
     a62:	4f 5f       	subi	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	e0 91 57 02 	lds	r30, 0x0257
     a6a:	f0 91 58 02 	lds	r31, 0x0258
     a6e:	27 85       	ldd	r18, Z+15	; 0x0f
     a70:	30 89       	ldd	r19, Z+16	; 0x10
     a72:	24 17       	cp	r18, r20
     a74:	35 07       	cpc	r19, r21
     a76:	b4 f1       	brlt	.+108    	; 0xae4 <update_next+0x90>
		{
			oled_goto(next,0);
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
			oled_print(" ");
     a7e:	85 e2       	ldi	r24, 0x25	; 37
     a80:	92 e0       	ldi	r25, 0x02	; 2
     a82:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
			next++;
     a86:	80 91 59 02 	lds	r24, 0x0259
     a8a:	90 91 5a 02 	lds	r25, 0x025A
     a8e:	01 96       	adiw	r24, 0x01	; 1
     a90:	90 93 5a 02 	sts	0x025A, r25
     a94:	80 93 59 02 	sts	0x0259, r24
			oled_goto(next,0);
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
			oled_print("-");
     a9e:	80 e5       	ldi	r24, 0x50	; 80
     aa0:	92 e0       	ldi	r25, 0x02	; 2
     aa2:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
     aa6:	08 95       	ret
		}
	}
	else
	{
		if (next > 1)
     aa8:	80 91 59 02 	lds	r24, 0x0259
     aac:	90 91 5a 02 	lds	r25, 0x025A
     ab0:	82 30       	cpi	r24, 0x02	; 2
     ab2:	91 05       	cpc	r25, r1
     ab4:	bc f0       	brlt	.+46     	; 0xae4 <update_next+0x90>
		{
			oled_goto(next,0);
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
			oled_print(" ");
     abc:	85 e2       	ldi	r24, 0x25	; 37
     abe:	92 e0       	ldi	r25, 0x02	; 2
     ac0:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
			next--;
     ac4:	80 91 59 02 	lds	r24, 0x0259
     ac8:	90 91 5a 02 	lds	r25, 0x025A
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	90 93 5a 02 	sts	0x025A, r25
     ad2:	80 93 59 02 	sts	0x0259, r24
			oled_goto(next,0);
     ad6:	60 e0       	ldi	r22, 0x00	; 0
     ad8:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
			oled_print("-");
     adc:	80 e5       	ldi	r24, 0x50	; 80
     ade:	92 e0       	ldi	r25, 0x02	; 2
     ae0:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
     ae4:	08 95       	ret

00000ae6 <menu_print>:
		}
	}
}

void menu_print(menu_t* object){
     ae6:	ef 92       	push	r14
     ae8:	ff 92       	push	r15
     aea:	0f 93       	push	r16
     aec:	1f 93       	push	r17
     aee:	cf 93       	push	r28
     af0:	df 93       	push	r29
     af2:	7c 01       	movw	r14, r24
	next = 1;
     af4:	81 e0       	ldi	r24, 0x01	; 1
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	90 93 5a 02 	sts	0x025A, r25
     afc:	80 93 59 02 	sts	0x0259, r24
	oled_clear_all();
     b00:	0e 94 ce 06 	call	0xd9c	; 0xd9c <oled_clear_all>
	oled_goto(0,0);
     b04:	60 e0       	ldi	r22, 0x00	; 0
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
	oled_print(object->name);
     b0c:	c7 01       	movw	r24, r14
     b0e:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	oled_goto(next,0);
     b12:	60 e0       	ldi	r22, 0x00	; 0
     b14:	80 91 59 02 	lds	r24, 0x0259
     b18:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
	oled_print("-");
     b1c:	80 e5       	ldi	r24, 0x50	; 80
     b1e:	92 e0       	ldi	r25, 0x02	; 2
     b20:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     b24:	f7 01       	movw	r30, r14
     b26:	87 85       	ldd	r24, Z+15	; 0x0f
     b28:	90 89       	ldd	r25, Z+16	; 0x10
     b2a:	01 96       	adiw	r24, 0x01	; 1
     b2c:	02 97       	sbiw	r24, 0x02	; 2
     b2e:	c4 f0       	brlt	.+48     	; 0xb60 <menu_print+0x7a>
     b30:	87 01       	movw	r16, r14
     b32:	0d 5e       	subi	r16, 0xED	; 237
     b34:	1f 4f       	sbci	r17, 0xFF	; 255
     b36:	c1 e0       	ldi	r28, 0x01	; 1
     b38:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i,8);
     b3a:	68 e0       	ldi	r22, 0x08	; 8
     b3c:	8c 2f       	mov	r24, r28
     b3e:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
		oled_print((object->children[i-1])->name);
     b42:	f8 01       	movw	r30, r16
     b44:	81 91       	ld	r24, Z+
     b46:	91 91       	ld	r25, Z+
     b48:	8f 01       	movw	r16, r30
     b4a:	0e 94 81 06 	call	0xd02	; 0xd02 <oled_print>
	oled_print(object->name);
	oled_goto(next,0);
	oled_print("-");
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     b4e:	21 96       	adiw	r28, 0x01	; 1
     b50:	f7 01       	movw	r30, r14
     b52:	27 85       	ldd	r18, Z+15	; 0x0f
     b54:	30 89       	ldd	r19, Z+16	; 0x10
     b56:	2f 5f       	subi	r18, 0xFF	; 255
     b58:	3f 4f       	sbci	r19, 0xFF	; 255
     b5a:	c2 17       	cp	r28, r18
     b5c:	d3 07       	cpc	r29, r19
     b5e:	6c f3       	brlt	.-38     	; 0xb3a <menu_print+0x54>
	{
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}
     b60:	df 91       	pop	r29
     b62:	cf 91       	pop	r28
     b64:	1f 91       	pop	r17
     b66:	0f 91       	pop	r16
     b68:	ff 90       	pop	r15
     b6a:	ef 90       	pop	r14
     b6c:	08 95       	ret

00000b6e <menu_init>:
menu_t menu = {"Main Menu",3,NULL,{&sub1,&sub2,&sub3}};

void menu_init()
{
	// Setup the hierarchy
	sub3sub1.parent= &sub3;
     b6e:	8e e3       	ldi	r24, 0x3E	; 62
     b70:	91 e0       	ldi	r25, 0x01	; 1
     b72:	90 93 d4 01 	sts	0x01D4, r25
     b76:	80 93 d3 01 	sts	0x01D3, r24
	sub3sub2.parent= &sub3;
     b7a:	90 93 b3 01 	sts	0x01B3, r25
     b7e:	80 93 b2 01 	sts	0x01B2, r24
	sub1.parent = &menu;	
     b82:	8d e1       	ldi	r24, 0x1D	; 29
     b84:	91 e0       	ldi	r25, 0x01	; 1
     b86:	90 93 92 01 	sts	0x0192, r25
     b8a:	80 93 91 01 	sts	0x0191, r24
	sub2.parent = &menu;
     b8e:	90 93 71 01 	sts	0x0171, r25
     b92:	80 93 70 01 	sts	0x0170, r24
	sub3.parent = &menu;
     b96:	90 93 50 01 	sts	0x0150, r25
     b9a:	80 93 4f 01 	sts	0x014F, r24
	current = &menu;
     b9e:	90 93 58 02 	sts	0x0258, r25
     ba2:	80 93 57 02 	sts	0x0257, r24
	menu_print(current);
     ba6:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
     baa:	08 95       	ret

00000bac <menu_fsm>:
void menu_fsm()
{
	static direction curr_dir;
	static direction last_dir = NEUTRAL; 
	
	curr_dir = get_direction();
     bac:	0e 94 11 05 	call	0xa22	; 0xa22 <get_direction>
     bb0:	80 93 56 02 	sts	0x0256, r24
	if (curr_dir != last_dir)
     bb4:	90 91 1c 01 	lds	r25, 0x011C
     bb8:	89 17       	cp	r24, r25
     bba:	09 f4       	brne	.+2      	; 0xbbe <menu_fsm+0x12>
     bbc:	7f c0       	rjmp	.+254    	; 0xcbc <menu_fsm+0x110>
	{
		switch (curr_dir){
     bbe:	81 30       	cpi	r24, 0x01	; 1
     bc0:	49 f0       	breq	.+18     	; 0xbd4 <menu_fsm+0x28>
     bc2:	08 f4       	brcc	.+2      	; 0xbc6 <menu_fsm+0x1a>
     bc4:	65 c0       	rjmp	.+202    	; 0xc90 <menu_fsm+0xe4>
     bc6:	82 30       	cpi	r24, 0x02	; 2
     bc8:	09 f4       	brne	.+2      	; 0xbcc <menu_fsm+0x20>
     bca:	71 c0       	rjmp	.+226    	; 0xcae <menu_fsm+0x102>
     bcc:	83 30       	cpi	r24, 0x03	; 3
     bce:	09 f4       	brne	.+2      	; 0xbd2 <menu_fsm+0x26>
     bd0:	72 c0       	rjmp	.+228    	; 0xcb6 <menu_fsm+0x10a>
     bd2:	74 c0       	rjmp	.+232    	; 0xcbc <menu_fsm+0x110>
			case RIGHT:
				switch(current->children[next-1]->name[0])
     bd4:	80 91 57 02 	lds	r24, 0x0257
     bd8:	90 91 58 02 	lds	r25, 0x0258
     bdc:	e0 91 59 02 	lds	r30, 0x0259
     be0:	f0 91 5a 02 	lds	r31, 0x025A
     be4:	31 97       	sbiw	r30, 0x01	; 1
     be6:	ee 0f       	add	r30, r30
     be8:	ff 1f       	adc	r31, r31
     bea:	e8 0f       	add	r30, r24
     bec:	f9 1f       	adc	r31, r25
     bee:	03 88       	ldd	r0, Z+19	; 0x13
     bf0:	f4 89       	ldd	r31, Z+20	; 0x14
     bf2:	e0 2d       	mov	r30, r0
     bf4:	80 81       	ld	r24, Z
     bf6:	80 35       	cpi	r24, 0x50	; 80
     bf8:	59 f0       	breq	.+22     	; 0xc10 <menu_fsm+0x64>
     bfa:	28 f4       	brcc	.+10     	; 0xc06 <menu_fsm+0x5a>
     bfc:	83 34       	cpi	r24, 0x43	; 67
     bfe:	c9 f1       	breq	.+114    	; 0xc72 <menu_fsm+0xc6>
     c00:	88 34       	cpi	r24, 0x48	; 72
     c02:	c9 f0       	breq	.+50     	; 0xc36 <menu_fsm+0x8a>
     c04:	5b c0       	rjmp	.+182    	; 0xcbc <menu_fsm+0x110>
     c06:	82 35       	cpi	r24, 0x52	; 82
     c08:	29 f1       	breq	.+74     	; 0xc54 <menu_fsm+0xa8>
     c0a:	83 35       	cpi	r24, 0x53	; 83
     c0c:	d9 f0       	breq	.+54     	; 0xc44 <menu_fsm+0x98>
     c0e:	56 c0       	rjmp	.+172    	; 0xcbc <menu_fsm+0x110>
				{
					
					case 'P':       // [P]lay Game
						current = current->children[next-1];
     c10:	f0 93 58 02 	sts	0x0258, r31
     c14:	e0 93 57 02 	sts	0x0257, r30
						play_game();
     c18:	0e 94 a1 02 	call	0x542	; 0x542 <play_game>
						current = current->parent;
     c1c:	e0 91 57 02 	lds	r30, 0x0257
     c20:	f0 91 58 02 	lds	r31, 0x0258
     c24:	81 89       	ldd	r24, Z+17	; 0x11
     c26:	92 89       	ldd	r25, Z+18	; 0x12
     c28:	90 93 58 02 	sts	0x0258, r25
     c2c:	80 93 57 02 	sts	0x0257, r24
						menu_print(current);
     c30:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
						
						break;
     c34:	43 c0       	rjmp	.+134    	; 0xcbc <menu_fsm+0x110>
					case 'H':		// [H]ighscores
						current = current->children[next-1];
     c36:	f0 93 58 02 	sts	0x0258, r31
     c3a:	e0 93 57 02 	sts	0x0257, r30
						print_highscore();
     c3e:	0e 94 1c 02 	call	0x438	; 0x438 <print_highscore>
						break;
     c42:	3c c0       	rjmp	.+120    	; 0xcbc <menu_fsm+0x110>
					case 'S':		// [S]ettings
						current = current->children[next-1];
     c44:	f0 93 58 02 	sts	0x0258, r31
     c48:	e0 93 57 02 	sts	0x0257, r30
						menu_print(current);
     c4c:	cf 01       	movw	r24, r30
     c4e:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
						break;
     c52:	34 c0       	rjmp	.+104    	; 0xcbc <menu_fsm+0x110>
					case 'R' :		// [R]eset Scores
						reset_eeprom();
     c54:	0e 94 8d 03 	call	0x71a	; 0x71a <reset_eeprom>
						current = current->parent;
     c58:	e0 91 57 02 	lds	r30, 0x0257
     c5c:	f0 91 58 02 	lds	r31, 0x0258
     c60:	81 89       	ldd	r24, Z+17	; 0x11
     c62:	92 89       	ldd	r25, Z+18	; 0x12
     c64:	90 93 58 02 	sts	0x0258, r25
     c68:	80 93 57 02 	sts	0x0257, r24
						menu_print(current);
     c6c:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
						break;
     c70:	25 c0       	rjmp	.+74     	; 0xcbc <menu_fsm+0x110>
					case 'C' :		// [C]alibrate
						joy_calibrate();
     c72:	0e 94 a8 04 	call	0x950	; 0x950 <joy_calibrate>
						current = current->parent;
     c76:	e0 91 57 02 	lds	r30, 0x0257
     c7a:	f0 91 58 02 	lds	r31, 0x0258
     c7e:	81 89       	ldd	r24, Z+17	; 0x11
     c80:	92 89       	ldd	r25, Z+18	; 0x12
     c82:	90 93 58 02 	sts	0x0258, r25
     c86:	80 93 57 02 	sts	0x0257, r24
						menu_print(current);
     c8a:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
					break;				
     c8e:	16 c0       	rjmp	.+44     	; 0xcbc <menu_fsm+0x110>
			}
			break;
				
		case LEFT:
			if (current->parent != NULL){
     c90:	e0 91 57 02 	lds	r30, 0x0257
     c94:	f0 91 58 02 	lds	r31, 0x0258
     c98:	81 89       	ldd	r24, Z+17	; 0x11
     c9a:	92 89       	ldd	r25, Z+18	; 0x12
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	71 f0       	breq	.+28     	; 0xcbc <menu_fsm+0x110>
				current = current->parent;
     ca0:	90 93 58 02 	sts	0x0258, r25
     ca4:	80 93 57 02 	sts	0x0257, r24
				menu_print(current);
     ca8:	0e 94 73 05 	call	0xae6	; 0xae6 <menu_print>
     cac:	07 c0       	rjmp	.+14     	; 0xcbc <menu_fsm+0x110>
			}
			break;
		case UP:
			update_next(curr_dir);
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	0e 94 2a 05 	call	0xa54	; 0xa54 <update_next>
			break;
     cb4:	03 c0       	rjmp	.+6      	; 0xcbc <menu_fsm+0x110>
		case DOWN:
			update_next(curr_dir);
     cb6:	83 e0       	ldi	r24, 0x03	; 3
     cb8:	0e 94 2a 05 	call	0xa54	; 0xa54 <update_next>
			break;
			default:
			break;
		}
	}
	last_dir = curr_dir;
     cbc:	80 91 56 02 	lds	r24, 0x0256
     cc0:	80 93 1c 01 	sts	0x011C, r24
     cc4:	08 95       	ret

00000cc6 <oled_print_char>:
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	ec 01       	movw	r28, r24
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	a0 e0       	ldi	r26, 0x00	; 0
     cd2:	b2 e1       	ldi	r27, 0x12	; 18
     cd4:	e8 81       	ld	r30, Y
     cd6:	f0 e0       	ldi	r31, 0x00	; 0
     cd8:	b0 97       	sbiw	r30, 0x20	; 32
     cda:	ee 0f       	add	r30, r30
     cdc:	ff 1f       	adc	r31, r31
     cde:	ee 0f       	add	r30, r30
     ce0:	ff 1f       	adc	r31, r31
     ce2:	ee 0f       	add	r30, r30
     ce4:	ff 1f       	adc	r31, r31
     ce6:	e2 0f       	add	r30, r18
     ce8:	f3 1f       	adc	r31, r19
     cea:	e0 59       	subi	r30, 0x90	; 144
     cec:	ff 4f       	sbci	r31, 0xFF	; 255
     cee:	e4 91       	lpm	r30, Z
     cf0:	ec 93       	st	X, r30
     cf2:	2f 5f       	subi	r18, 0xFF	; 255
     cf4:	3f 4f       	sbci	r19, 0xFF	; 255
     cf6:	28 30       	cpi	r18, 0x08	; 8
     cf8:	31 05       	cpc	r19, r1
     cfa:	61 f7       	brne	.-40     	; 0xcd4 <oled_print_char+0xe>
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	08 95       	ret

00000d02 <oled_print>:
     d02:	cf 93       	push	r28
     d04:	df 93       	push	r29
     d06:	fc 01       	movw	r30, r24
     d08:	20 81       	ld	r18, Z
     d0a:	22 23       	and	r18, r18
     d0c:	51 f0       	breq	.+20     	; 0xd22 <oled_print+0x20>
     d0e:	ec 01       	movw	r28, r24
     d10:	21 96       	adiw	r28, 0x01	; 1
     d12:	0e 94 63 06 	call	0xcc6	; 0xcc6 <oled_print_char>
     d16:	ce 01       	movw	r24, r28
     d18:	21 96       	adiw	r28, 0x01	; 1
     d1a:	fc 01       	movw	r30, r24
     d1c:	20 81       	ld	r18, Z
     d1e:	21 11       	cpse	r18, r1
     d20:	f8 cf       	rjmp	.-16     	; 0xd12 <oled_print+0x10>
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	08 95       	ret

00000d28 <oled_init>:
     d28:	e0 e0       	ldi	r30, 0x00	; 0
     d2a:	f0 e1       	ldi	r31, 0x10	; 16
     d2c:	8e ea       	ldi	r24, 0xAE	; 174
     d2e:	80 83       	st	Z, r24
     d30:	81 ea       	ldi	r24, 0xA1	; 161
     d32:	80 83       	st	Z, r24
     d34:	8a ed       	ldi	r24, 0xDA	; 218
     d36:	80 83       	st	Z, r24
     d38:	82 e1       	ldi	r24, 0x12	; 18
     d3a:	80 83       	st	Z, r24
     d3c:	88 ec       	ldi	r24, 0xC8	; 200
     d3e:	80 83       	st	Z, r24
     d40:	88 ea       	ldi	r24, 0xA8	; 168
     d42:	80 83       	st	Z, r24
     d44:	8f e3       	ldi	r24, 0x3F	; 63
     d46:	80 83       	st	Z, r24
     d48:	85 ed       	ldi	r24, 0xD5	; 213
     d4a:	80 83       	st	Z, r24
     d4c:	80 e8       	ldi	r24, 0x80	; 128
     d4e:	80 83       	st	Z, r24
     d50:	81 e8       	ldi	r24, 0x81	; 129
     d52:	80 83       	st	Z, r24
     d54:	80 e5       	ldi	r24, 0x50	; 80
     d56:	80 83       	st	Z, r24
     d58:	89 ed       	ldi	r24, 0xD9	; 217
     d5a:	80 83       	st	Z, r24
     d5c:	81 e2       	ldi	r24, 0x21	; 33
     d5e:	80 83       	st	Z, r24
     d60:	80 e2       	ldi	r24, 0x20	; 32
     d62:	80 83       	st	Z, r24
     d64:	10 82       	st	Z, r1
     d66:	8b ed       	ldi	r24, 0xDB	; 219
     d68:	80 83       	st	Z, r24
     d6a:	80 e3       	ldi	r24, 0x30	; 48
     d6c:	80 83       	st	Z, r24
     d6e:	8d ea       	ldi	r24, 0xAD	; 173
     d70:	80 83       	st	Z, r24
     d72:	10 82       	st	Z, r1
     d74:	84 ea       	ldi	r24, 0xA4	; 164
     d76:	80 83       	st	Z, r24
     d78:	86 ea       	ldi	r24, 0xA6	; 166
     d7a:	80 83       	st	Z, r24
     d7c:	8f ea       	ldi	r24, 0xAF	; 175
     d7e:	80 83       	st	Z, r24
     d80:	08 95       	ret

00000d82 <oled_goto>:
     d82:	e0 e0       	ldi	r30, 0x00	; 0
     d84:	f0 e1       	ldi	r31, 0x10	; 16
     d86:	91 e2       	ldi	r25, 0x21	; 33
     d88:	90 83       	st	Z, r25
     d8a:	60 83       	st	Z, r22
     d8c:	9f e7       	ldi	r25, 0x7F	; 127
     d8e:	90 83       	st	Z, r25
     d90:	92 e2       	ldi	r25, 0x22	; 34
     d92:	90 83       	st	Z, r25
     d94:	80 83       	st	Z, r24
     d96:	87 e0       	ldi	r24, 0x07	; 7
     d98:	80 83       	st	Z, r24
     d9a:	08 95       	ret

00000d9c <oled_clear_all>:
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	0e 94 c1 06 	call	0xd82	; 0xd82 <oled_goto>
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	94 e0       	ldi	r25, 0x04	; 4
     da8:	e0 e0       	ldi	r30, 0x00	; 0
     daa:	f2 e1       	ldi	r31, 0x12	; 18
     dac:	10 82       	st	Z, r1
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	00 97       	sbiw	r24, 0x00	; 0
     db2:	e1 f7       	brne	.-8      	; 0xdac <oled_clear_all+0x10>
     db4:	08 95       	ret

00000db6 <spi_select>:
     db6:	c4 98       	cbi	0x18, 4	; 24
     db8:	08 95       	ret

00000dba <spi_deselect>:
     dba:	c4 9a       	sbi	0x18, 4	; 24
     dbc:	08 95       	ret

00000dbe <spi_transmit>:
     dbe:	8f b9       	out	0x0f, r24	; 15
     dc0:	77 9b       	sbis	0x0e, 7	; 14
     dc2:	fe cf       	rjmp	.-4      	; 0xdc0 <spi_transmit+0x2>
     dc4:	08 95       	ret

00000dc6 <spi_receive>:
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	0e 94 df 06 	call	0xdbe	; 0xdbe <spi_transmit>
     dcc:	8f b1       	in	r24, 0x0f	; 15
     dce:	08 95       	ret

00000dd0 <spi_init>:
     dd0:	87 b3       	in	r24, 0x17	; 23
     dd2:	80 6b       	ori	r24, 0xB0	; 176
     dd4:	87 bb       	out	0x17, r24	; 23
     dd6:	81 e5       	ldi	r24, 0x51	; 81
     dd8:	8d b9       	out	0x0d, r24	; 13
     dda:	08 95       	ret

00000ddc <USART_transmit>:
	fdevopen(USART_transmit,USART_receive);
}

int USART_transmit(unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)))
     ddc:	5d 9b       	sbis	0x0b, 5	; 11
     dde:	fe cf       	rjmp	.-4      	; 0xddc <USART_transmit>
		;
	UDR0 = data;
     de0:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	08 95       	ret

00000de8 <USART_receive>:

unsigned char USART_receive (void){
	
	while( !(UCSR0A & (1<<RXC0)))
     de8:	5f 9b       	sbis	0x0b, 7	; 11
     dea:	fe cf       	rjmp	.-4      	; 0xde8 <USART_receive>
		;
	return UDR0;
     dec:	8c b1       	in	r24, 0x0c	; 12
	
     dee:	08 95       	ret

00000df0 <USART_init>:
#include <avr/io.h>
#include <stdio.h>

void USART_init(unsigned int ubrr){

	UBRR0H = (unsigned char)(ubrr>>8);
     df0:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;	
     df2:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     df4:	88 e1       	ldi	r24, 0x18	; 24
     df6:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     df8:	8e e8       	ldi	r24, 0x8E	; 142
     dfa:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_transmit,USART_receive);
     dfc:	64 ef       	ldi	r22, 0xF4	; 244
     dfe:	76 e0       	ldi	r23, 0x06	; 6
     e00:	8e ee       	ldi	r24, 0xEE	; 238
     e02:	96 e0       	ldi	r25, 0x06	; 6
     e04:	0e 94 2d 07 	call	0xe5a	; 0xe5a <fdevopen>
     e08:	08 95       	ret

00000e0a <__divmodhi4>:
     e0a:	97 fb       	bst	r25, 7
     e0c:	07 2e       	mov	r0, r23
     e0e:	16 f4       	brtc	.+4      	; 0xe14 <__divmodhi4+0xa>
     e10:	00 94       	com	r0
     e12:	07 d0       	rcall	.+14     	; 0xe22 <__divmodhi4_neg1>
     e14:	77 fd       	sbrc	r23, 7
     e16:	09 d0       	rcall	.+18     	; 0xe2a <__divmodhi4_neg2>
     e18:	0e 94 19 07 	call	0xe32	; 0xe32 <__udivmodhi4>
     e1c:	07 fc       	sbrc	r0, 7
     e1e:	05 d0       	rcall	.+10     	; 0xe2a <__divmodhi4_neg2>
     e20:	3e f4       	brtc	.+14     	; 0xe30 <__divmodhi4_exit>

00000e22 <__divmodhi4_neg1>:
     e22:	90 95       	com	r25
     e24:	81 95       	neg	r24
     e26:	9f 4f       	sbci	r25, 0xFF	; 255
     e28:	08 95       	ret

00000e2a <__divmodhi4_neg2>:
     e2a:	70 95       	com	r23
     e2c:	61 95       	neg	r22
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255

00000e30 <__divmodhi4_exit>:
     e30:	08 95       	ret

00000e32 <__udivmodhi4>:
     e32:	aa 1b       	sub	r26, r26
     e34:	bb 1b       	sub	r27, r27
     e36:	51 e1       	ldi	r21, 0x11	; 17
     e38:	07 c0       	rjmp	.+14     	; 0xe48 <__udivmodhi4_ep>

00000e3a <__udivmodhi4_loop>:
     e3a:	aa 1f       	adc	r26, r26
     e3c:	bb 1f       	adc	r27, r27
     e3e:	a6 17       	cp	r26, r22
     e40:	b7 07       	cpc	r27, r23
     e42:	10 f0       	brcs	.+4      	; 0xe48 <__udivmodhi4_ep>
     e44:	a6 1b       	sub	r26, r22
     e46:	b7 0b       	sbc	r27, r23

00000e48 <__udivmodhi4_ep>:
     e48:	88 1f       	adc	r24, r24
     e4a:	99 1f       	adc	r25, r25
     e4c:	5a 95       	dec	r21
     e4e:	a9 f7       	brne	.-22     	; 0xe3a <__udivmodhi4_loop>
     e50:	80 95       	com	r24
     e52:	90 95       	com	r25
     e54:	bc 01       	movw	r22, r24
     e56:	cd 01       	movw	r24, r26
     e58:	08 95       	ret

00000e5a <fdevopen>:
     e5a:	0f 93       	push	r16
     e5c:	1f 93       	push	r17
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	ec 01       	movw	r28, r24
     e64:	8b 01       	movw	r16, r22
     e66:	00 97       	sbiw	r24, 0x00	; 0
     e68:	31 f4       	brne	.+12     	; 0xe76 <fdevopen+0x1c>
     e6a:	61 15       	cp	r22, r1
     e6c:	71 05       	cpc	r23, r1
     e6e:	19 f4       	brne	.+6      	; 0xe76 <fdevopen+0x1c>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	38 c0       	rjmp	.+112    	; 0xee6 <fdevopen+0x8c>
     e76:	6e e0       	ldi	r22, 0x0E	; 14
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 a4 09 	call	0x1348	; 0x1348 <calloc>
     e82:	fc 01       	movw	r30, r24
     e84:	00 97       	sbiw	r24, 0x00	; 0
     e86:	a1 f3       	breq	.-24     	; 0xe70 <fdevopen+0x16>
     e88:	80 e8       	ldi	r24, 0x80	; 128
     e8a:	83 83       	std	Z+3, r24	; 0x03
     e8c:	01 15       	cp	r16, r1
     e8e:	11 05       	cpc	r17, r1
     e90:	71 f0       	breq	.+28     	; 0xeae <fdevopen+0x54>
     e92:	13 87       	std	Z+11, r17	; 0x0b
     e94:	02 87       	std	Z+10, r16	; 0x0a
     e96:	81 e8       	ldi	r24, 0x81	; 129
     e98:	83 83       	std	Z+3, r24	; 0x03
     e9a:	80 91 5b 02 	lds	r24, 0x025B
     e9e:	90 91 5c 02 	lds	r25, 0x025C
     ea2:	89 2b       	or	r24, r25
     ea4:	21 f4       	brne	.+8      	; 0xeae <fdevopen+0x54>
     ea6:	f0 93 5c 02 	sts	0x025C, r31
     eaa:	e0 93 5b 02 	sts	0x025B, r30
     eae:	20 97       	sbiw	r28, 0x00	; 0
     eb0:	c9 f0       	breq	.+50     	; 0xee4 <fdevopen+0x8a>
     eb2:	d1 87       	std	Z+9, r29	; 0x09
     eb4:	c0 87       	std	Z+8, r28	; 0x08
     eb6:	83 81       	ldd	r24, Z+3	; 0x03
     eb8:	82 60       	ori	r24, 0x02	; 2
     eba:	83 83       	std	Z+3, r24	; 0x03
     ebc:	80 91 5d 02 	lds	r24, 0x025D
     ec0:	90 91 5e 02 	lds	r25, 0x025E
     ec4:	89 2b       	or	r24, r25
     ec6:	71 f4       	brne	.+28     	; 0xee4 <fdevopen+0x8a>
     ec8:	f0 93 5e 02 	sts	0x025E, r31
     ecc:	e0 93 5d 02 	sts	0x025D, r30
     ed0:	80 91 5f 02 	lds	r24, 0x025F
     ed4:	90 91 60 02 	lds	r25, 0x0260
     ed8:	89 2b       	or	r24, r25
     eda:	21 f4       	brne	.+8      	; 0xee4 <fdevopen+0x8a>
     edc:	f0 93 60 02 	sts	0x0260, r31
     ee0:	e0 93 5f 02 	sts	0x025F, r30
     ee4:	cf 01       	movw	r24, r30
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	1f 91       	pop	r17
     eec:	0f 91       	pop	r16
     eee:	08 95       	ret

00000ef0 <puts>:
     ef0:	0f 93       	push	r16
     ef2:	1f 93       	push	r17
     ef4:	cf 93       	push	r28
     ef6:	df 93       	push	r29
     ef8:	e0 91 5d 02 	lds	r30, 0x025D
     efc:	f0 91 5e 02 	lds	r31, 0x025E
     f00:	23 81       	ldd	r18, Z+3	; 0x03
     f02:	21 ff       	sbrs	r18, 1
     f04:	1b c0       	rjmp	.+54     	; 0xf3c <puts+0x4c>
     f06:	ec 01       	movw	r28, r24
     f08:	00 e0       	ldi	r16, 0x00	; 0
     f0a:	10 e0       	ldi	r17, 0x00	; 0
     f0c:	89 91       	ld	r24, Y+
     f0e:	60 91 5d 02 	lds	r22, 0x025D
     f12:	70 91 5e 02 	lds	r23, 0x025E
     f16:	db 01       	movw	r26, r22
     f18:	18 96       	adiw	r26, 0x08	; 8
     f1a:	ed 91       	ld	r30, X+
     f1c:	fc 91       	ld	r31, X
     f1e:	19 97       	sbiw	r26, 0x09	; 9
     f20:	88 23       	and	r24, r24
     f22:	31 f0       	breq	.+12     	; 0xf30 <puts+0x40>
     f24:	09 95       	icall
     f26:	89 2b       	or	r24, r25
     f28:	89 f3       	breq	.-30     	; 0xf0c <puts+0x1c>
     f2a:	0f ef       	ldi	r16, 0xFF	; 255
     f2c:	1f ef       	ldi	r17, 0xFF	; 255
     f2e:	ee cf       	rjmp	.-36     	; 0xf0c <puts+0x1c>
     f30:	8a e0       	ldi	r24, 0x0A	; 10
     f32:	09 95       	icall
     f34:	89 2b       	or	r24, r25
     f36:	11 f4       	brne	.+4      	; 0xf3c <puts+0x4c>
     f38:	c8 01       	movw	r24, r16
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <puts+0x50>
     f3c:	8f ef       	ldi	r24, 0xFF	; 255
     f3e:	9f ef       	ldi	r25, 0xFF	; 255
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
     f44:	1f 91       	pop	r17
     f46:	0f 91       	pop	r16
     f48:	08 95       	ret

00000f4a <sprintf>:
     f4a:	ae e0       	ldi	r26, 0x0E	; 14
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	eb ea       	ldi	r30, 0xAB	; 171
     f50:	f7 e0       	ldi	r31, 0x07	; 7
     f52:	0c 94 bf 0b 	jmp	0x177e	; 0x177e <__prologue_saves__+0x1c>
     f56:	0d 89       	ldd	r16, Y+21	; 0x15
     f58:	1e 89       	ldd	r17, Y+22	; 0x16
     f5a:	86 e0       	ldi	r24, 0x06	; 6
     f5c:	8c 83       	std	Y+4, r24	; 0x04
     f5e:	1a 83       	std	Y+2, r17	; 0x02
     f60:	09 83       	std	Y+1, r16	; 0x01
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	9f e7       	ldi	r25, 0x7F	; 127
     f66:	9e 83       	std	Y+6, r25	; 0x06
     f68:	8d 83       	std	Y+5, r24	; 0x05
     f6a:	ae 01       	movw	r20, r28
     f6c:	47 5e       	subi	r20, 0xE7	; 231
     f6e:	5f 4f       	sbci	r21, 0xFF	; 255
     f70:	6f 89       	ldd	r22, Y+23	; 0x17
     f72:	78 8d       	ldd	r23, Y+24	; 0x18
     f74:	ce 01       	movw	r24, r28
     f76:	01 96       	adiw	r24, 0x01	; 1
     f78:	0e 94 c7 07 	call	0xf8e	; 0xf8e <vfprintf>
     f7c:	ef 81       	ldd	r30, Y+7	; 0x07
     f7e:	f8 85       	ldd	r31, Y+8	; 0x08
     f80:	e0 0f       	add	r30, r16
     f82:	f1 1f       	adc	r31, r17
     f84:	10 82       	st	Z, r1
     f86:	2e 96       	adiw	r28, 0x0e	; 14
     f88:	e4 e0       	ldi	r30, 0x04	; 4
     f8a:	0c 94 db 0b 	jmp	0x17b6	; 0x17b6 <__epilogue_restores__+0x1c>

00000f8e <vfprintf>:
     f8e:	ac e0       	ldi	r26, 0x0C	; 12
     f90:	b0 e0       	ldi	r27, 0x00	; 0
     f92:	ed ec       	ldi	r30, 0xCD	; 205
     f94:	f7 e0       	ldi	r31, 0x07	; 7
     f96:	0c 94 b1 0b 	jmp	0x1762	; 0x1762 <__prologue_saves__>
     f9a:	7c 01       	movw	r14, r24
     f9c:	6b 01       	movw	r12, r22
     f9e:	8a 01       	movw	r16, r20
     fa0:	fc 01       	movw	r30, r24
     fa2:	17 82       	std	Z+7, r1	; 0x07
     fa4:	16 82       	std	Z+6, r1	; 0x06
     fa6:	83 81       	ldd	r24, Z+3	; 0x03
     fa8:	81 ff       	sbrs	r24, 1
     faa:	bd c1       	rjmp	.+890    	; 0x1326 <vfprintf+0x398>
     fac:	ce 01       	movw	r24, r28
     fae:	01 96       	adiw	r24, 0x01	; 1
     fb0:	4c 01       	movw	r8, r24
     fb2:	f7 01       	movw	r30, r14
     fb4:	93 81       	ldd	r25, Z+3	; 0x03
     fb6:	f6 01       	movw	r30, r12
     fb8:	93 fd       	sbrc	r25, 3
     fba:	85 91       	lpm	r24, Z+
     fbc:	93 ff       	sbrs	r25, 3
     fbe:	81 91       	ld	r24, Z+
     fc0:	6f 01       	movw	r12, r30
     fc2:	88 23       	and	r24, r24
     fc4:	09 f4       	brne	.+2      	; 0xfc8 <vfprintf+0x3a>
     fc6:	ab c1       	rjmp	.+854    	; 0x131e <vfprintf+0x390>
     fc8:	85 32       	cpi	r24, 0x25	; 37
     fca:	39 f4       	brne	.+14     	; 0xfda <vfprintf+0x4c>
     fcc:	93 fd       	sbrc	r25, 3
     fce:	85 91       	lpm	r24, Z+
     fd0:	93 ff       	sbrs	r25, 3
     fd2:	81 91       	ld	r24, Z+
     fd4:	6f 01       	movw	r12, r30
     fd6:	85 32       	cpi	r24, 0x25	; 37
     fd8:	29 f4       	brne	.+10     	; 0xfe4 <vfprintf+0x56>
     fda:	b7 01       	movw	r22, r14
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
     fe2:	e7 cf       	rjmp	.-50     	; 0xfb2 <vfprintf+0x24>
     fe4:	51 2c       	mov	r5, r1
     fe6:	31 2c       	mov	r3, r1
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	20 32       	cpi	r18, 0x20	; 32
     fec:	a0 f4       	brcc	.+40     	; 0x1016 <vfprintf+0x88>
     fee:	8b 32       	cpi	r24, 0x2B	; 43
     ff0:	69 f0       	breq	.+26     	; 0x100c <vfprintf+0x7e>
     ff2:	30 f4       	brcc	.+12     	; 0x1000 <vfprintf+0x72>
     ff4:	80 32       	cpi	r24, 0x20	; 32
     ff6:	59 f0       	breq	.+22     	; 0x100e <vfprintf+0x80>
     ff8:	83 32       	cpi	r24, 0x23	; 35
     ffa:	69 f4       	brne	.+26     	; 0x1016 <vfprintf+0x88>
     ffc:	20 61       	ori	r18, 0x10	; 16
     ffe:	2c c0       	rjmp	.+88     	; 0x1058 <vfprintf+0xca>
    1000:	8d 32       	cpi	r24, 0x2D	; 45
    1002:	39 f0       	breq	.+14     	; 0x1012 <vfprintf+0x84>
    1004:	80 33       	cpi	r24, 0x30	; 48
    1006:	39 f4       	brne	.+14     	; 0x1016 <vfprintf+0x88>
    1008:	21 60       	ori	r18, 0x01	; 1
    100a:	26 c0       	rjmp	.+76     	; 0x1058 <vfprintf+0xca>
    100c:	22 60       	ori	r18, 0x02	; 2
    100e:	24 60       	ori	r18, 0x04	; 4
    1010:	23 c0       	rjmp	.+70     	; 0x1058 <vfprintf+0xca>
    1012:	28 60       	ori	r18, 0x08	; 8
    1014:	21 c0       	rjmp	.+66     	; 0x1058 <vfprintf+0xca>
    1016:	27 fd       	sbrc	r18, 7
    1018:	27 c0       	rjmp	.+78     	; 0x1068 <vfprintf+0xda>
    101a:	30 ed       	ldi	r19, 0xD0	; 208
    101c:	38 0f       	add	r19, r24
    101e:	3a 30       	cpi	r19, 0x0A	; 10
    1020:	78 f4       	brcc	.+30     	; 0x1040 <vfprintf+0xb2>
    1022:	26 ff       	sbrs	r18, 6
    1024:	06 c0       	rjmp	.+12     	; 0x1032 <vfprintf+0xa4>
    1026:	fa e0       	ldi	r31, 0x0A	; 10
    1028:	5f 9e       	mul	r5, r31
    102a:	30 0d       	add	r19, r0
    102c:	11 24       	eor	r1, r1
    102e:	53 2e       	mov	r5, r19
    1030:	13 c0       	rjmp	.+38     	; 0x1058 <vfprintf+0xca>
    1032:	8a e0       	ldi	r24, 0x0A	; 10
    1034:	38 9e       	mul	r3, r24
    1036:	30 0d       	add	r19, r0
    1038:	11 24       	eor	r1, r1
    103a:	33 2e       	mov	r3, r19
    103c:	20 62       	ori	r18, 0x20	; 32
    103e:	0c c0       	rjmp	.+24     	; 0x1058 <vfprintf+0xca>
    1040:	8e 32       	cpi	r24, 0x2E	; 46
    1042:	21 f4       	brne	.+8      	; 0x104c <vfprintf+0xbe>
    1044:	26 fd       	sbrc	r18, 6
    1046:	6b c1       	rjmp	.+726    	; 0x131e <vfprintf+0x390>
    1048:	20 64       	ori	r18, 0x40	; 64
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <vfprintf+0xca>
    104c:	8c 36       	cpi	r24, 0x6C	; 108
    104e:	11 f4       	brne	.+4      	; 0x1054 <vfprintf+0xc6>
    1050:	20 68       	ori	r18, 0x80	; 128
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <vfprintf+0xca>
    1054:	88 36       	cpi	r24, 0x68	; 104
    1056:	41 f4       	brne	.+16     	; 0x1068 <vfprintf+0xda>
    1058:	f6 01       	movw	r30, r12
    105a:	93 fd       	sbrc	r25, 3
    105c:	85 91       	lpm	r24, Z+
    105e:	93 ff       	sbrs	r25, 3
    1060:	81 91       	ld	r24, Z+
    1062:	6f 01       	movw	r12, r30
    1064:	81 11       	cpse	r24, r1
    1066:	c1 cf       	rjmp	.-126    	; 0xfea <vfprintf+0x5c>
    1068:	98 2f       	mov	r25, r24
    106a:	9f 7d       	andi	r25, 0xDF	; 223
    106c:	95 54       	subi	r25, 0x45	; 69
    106e:	93 30       	cpi	r25, 0x03	; 3
    1070:	28 f4       	brcc	.+10     	; 0x107c <vfprintf+0xee>
    1072:	0c 5f       	subi	r16, 0xFC	; 252
    1074:	1f 4f       	sbci	r17, 0xFF	; 255
    1076:	ff e3       	ldi	r31, 0x3F	; 63
    1078:	f9 83       	std	Y+1, r31	; 0x01
    107a:	0d c0       	rjmp	.+26     	; 0x1096 <vfprintf+0x108>
    107c:	83 36       	cpi	r24, 0x63	; 99
    107e:	31 f0       	breq	.+12     	; 0x108c <vfprintf+0xfe>
    1080:	83 37       	cpi	r24, 0x73	; 115
    1082:	71 f0       	breq	.+28     	; 0x10a0 <vfprintf+0x112>
    1084:	83 35       	cpi	r24, 0x53	; 83
    1086:	09 f0       	breq	.+2      	; 0x108a <vfprintf+0xfc>
    1088:	5b c0       	rjmp	.+182    	; 0x1140 <vfprintf+0x1b2>
    108a:	22 c0       	rjmp	.+68     	; 0x10d0 <vfprintf+0x142>
    108c:	f8 01       	movw	r30, r16
    108e:	80 81       	ld	r24, Z
    1090:	89 83       	std	Y+1, r24	; 0x01
    1092:	0e 5f       	subi	r16, 0xFE	; 254
    1094:	1f 4f       	sbci	r17, 0xFF	; 255
    1096:	44 24       	eor	r4, r4
    1098:	43 94       	inc	r4
    109a:	51 2c       	mov	r5, r1
    109c:	54 01       	movw	r10, r8
    109e:	15 c0       	rjmp	.+42     	; 0x10ca <vfprintf+0x13c>
    10a0:	38 01       	movw	r6, r16
    10a2:	f2 e0       	ldi	r31, 0x02	; 2
    10a4:	6f 0e       	add	r6, r31
    10a6:	71 1c       	adc	r7, r1
    10a8:	f8 01       	movw	r30, r16
    10aa:	a0 80       	ld	r10, Z
    10ac:	b1 80       	ldd	r11, Z+1	; 0x01
    10ae:	26 ff       	sbrs	r18, 6
    10b0:	03 c0       	rjmp	.+6      	; 0x10b8 <vfprintf+0x12a>
    10b2:	65 2d       	mov	r22, r5
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	02 c0       	rjmp	.+4      	; 0x10bc <vfprintf+0x12e>
    10b8:	6f ef       	ldi	r22, 0xFF	; 255
    10ba:	7f ef       	ldi	r23, 0xFF	; 255
    10bc:	c5 01       	movw	r24, r10
    10be:	2c 87       	std	Y+12, r18	; 0x0c
    10c0:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <strnlen>
    10c4:	2c 01       	movw	r4, r24
    10c6:	83 01       	movw	r16, r6
    10c8:	2c 85       	ldd	r18, Y+12	; 0x0c
    10ca:	2f 77       	andi	r18, 0x7F	; 127
    10cc:	22 2e       	mov	r2, r18
    10ce:	17 c0       	rjmp	.+46     	; 0x10fe <vfprintf+0x170>
    10d0:	38 01       	movw	r6, r16
    10d2:	f2 e0       	ldi	r31, 0x02	; 2
    10d4:	6f 0e       	add	r6, r31
    10d6:	71 1c       	adc	r7, r1
    10d8:	f8 01       	movw	r30, r16
    10da:	a0 80       	ld	r10, Z
    10dc:	b1 80       	ldd	r11, Z+1	; 0x01
    10de:	26 ff       	sbrs	r18, 6
    10e0:	03 c0       	rjmp	.+6      	; 0x10e8 <vfprintf+0x15a>
    10e2:	65 2d       	mov	r22, r5
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	02 c0       	rjmp	.+4      	; 0x10ec <vfprintf+0x15e>
    10e8:	6f ef       	ldi	r22, 0xFF	; 255
    10ea:	7f ef       	ldi	r23, 0xFF	; 255
    10ec:	c5 01       	movw	r24, r10
    10ee:	2c 87       	std	Y+12, r18	; 0x0c
    10f0:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <strnlen_P>
    10f4:	2c 01       	movw	r4, r24
    10f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    10f8:	20 68       	ori	r18, 0x80	; 128
    10fa:	22 2e       	mov	r2, r18
    10fc:	83 01       	movw	r16, r6
    10fe:	23 fc       	sbrc	r2, 3
    1100:	1b c0       	rjmp	.+54     	; 0x1138 <vfprintf+0x1aa>
    1102:	83 2d       	mov	r24, r3
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	48 16       	cp	r4, r24
    1108:	59 06       	cpc	r5, r25
    110a:	b0 f4       	brcc	.+44     	; 0x1138 <vfprintf+0x1aa>
    110c:	b7 01       	movw	r22, r14
    110e:	80 e2       	ldi	r24, 0x20	; 32
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    1116:	3a 94       	dec	r3
    1118:	f4 cf       	rjmp	.-24     	; 0x1102 <vfprintf+0x174>
    111a:	f5 01       	movw	r30, r10
    111c:	27 fc       	sbrc	r2, 7
    111e:	85 91       	lpm	r24, Z+
    1120:	27 fe       	sbrs	r2, 7
    1122:	81 91       	ld	r24, Z+
    1124:	5f 01       	movw	r10, r30
    1126:	b7 01       	movw	r22, r14
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    112e:	31 10       	cpse	r3, r1
    1130:	3a 94       	dec	r3
    1132:	f1 e0       	ldi	r31, 0x01	; 1
    1134:	4f 1a       	sub	r4, r31
    1136:	51 08       	sbc	r5, r1
    1138:	41 14       	cp	r4, r1
    113a:	51 04       	cpc	r5, r1
    113c:	71 f7       	brne	.-36     	; 0x111a <vfprintf+0x18c>
    113e:	e5 c0       	rjmp	.+458    	; 0x130a <vfprintf+0x37c>
    1140:	84 36       	cpi	r24, 0x64	; 100
    1142:	11 f0       	breq	.+4      	; 0x1148 <vfprintf+0x1ba>
    1144:	89 36       	cpi	r24, 0x69	; 105
    1146:	39 f5       	brne	.+78     	; 0x1196 <vfprintf+0x208>
    1148:	f8 01       	movw	r30, r16
    114a:	27 ff       	sbrs	r18, 7
    114c:	07 c0       	rjmp	.+14     	; 0x115c <vfprintf+0x1ce>
    114e:	60 81       	ld	r22, Z
    1150:	71 81       	ldd	r23, Z+1	; 0x01
    1152:	82 81       	ldd	r24, Z+2	; 0x02
    1154:	93 81       	ldd	r25, Z+3	; 0x03
    1156:	0c 5f       	subi	r16, 0xFC	; 252
    1158:	1f 4f       	sbci	r17, 0xFF	; 255
    115a:	08 c0       	rjmp	.+16     	; 0x116c <vfprintf+0x1de>
    115c:	60 81       	ld	r22, Z
    115e:	71 81       	ldd	r23, Z+1	; 0x01
    1160:	88 27       	eor	r24, r24
    1162:	77 fd       	sbrc	r23, 7
    1164:	80 95       	com	r24
    1166:	98 2f       	mov	r25, r24
    1168:	0e 5f       	subi	r16, 0xFE	; 254
    116a:	1f 4f       	sbci	r17, 0xFF	; 255
    116c:	2f 76       	andi	r18, 0x6F	; 111
    116e:	b2 2e       	mov	r11, r18
    1170:	97 ff       	sbrs	r25, 7
    1172:	09 c0       	rjmp	.+18     	; 0x1186 <vfprintf+0x1f8>
    1174:	90 95       	com	r25
    1176:	80 95       	com	r24
    1178:	70 95       	com	r23
    117a:	61 95       	neg	r22
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	8f 4f       	sbci	r24, 0xFF	; 255
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	20 68       	ori	r18, 0x80	; 128
    1184:	b2 2e       	mov	r11, r18
    1186:	2a e0       	ldi	r18, 0x0A	; 10
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	a4 01       	movw	r20, r8
    118c:	0e 94 36 0b 	call	0x166c	; 0x166c <__ultoa_invert>
    1190:	a8 2e       	mov	r10, r24
    1192:	a8 18       	sub	r10, r8
    1194:	44 c0       	rjmp	.+136    	; 0x121e <vfprintf+0x290>
    1196:	85 37       	cpi	r24, 0x75	; 117
    1198:	29 f4       	brne	.+10     	; 0x11a4 <vfprintf+0x216>
    119a:	2f 7e       	andi	r18, 0xEF	; 239
    119c:	b2 2e       	mov	r11, r18
    119e:	2a e0       	ldi	r18, 0x0A	; 10
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	25 c0       	rjmp	.+74     	; 0x11ee <vfprintf+0x260>
    11a4:	f2 2f       	mov	r31, r18
    11a6:	f9 7f       	andi	r31, 0xF9	; 249
    11a8:	bf 2e       	mov	r11, r31
    11aa:	8f 36       	cpi	r24, 0x6F	; 111
    11ac:	c1 f0       	breq	.+48     	; 0x11de <vfprintf+0x250>
    11ae:	18 f4       	brcc	.+6      	; 0x11b6 <vfprintf+0x228>
    11b0:	88 35       	cpi	r24, 0x58	; 88
    11b2:	79 f0       	breq	.+30     	; 0x11d2 <vfprintf+0x244>
    11b4:	b4 c0       	rjmp	.+360    	; 0x131e <vfprintf+0x390>
    11b6:	80 37       	cpi	r24, 0x70	; 112
    11b8:	19 f0       	breq	.+6      	; 0x11c0 <vfprintf+0x232>
    11ba:	88 37       	cpi	r24, 0x78	; 120
    11bc:	21 f0       	breq	.+8      	; 0x11c6 <vfprintf+0x238>
    11be:	af c0       	rjmp	.+350    	; 0x131e <vfprintf+0x390>
    11c0:	2f 2f       	mov	r18, r31
    11c2:	20 61       	ori	r18, 0x10	; 16
    11c4:	b2 2e       	mov	r11, r18
    11c6:	b4 fe       	sbrs	r11, 4
    11c8:	0d c0       	rjmp	.+26     	; 0x11e4 <vfprintf+0x256>
    11ca:	8b 2d       	mov	r24, r11
    11cc:	84 60       	ori	r24, 0x04	; 4
    11ce:	b8 2e       	mov	r11, r24
    11d0:	09 c0       	rjmp	.+18     	; 0x11e4 <vfprintf+0x256>
    11d2:	24 ff       	sbrs	r18, 4
    11d4:	0a c0       	rjmp	.+20     	; 0x11ea <vfprintf+0x25c>
    11d6:	9f 2f       	mov	r25, r31
    11d8:	96 60       	ori	r25, 0x06	; 6
    11da:	b9 2e       	mov	r11, r25
    11dc:	06 c0       	rjmp	.+12     	; 0x11ea <vfprintf+0x25c>
    11de:	28 e0       	ldi	r18, 0x08	; 8
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	05 c0       	rjmp	.+10     	; 0x11ee <vfprintf+0x260>
    11e4:	20 e1       	ldi	r18, 0x10	; 16
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <vfprintf+0x260>
    11ea:	20 e1       	ldi	r18, 0x10	; 16
    11ec:	32 e0       	ldi	r19, 0x02	; 2
    11ee:	f8 01       	movw	r30, r16
    11f0:	b7 fe       	sbrs	r11, 7
    11f2:	07 c0       	rjmp	.+14     	; 0x1202 <vfprintf+0x274>
    11f4:	60 81       	ld	r22, Z
    11f6:	71 81       	ldd	r23, Z+1	; 0x01
    11f8:	82 81       	ldd	r24, Z+2	; 0x02
    11fa:	93 81       	ldd	r25, Z+3	; 0x03
    11fc:	0c 5f       	subi	r16, 0xFC	; 252
    11fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1200:	06 c0       	rjmp	.+12     	; 0x120e <vfprintf+0x280>
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	80 e0       	ldi	r24, 0x00	; 0
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 5f       	subi	r16, 0xFE	; 254
    120c:	1f 4f       	sbci	r17, 0xFF	; 255
    120e:	a4 01       	movw	r20, r8
    1210:	0e 94 36 0b 	call	0x166c	; 0x166c <__ultoa_invert>
    1214:	a8 2e       	mov	r10, r24
    1216:	a8 18       	sub	r10, r8
    1218:	fb 2d       	mov	r31, r11
    121a:	ff 77       	andi	r31, 0x7F	; 127
    121c:	bf 2e       	mov	r11, r31
    121e:	b6 fe       	sbrs	r11, 6
    1220:	0b c0       	rjmp	.+22     	; 0x1238 <vfprintf+0x2aa>
    1222:	2b 2d       	mov	r18, r11
    1224:	2e 7f       	andi	r18, 0xFE	; 254
    1226:	a5 14       	cp	r10, r5
    1228:	50 f4       	brcc	.+20     	; 0x123e <vfprintf+0x2b0>
    122a:	b4 fe       	sbrs	r11, 4
    122c:	0a c0       	rjmp	.+20     	; 0x1242 <vfprintf+0x2b4>
    122e:	b2 fc       	sbrc	r11, 2
    1230:	08 c0       	rjmp	.+16     	; 0x1242 <vfprintf+0x2b4>
    1232:	2b 2d       	mov	r18, r11
    1234:	2e 7e       	andi	r18, 0xEE	; 238
    1236:	05 c0       	rjmp	.+10     	; 0x1242 <vfprintf+0x2b4>
    1238:	7a 2c       	mov	r7, r10
    123a:	2b 2d       	mov	r18, r11
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <vfprintf+0x2b6>
    123e:	7a 2c       	mov	r7, r10
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <vfprintf+0x2b6>
    1242:	75 2c       	mov	r7, r5
    1244:	24 ff       	sbrs	r18, 4
    1246:	0d c0       	rjmp	.+26     	; 0x1262 <vfprintf+0x2d4>
    1248:	fe 01       	movw	r30, r28
    124a:	ea 0d       	add	r30, r10
    124c:	f1 1d       	adc	r31, r1
    124e:	80 81       	ld	r24, Z
    1250:	80 33       	cpi	r24, 0x30	; 48
    1252:	11 f4       	brne	.+4      	; 0x1258 <vfprintf+0x2ca>
    1254:	29 7e       	andi	r18, 0xE9	; 233
    1256:	09 c0       	rjmp	.+18     	; 0x126a <vfprintf+0x2dc>
    1258:	22 ff       	sbrs	r18, 2
    125a:	06 c0       	rjmp	.+12     	; 0x1268 <vfprintf+0x2da>
    125c:	73 94       	inc	r7
    125e:	73 94       	inc	r7
    1260:	04 c0       	rjmp	.+8      	; 0x126a <vfprintf+0x2dc>
    1262:	82 2f       	mov	r24, r18
    1264:	86 78       	andi	r24, 0x86	; 134
    1266:	09 f0       	breq	.+2      	; 0x126a <vfprintf+0x2dc>
    1268:	73 94       	inc	r7
    126a:	23 fd       	sbrc	r18, 3
    126c:	13 c0       	rjmp	.+38     	; 0x1294 <vfprintf+0x306>
    126e:	20 ff       	sbrs	r18, 0
    1270:	06 c0       	rjmp	.+12     	; 0x127e <vfprintf+0x2f0>
    1272:	5a 2c       	mov	r5, r10
    1274:	73 14       	cp	r7, r3
    1276:	18 f4       	brcc	.+6      	; 0x127e <vfprintf+0x2f0>
    1278:	53 0c       	add	r5, r3
    127a:	57 18       	sub	r5, r7
    127c:	73 2c       	mov	r7, r3
    127e:	73 14       	cp	r7, r3
    1280:	68 f4       	brcc	.+26     	; 0x129c <vfprintf+0x30e>
    1282:	b7 01       	movw	r22, r14
    1284:	80 e2       	ldi	r24, 0x20	; 32
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	2c 87       	std	Y+12, r18	; 0x0c
    128a:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    128e:	73 94       	inc	r7
    1290:	2c 85       	ldd	r18, Y+12	; 0x0c
    1292:	f5 cf       	rjmp	.-22     	; 0x127e <vfprintf+0x2f0>
    1294:	73 14       	cp	r7, r3
    1296:	10 f4       	brcc	.+4      	; 0x129c <vfprintf+0x30e>
    1298:	37 18       	sub	r3, r7
    129a:	01 c0       	rjmp	.+2      	; 0x129e <vfprintf+0x310>
    129c:	31 2c       	mov	r3, r1
    129e:	24 ff       	sbrs	r18, 4
    12a0:	12 c0       	rjmp	.+36     	; 0x12c6 <vfprintf+0x338>
    12a2:	b7 01       	movw	r22, r14
    12a4:	80 e3       	ldi	r24, 0x30	; 48
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	2c 87       	std	Y+12, r18	; 0x0c
    12aa:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    12ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    12b0:	22 ff       	sbrs	r18, 2
    12b2:	17 c0       	rjmp	.+46     	; 0x12e2 <vfprintf+0x354>
    12b4:	21 ff       	sbrs	r18, 1
    12b6:	03 c0       	rjmp	.+6      	; 0x12be <vfprintf+0x330>
    12b8:	88 e5       	ldi	r24, 0x58	; 88
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <vfprintf+0x334>
    12be:	88 e7       	ldi	r24, 0x78	; 120
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	b7 01       	movw	r22, r14
    12c4:	0c c0       	rjmp	.+24     	; 0x12de <vfprintf+0x350>
    12c6:	82 2f       	mov	r24, r18
    12c8:	86 78       	andi	r24, 0x86	; 134
    12ca:	59 f0       	breq	.+22     	; 0x12e2 <vfprintf+0x354>
    12cc:	21 fd       	sbrc	r18, 1
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <vfprintf+0x346>
    12d0:	80 e2       	ldi	r24, 0x20	; 32
    12d2:	01 c0       	rjmp	.+2      	; 0x12d6 <vfprintf+0x348>
    12d4:	8b e2       	ldi	r24, 0x2B	; 43
    12d6:	27 fd       	sbrc	r18, 7
    12d8:	8d e2       	ldi	r24, 0x2D	; 45
    12da:	b7 01       	movw	r22, r14
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    12e2:	a5 14       	cp	r10, r5
    12e4:	38 f4       	brcc	.+14     	; 0x12f4 <vfprintf+0x366>
    12e6:	b7 01       	movw	r22, r14
    12e8:	80 e3       	ldi	r24, 0x30	; 48
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    12f0:	5a 94       	dec	r5
    12f2:	f7 cf       	rjmp	.-18     	; 0x12e2 <vfprintf+0x354>
    12f4:	aa 94       	dec	r10
    12f6:	f4 01       	movw	r30, r8
    12f8:	ea 0d       	add	r30, r10
    12fa:	f1 1d       	adc	r31, r1
    12fc:	80 81       	ld	r24, Z
    12fe:	b7 01       	movw	r22, r14
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    1306:	a1 10       	cpse	r10, r1
    1308:	f5 cf       	rjmp	.-22     	; 0x12f4 <vfprintf+0x366>
    130a:	33 20       	and	r3, r3
    130c:	09 f4       	brne	.+2      	; 0x1310 <vfprintf+0x382>
    130e:	51 ce       	rjmp	.-862    	; 0xfb2 <vfprintf+0x24>
    1310:	b7 01       	movw	r22, r14
    1312:	80 e2       	ldi	r24, 0x20	; 32
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	0e 94 04 0b 	call	0x1608	; 0x1608 <fputc>
    131a:	3a 94       	dec	r3
    131c:	f6 cf       	rjmp	.-20     	; 0x130a <vfprintf+0x37c>
    131e:	f7 01       	movw	r30, r14
    1320:	86 81       	ldd	r24, Z+6	; 0x06
    1322:	97 81       	ldd	r25, Z+7	; 0x07
    1324:	02 c0       	rjmp	.+4      	; 0x132a <vfprintf+0x39c>
    1326:	8f ef       	ldi	r24, 0xFF	; 255
    1328:	9f ef       	ldi	r25, 0xFF	; 255
    132a:	2c 96       	adiw	r28, 0x0c	; 12
    132c:	e2 e1       	ldi	r30, 0x12	; 18
    132e:	0c 94 cd 0b 	jmp	0x179a	; 0x179a <__epilogue_restores__>

00001332 <__eerd_word_m162>:
    1332:	a8 e1       	ldi	r26, 0x18	; 24
    1334:	b0 e0       	ldi	r27, 0x00	; 0
    1336:	42 e0       	ldi	r20, 0x02	; 2
    1338:	50 e0       	ldi	r21, 0x00	; 0
    133a:	0c 94 96 0b 	jmp	0x172c	; 0x172c <__eerd_blraw_m162>

0000133e <__eewr_word_m162>:
    133e:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__eewr_byte_m162>
    1342:	27 2f       	mov	r18, r23
    1344:	0c 94 a5 0b 	jmp	0x174a	; 0x174a <__eewr_r18_m162>

00001348 <calloc>:
    1348:	0f 93       	push	r16
    134a:	1f 93       	push	r17
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	86 9f       	mul	r24, r22
    1352:	80 01       	movw	r16, r0
    1354:	87 9f       	mul	r24, r23
    1356:	10 0d       	add	r17, r0
    1358:	96 9f       	mul	r25, r22
    135a:	10 0d       	add	r17, r0
    135c:	11 24       	eor	r1, r1
    135e:	c8 01       	movw	r24, r16
    1360:	0e 94 c0 09 	call	0x1380	; 0x1380 <malloc>
    1364:	ec 01       	movw	r28, r24
    1366:	00 97       	sbiw	r24, 0x00	; 0
    1368:	29 f0       	breq	.+10     	; 0x1374 <calloc+0x2c>
    136a:	a8 01       	movw	r20, r16
    136c:	60 e0       	ldi	r22, 0x00	; 0
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <memset>
    1374:	ce 01       	movw	r24, r28
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	1f 91       	pop	r17
    137c:	0f 91       	pop	r16
    137e:	08 95       	ret

00001380 <malloc>:
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	82 30       	cpi	r24, 0x02	; 2
    1386:	91 05       	cpc	r25, r1
    1388:	10 f4       	brcc	.+4      	; 0x138e <malloc+0xe>
    138a:	82 e0       	ldi	r24, 0x02	; 2
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	e0 91 63 02 	lds	r30, 0x0263
    1392:	f0 91 64 02 	lds	r31, 0x0264
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	a0 e0       	ldi	r26, 0x00	; 0
    139c:	b0 e0       	ldi	r27, 0x00	; 0
    139e:	30 97       	sbiw	r30, 0x00	; 0
    13a0:	39 f1       	breq	.+78     	; 0x13f0 <malloc+0x70>
    13a2:	40 81       	ld	r20, Z
    13a4:	51 81       	ldd	r21, Z+1	; 0x01
    13a6:	48 17       	cp	r20, r24
    13a8:	59 07       	cpc	r21, r25
    13aa:	b8 f0       	brcs	.+46     	; 0x13da <malloc+0x5a>
    13ac:	48 17       	cp	r20, r24
    13ae:	59 07       	cpc	r21, r25
    13b0:	71 f4       	brne	.+28     	; 0x13ce <malloc+0x4e>
    13b2:	82 81       	ldd	r24, Z+2	; 0x02
    13b4:	93 81       	ldd	r25, Z+3	; 0x03
    13b6:	10 97       	sbiw	r26, 0x00	; 0
    13b8:	29 f0       	breq	.+10     	; 0x13c4 <malloc+0x44>
    13ba:	13 96       	adiw	r26, 0x03	; 3
    13bc:	9c 93       	st	X, r25
    13be:	8e 93       	st	-X, r24
    13c0:	12 97       	sbiw	r26, 0x02	; 2
    13c2:	2c c0       	rjmp	.+88     	; 0x141c <malloc+0x9c>
    13c4:	90 93 64 02 	sts	0x0264, r25
    13c8:	80 93 63 02 	sts	0x0263, r24
    13cc:	27 c0       	rjmp	.+78     	; 0x141c <malloc+0x9c>
    13ce:	21 15       	cp	r18, r1
    13d0:	31 05       	cpc	r19, r1
    13d2:	31 f0       	breq	.+12     	; 0x13e0 <malloc+0x60>
    13d4:	42 17       	cp	r20, r18
    13d6:	53 07       	cpc	r21, r19
    13d8:	18 f0       	brcs	.+6      	; 0x13e0 <malloc+0x60>
    13da:	a9 01       	movw	r20, r18
    13dc:	db 01       	movw	r26, r22
    13de:	01 c0       	rjmp	.+2      	; 0x13e2 <malloc+0x62>
    13e0:	ef 01       	movw	r28, r30
    13e2:	9a 01       	movw	r18, r20
    13e4:	bd 01       	movw	r22, r26
    13e6:	df 01       	movw	r26, r30
    13e8:	02 80       	ldd	r0, Z+2	; 0x02
    13ea:	f3 81       	ldd	r31, Z+3	; 0x03
    13ec:	e0 2d       	mov	r30, r0
    13ee:	d7 cf       	rjmp	.-82     	; 0x139e <malloc+0x1e>
    13f0:	21 15       	cp	r18, r1
    13f2:	31 05       	cpc	r19, r1
    13f4:	f9 f0       	breq	.+62     	; 0x1434 <malloc+0xb4>
    13f6:	28 1b       	sub	r18, r24
    13f8:	39 0b       	sbc	r19, r25
    13fa:	24 30       	cpi	r18, 0x04	; 4
    13fc:	31 05       	cpc	r19, r1
    13fe:	80 f4       	brcc	.+32     	; 0x1420 <malloc+0xa0>
    1400:	8a 81       	ldd	r24, Y+2	; 0x02
    1402:	9b 81       	ldd	r25, Y+3	; 0x03
    1404:	61 15       	cp	r22, r1
    1406:	71 05       	cpc	r23, r1
    1408:	21 f0       	breq	.+8      	; 0x1412 <malloc+0x92>
    140a:	fb 01       	movw	r30, r22
    140c:	93 83       	std	Z+3, r25	; 0x03
    140e:	82 83       	std	Z+2, r24	; 0x02
    1410:	04 c0       	rjmp	.+8      	; 0x141a <malloc+0x9a>
    1412:	90 93 64 02 	sts	0x0264, r25
    1416:	80 93 63 02 	sts	0x0263, r24
    141a:	fe 01       	movw	r30, r28
    141c:	32 96       	adiw	r30, 0x02	; 2
    141e:	44 c0       	rjmp	.+136    	; 0x14a8 <malloc+0x128>
    1420:	fe 01       	movw	r30, r28
    1422:	e2 0f       	add	r30, r18
    1424:	f3 1f       	adc	r31, r19
    1426:	81 93       	st	Z+, r24
    1428:	91 93       	st	Z+, r25
    142a:	22 50       	subi	r18, 0x02	; 2
    142c:	31 09       	sbc	r19, r1
    142e:	39 83       	std	Y+1, r19	; 0x01
    1430:	28 83       	st	Y, r18
    1432:	3a c0       	rjmp	.+116    	; 0x14a8 <malloc+0x128>
    1434:	20 91 61 02 	lds	r18, 0x0261
    1438:	30 91 62 02 	lds	r19, 0x0262
    143c:	23 2b       	or	r18, r19
    143e:	41 f4       	brne	.+16     	; 0x1450 <malloc+0xd0>
    1440:	20 91 02 01 	lds	r18, 0x0102
    1444:	30 91 03 01 	lds	r19, 0x0103
    1448:	30 93 62 02 	sts	0x0262, r19
    144c:	20 93 61 02 	sts	0x0261, r18
    1450:	20 91 00 01 	lds	r18, 0x0100
    1454:	30 91 01 01 	lds	r19, 0x0101
    1458:	21 15       	cp	r18, r1
    145a:	31 05       	cpc	r19, r1
    145c:	41 f4       	brne	.+16     	; 0x146e <malloc+0xee>
    145e:	2d b7       	in	r18, 0x3d	; 61
    1460:	3e b7       	in	r19, 0x3e	; 62
    1462:	40 91 04 01 	lds	r20, 0x0104
    1466:	50 91 05 01 	lds	r21, 0x0105
    146a:	24 1b       	sub	r18, r20
    146c:	35 0b       	sbc	r19, r21
    146e:	e0 91 61 02 	lds	r30, 0x0261
    1472:	f0 91 62 02 	lds	r31, 0x0262
    1476:	e2 17       	cp	r30, r18
    1478:	f3 07       	cpc	r31, r19
    147a:	a0 f4       	brcc	.+40     	; 0x14a4 <malloc+0x124>
    147c:	2e 1b       	sub	r18, r30
    147e:	3f 0b       	sbc	r19, r31
    1480:	28 17       	cp	r18, r24
    1482:	39 07       	cpc	r19, r25
    1484:	78 f0       	brcs	.+30     	; 0x14a4 <malloc+0x124>
    1486:	ac 01       	movw	r20, r24
    1488:	4e 5f       	subi	r20, 0xFE	; 254
    148a:	5f 4f       	sbci	r21, 0xFF	; 255
    148c:	24 17       	cp	r18, r20
    148e:	35 07       	cpc	r19, r21
    1490:	48 f0       	brcs	.+18     	; 0x14a4 <malloc+0x124>
    1492:	4e 0f       	add	r20, r30
    1494:	5f 1f       	adc	r21, r31
    1496:	50 93 62 02 	sts	0x0262, r21
    149a:	40 93 61 02 	sts	0x0261, r20
    149e:	81 93       	st	Z+, r24
    14a0:	91 93       	st	Z+, r25
    14a2:	02 c0       	rjmp	.+4      	; 0x14a8 <malloc+0x128>
    14a4:	e0 e0       	ldi	r30, 0x00	; 0
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	cf 01       	movw	r24, r30
    14aa:	df 91       	pop	r29
    14ac:	cf 91       	pop	r28
    14ae:	08 95       	ret

000014b0 <free>:
    14b0:	cf 93       	push	r28
    14b2:	df 93       	push	r29
    14b4:	00 97       	sbiw	r24, 0x00	; 0
    14b6:	09 f4       	brne	.+2      	; 0x14ba <free+0xa>
    14b8:	87 c0       	rjmp	.+270    	; 0x15c8 <free+0x118>
    14ba:	fc 01       	movw	r30, r24
    14bc:	32 97       	sbiw	r30, 0x02	; 2
    14be:	13 82       	std	Z+3, r1	; 0x03
    14c0:	12 82       	std	Z+2, r1	; 0x02
    14c2:	c0 91 63 02 	lds	r28, 0x0263
    14c6:	d0 91 64 02 	lds	r29, 0x0264
    14ca:	20 97       	sbiw	r28, 0x00	; 0
    14cc:	81 f4       	brne	.+32     	; 0x14ee <free+0x3e>
    14ce:	20 81       	ld	r18, Z
    14d0:	31 81       	ldd	r19, Z+1	; 0x01
    14d2:	28 0f       	add	r18, r24
    14d4:	39 1f       	adc	r19, r25
    14d6:	80 91 61 02 	lds	r24, 0x0261
    14da:	90 91 62 02 	lds	r25, 0x0262
    14de:	82 17       	cp	r24, r18
    14e0:	93 07       	cpc	r25, r19
    14e2:	79 f5       	brne	.+94     	; 0x1542 <free+0x92>
    14e4:	f0 93 62 02 	sts	0x0262, r31
    14e8:	e0 93 61 02 	sts	0x0261, r30
    14ec:	6d c0       	rjmp	.+218    	; 0x15c8 <free+0x118>
    14ee:	de 01       	movw	r26, r28
    14f0:	20 e0       	ldi	r18, 0x00	; 0
    14f2:	30 e0       	ldi	r19, 0x00	; 0
    14f4:	ae 17       	cp	r26, r30
    14f6:	bf 07       	cpc	r27, r31
    14f8:	50 f4       	brcc	.+20     	; 0x150e <free+0x5e>
    14fa:	12 96       	adiw	r26, 0x02	; 2
    14fc:	4d 91       	ld	r20, X+
    14fe:	5c 91       	ld	r21, X
    1500:	13 97       	sbiw	r26, 0x03	; 3
    1502:	9d 01       	movw	r18, r26
    1504:	41 15       	cp	r20, r1
    1506:	51 05       	cpc	r21, r1
    1508:	09 f1       	breq	.+66     	; 0x154c <free+0x9c>
    150a:	da 01       	movw	r26, r20
    150c:	f3 cf       	rjmp	.-26     	; 0x14f4 <free+0x44>
    150e:	b3 83       	std	Z+3, r27	; 0x03
    1510:	a2 83       	std	Z+2, r26	; 0x02
    1512:	40 81       	ld	r20, Z
    1514:	51 81       	ldd	r21, Z+1	; 0x01
    1516:	84 0f       	add	r24, r20
    1518:	95 1f       	adc	r25, r21
    151a:	8a 17       	cp	r24, r26
    151c:	9b 07       	cpc	r25, r27
    151e:	71 f4       	brne	.+28     	; 0x153c <free+0x8c>
    1520:	8d 91       	ld	r24, X+
    1522:	9c 91       	ld	r25, X
    1524:	11 97       	sbiw	r26, 0x01	; 1
    1526:	84 0f       	add	r24, r20
    1528:	95 1f       	adc	r25, r21
    152a:	02 96       	adiw	r24, 0x02	; 2
    152c:	91 83       	std	Z+1, r25	; 0x01
    152e:	80 83       	st	Z, r24
    1530:	12 96       	adiw	r26, 0x02	; 2
    1532:	8d 91       	ld	r24, X+
    1534:	9c 91       	ld	r25, X
    1536:	13 97       	sbiw	r26, 0x03	; 3
    1538:	93 83       	std	Z+3, r25	; 0x03
    153a:	82 83       	std	Z+2, r24	; 0x02
    153c:	21 15       	cp	r18, r1
    153e:	31 05       	cpc	r19, r1
    1540:	29 f4       	brne	.+10     	; 0x154c <free+0x9c>
    1542:	f0 93 64 02 	sts	0x0264, r31
    1546:	e0 93 63 02 	sts	0x0263, r30
    154a:	3e c0       	rjmp	.+124    	; 0x15c8 <free+0x118>
    154c:	d9 01       	movw	r26, r18
    154e:	13 96       	adiw	r26, 0x03	; 3
    1550:	fc 93       	st	X, r31
    1552:	ee 93       	st	-X, r30
    1554:	12 97       	sbiw	r26, 0x02	; 2
    1556:	4d 91       	ld	r20, X+
    1558:	5d 91       	ld	r21, X+
    155a:	a4 0f       	add	r26, r20
    155c:	b5 1f       	adc	r27, r21
    155e:	ea 17       	cp	r30, r26
    1560:	fb 07       	cpc	r31, r27
    1562:	79 f4       	brne	.+30     	; 0x1582 <free+0xd2>
    1564:	80 81       	ld	r24, Z
    1566:	91 81       	ldd	r25, Z+1	; 0x01
    1568:	84 0f       	add	r24, r20
    156a:	95 1f       	adc	r25, r21
    156c:	02 96       	adiw	r24, 0x02	; 2
    156e:	d9 01       	movw	r26, r18
    1570:	11 96       	adiw	r26, 0x01	; 1
    1572:	9c 93       	st	X, r25
    1574:	8e 93       	st	-X, r24
    1576:	82 81       	ldd	r24, Z+2	; 0x02
    1578:	93 81       	ldd	r25, Z+3	; 0x03
    157a:	13 96       	adiw	r26, 0x03	; 3
    157c:	9c 93       	st	X, r25
    157e:	8e 93       	st	-X, r24
    1580:	12 97       	sbiw	r26, 0x02	; 2
    1582:	e0 e0       	ldi	r30, 0x00	; 0
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	8a 81       	ldd	r24, Y+2	; 0x02
    1588:	9b 81       	ldd	r25, Y+3	; 0x03
    158a:	00 97       	sbiw	r24, 0x00	; 0
    158c:	19 f0       	breq	.+6      	; 0x1594 <free+0xe4>
    158e:	fe 01       	movw	r30, r28
    1590:	ec 01       	movw	r28, r24
    1592:	f9 cf       	rjmp	.-14     	; 0x1586 <free+0xd6>
    1594:	ce 01       	movw	r24, r28
    1596:	02 96       	adiw	r24, 0x02	; 2
    1598:	28 81       	ld	r18, Y
    159a:	39 81       	ldd	r19, Y+1	; 0x01
    159c:	82 0f       	add	r24, r18
    159e:	93 1f       	adc	r25, r19
    15a0:	20 91 61 02 	lds	r18, 0x0261
    15a4:	30 91 62 02 	lds	r19, 0x0262
    15a8:	28 17       	cp	r18, r24
    15aa:	39 07       	cpc	r19, r25
    15ac:	69 f4       	brne	.+26     	; 0x15c8 <free+0x118>
    15ae:	30 97       	sbiw	r30, 0x00	; 0
    15b0:	29 f4       	brne	.+10     	; 0x15bc <free+0x10c>
    15b2:	10 92 64 02 	sts	0x0264, r1
    15b6:	10 92 63 02 	sts	0x0263, r1
    15ba:	02 c0       	rjmp	.+4      	; 0x15c0 <free+0x110>
    15bc:	13 82       	std	Z+3, r1	; 0x03
    15be:	12 82       	std	Z+2, r1	; 0x02
    15c0:	d0 93 62 02 	sts	0x0262, r29
    15c4:	c0 93 61 02 	sts	0x0261, r28
    15c8:	df 91       	pop	r29
    15ca:	cf 91       	pop	r28
    15cc:	08 95       	ret

000015ce <strnlen_P>:
    15ce:	fc 01       	movw	r30, r24
    15d0:	05 90       	lpm	r0, Z+
    15d2:	61 50       	subi	r22, 0x01	; 1
    15d4:	70 40       	sbci	r23, 0x00	; 0
    15d6:	01 10       	cpse	r0, r1
    15d8:	d8 f7       	brcc	.-10     	; 0x15d0 <strnlen_P+0x2>
    15da:	80 95       	com	r24
    15dc:	90 95       	com	r25
    15de:	8e 0f       	add	r24, r30
    15e0:	9f 1f       	adc	r25, r31
    15e2:	08 95       	ret

000015e4 <memset>:
    15e4:	dc 01       	movw	r26, r24
    15e6:	01 c0       	rjmp	.+2      	; 0x15ea <memset+0x6>
    15e8:	6d 93       	st	X+, r22
    15ea:	41 50       	subi	r20, 0x01	; 1
    15ec:	50 40       	sbci	r21, 0x00	; 0
    15ee:	e0 f7       	brcc	.-8      	; 0x15e8 <memset+0x4>
    15f0:	08 95       	ret

000015f2 <strnlen>:
    15f2:	fc 01       	movw	r30, r24
    15f4:	61 50       	subi	r22, 0x01	; 1
    15f6:	70 40       	sbci	r23, 0x00	; 0
    15f8:	01 90       	ld	r0, Z+
    15fa:	01 10       	cpse	r0, r1
    15fc:	d8 f7       	brcc	.-10     	; 0x15f4 <strnlen+0x2>
    15fe:	80 95       	com	r24
    1600:	90 95       	com	r25
    1602:	8e 0f       	add	r24, r30
    1604:	9f 1f       	adc	r25, r31
    1606:	08 95       	ret

00001608 <fputc>:
    1608:	0f 93       	push	r16
    160a:	1f 93       	push	r17
    160c:	cf 93       	push	r28
    160e:	df 93       	push	r29
    1610:	18 2f       	mov	r17, r24
    1612:	09 2f       	mov	r16, r25
    1614:	eb 01       	movw	r28, r22
    1616:	8b 81       	ldd	r24, Y+3	; 0x03
    1618:	81 fd       	sbrc	r24, 1
    161a:	03 c0       	rjmp	.+6      	; 0x1622 <fputc+0x1a>
    161c:	8f ef       	ldi	r24, 0xFF	; 255
    161e:	9f ef       	ldi	r25, 0xFF	; 255
    1620:	20 c0       	rjmp	.+64     	; 0x1662 <fputc+0x5a>
    1622:	82 ff       	sbrs	r24, 2
    1624:	10 c0       	rjmp	.+32     	; 0x1646 <fputc+0x3e>
    1626:	4e 81       	ldd	r20, Y+6	; 0x06
    1628:	5f 81       	ldd	r21, Y+7	; 0x07
    162a:	2c 81       	ldd	r18, Y+4	; 0x04
    162c:	3d 81       	ldd	r19, Y+5	; 0x05
    162e:	42 17       	cp	r20, r18
    1630:	53 07       	cpc	r21, r19
    1632:	7c f4       	brge	.+30     	; 0x1652 <fputc+0x4a>
    1634:	e8 81       	ld	r30, Y
    1636:	f9 81       	ldd	r31, Y+1	; 0x01
    1638:	9f 01       	movw	r18, r30
    163a:	2f 5f       	subi	r18, 0xFF	; 255
    163c:	3f 4f       	sbci	r19, 0xFF	; 255
    163e:	39 83       	std	Y+1, r19	; 0x01
    1640:	28 83       	st	Y, r18
    1642:	10 83       	st	Z, r17
    1644:	06 c0       	rjmp	.+12     	; 0x1652 <fputc+0x4a>
    1646:	e8 85       	ldd	r30, Y+8	; 0x08
    1648:	f9 85       	ldd	r31, Y+9	; 0x09
    164a:	81 2f       	mov	r24, r17
    164c:	09 95       	icall
    164e:	89 2b       	or	r24, r25
    1650:	29 f7       	brne	.-54     	; 0x161c <fputc+0x14>
    1652:	2e 81       	ldd	r18, Y+6	; 0x06
    1654:	3f 81       	ldd	r19, Y+7	; 0x07
    1656:	2f 5f       	subi	r18, 0xFF	; 255
    1658:	3f 4f       	sbci	r19, 0xFF	; 255
    165a:	3f 83       	std	Y+7, r19	; 0x07
    165c:	2e 83       	std	Y+6, r18	; 0x06
    165e:	81 2f       	mov	r24, r17
    1660:	90 2f       	mov	r25, r16
    1662:	df 91       	pop	r29
    1664:	cf 91       	pop	r28
    1666:	1f 91       	pop	r17
    1668:	0f 91       	pop	r16
    166a:	08 95       	ret

0000166c <__ultoa_invert>:
    166c:	fa 01       	movw	r30, r20
    166e:	aa 27       	eor	r26, r26
    1670:	28 30       	cpi	r18, 0x08	; 8
    1672:	51 f1       	breq	.+84     	; 0x16c8 <__ultoa_invert+0x5c>
    1674:	20 31       	cpi	r18, 0x10	; 16
    1676:	81 f1       	breq	.+96     	; 0x16d8 <__ultoa_invert+0x6c>
    1678:	e8 94       	clt
    167a:	6f 93       	push	r22
    167c:	6e 7f       	andi	r22, 0xFE	; 254
    167e:	6e 5f       	subi	r22, 0xFE	; 254
    1680:	7f 4f       	sbci	r23, 0xFF	; 255
    1682:	8f 4f       	sbci	r24, 0xFF	; 255
    1684:	9f 4f       	sbci	r25, 0xFF	; 255
    1686:	af 4f       	sbci	r26, 0xFF	; 255
    1688:	b1 e0       	ldi	r27, 0x01	; 1
    168a:	3e d0       	rcall	.+124    	; 0x1708 <__ultoa_invert+0x9c>
    168c:	b4 e0       	ldi	r27, 0x04	; 4
    168e:	3c d0       	rcall	.+120    	; 0x1708 <__ultoa_invert+0x9c>
    1690:	67 0f       	add	r22, r23
    1692:	78 1f       	adc	r23, r24
    1694:	89 1f       	adc	r24, r25
    1696:	9a 1f       	adc	r25, r26
    1698:	a1 1d       	adc	r26, r1
    169a:	68 0f       	add	r22, r24
    169c:	79 1f       	adc	r23, r25
    169e:	8a 1f       	adc	r24, r26
    16a0:	91 1d       	adc	r25, r1
    16a2:	a1 1d       	adc	r26, r1
    16a4:	6a 0f       	add	r22, r26
    16a6:	71 1d       	adc	r23, r1
    16a8:	81 1d       	adc	r24, r1
    16aa:	91 1d       	adc	r25, r1
    16ac:	a1 1d       	adc	r26, r1
    16ae:	20 d0       	rcall	.+64     	; 0x16f0 <__ultoa_invert+0x84>
    16b0:	09 f4       	brne	.+2      	; 0x16b4 <__ultoa_invert+0x48>
    16b2:	68 94       	set
    16b4:	3f 91       	pop	r19
    16b6:	2a e0       	ldi	r18, 0x0A	; 10
    16b8:	26 9f       	mul	r18, r22
    16ba:	11 24       	eor	r1, r1
    16bc:	30 19       	sub	r19, r0
    16be:	30 5d       	subi	r19, 0xD0	; 208
    16c0:	31 93       	st	Z+, r19
    16c2:	de f6       	brtc	.-74     	; 0x167a <__ultoa_invert+0xe>
    16c4:	cf 01       	movw	r24, r30
    16c6:	08 95       	ret
    16c8:	46 2f       	mov	r20, r22
    16ca:	47 70       	andi	r20, 0x07	; 7
    16cc:	40 5d       	subi	r20, 0xD0	; 208
    16ce:	41 93       	st	Z+, r20
    16d0:	b3 e0       	ldi	r27, 0x03	; 3
    16d2:	0f d0       	rcall	.+30     	; 0x16f2 <__ultoa_invert+0x86>
    16d4:	c9 f7       	brne	.-14     	; 0x16c8 <__ultoa_invert+0x5c>
    16d6:	f6 cf       	rjmp	.-20     	; 0x16c4 <__ultoa_invert+0x58>
    16d8:	46 2f       	mov	r20, r22
    16da:	4f 70       	andi	r20, 0x0F	; 15
    16dc:	40 5d       	subi	r20, 0xD0	; 208
    16de:	4a 33       	cpi	r20, 0x3A	; 58
    16e0:	18 f0       	brcs	.+6      	; 0x16e8 <__ultoa_invert+0x7c>
    16e2:	49 5d       	subi	r20, 0xD9	; 217
    16e4:	31 fd       	sbrc	r19, 1
    16e6:	40 52       	subi	r20, 0x20	; 32
    16e8:	41 93       	st	Z+, r20
    16ea:	02 d0       	rcall	.+4      	; 0x16f0 <__ultoa_invert+0x84>
    16ec:	a9 f7       	brne	.-22     	; 0x16d8 <__ultoa_invert+0x6c>
    16ee:	ea cf       	rjmp	.-44     	; 0x16c4 <__ultoa_invert+0x58>
    16f0:	b4 e0       	ldi	r27, 0x04	; 4
    16f2:	a6 95       	lsr	r26
    16f4:	97 95       	ror	r25
    16f6:	87 95       	ror	r24
    16f8:	77 95       	ror	r23
    16fa:	67 95       	ror	r22
    16fc:	ba 95       	dec	r27
    16fe:	c9 f7       	brne	.-14     	; 0x16f2 <__ultoa_invert+0x86>
    1700:	00 97       	sbiw	r24, 0x00	; 0
    1702:	61 05       	cpc	r22, r1
    1704:	71 05       	cpc	r23, r1
    1706:	08 95       	ret
    1708:	9b 01       	movw	r18, r22
    170a:	ac 01       	movw	r20, r24
    170c:	0a 2e       	mov	r0, r26
    170e:	06 94       	lsr	r0
    1710:	57 95       	ror	r21
    1712:	47 95       	ror	r20
    1714:	37 95       	ror	r19
    1716:	27 95       	ror	r18
    1718:	ba 95       	dec	r27
    171a:	c9 f7       	brne	.-14     	; 0x170e <__ultoa_invert+0xa2>
    171c:	62 0f       	add	r22, r18
    171e:	73 1f       	adc	r23, r19
    1720:	84 1f       	adc	r24, r20
    1722:	95 1f       	adc	r25, r21
    1724:	a0 1d       	adc	r26, r0
    1726:	08 95       	ret

00001728 <__eerd_block_m162>:
    1728:	dc 01       	movw	r26, r24
    172a:	cb 01       	movw	r24, r22

0000172c <__eerd_blraw_m162>:
    172c:	fc 01       	movw	r30, r24
    172e:	e1 99       	sbic	0x1c, 1	; 28
    1730:	fe cf       	rjmp	.-4      	; 0x172e <__eerd_blraw_m162+0x2>
    1732:	06 c0       	rjmp	.+12     	; 0x1740 <__eerd_blraw_m162+0x14>
    1734:	ff bb       	out	0x1f, r31	; 31
    1736:	ee bb       	out	0x1e, r30	; 30
    1738:	e0 9a       	sbi	0x1c, 0	; 28
    173a:	31 96       	adiw	r30, 0x01	; 1
    173c:	0d b2       	in	r0, 0x1d	; 29
    173e:	0d 92       	st	X+, r0
    1740:	41 50       	subi	r20, 0x01	; 1
    1742:	50 40       	sbci	r21, 0x00	; 0
    1744:	b8 f7       	brcc	.-18     	; 0x1734 <__eerd_blraw_m162+0x8>
    1746:	08 95       	ret

00001748 <__eewr_byte_m162>:
    1748:	26 2f       	mov	r18, r22

0000174a <__eewr_r18_m162>:
    174a:	e1 99       	sbic	0x1c, 1	; 28
    174c:	fe cf       	rjmp	.-4      	; 0x174a <__eewr_r18_m162>
    174e:	9f bb       	out	0x1f, r25	; 31
    1750:	8e bb       	out	0x1e, r24	; 30
    1752:	2d bb       	out	0x1d, r18	; 29
    1754:	0f b6       	in	r0, 0x3f	; 63
    1756:	f8 94       	cli
    1758:	e2 9a       	sbi	0x1c, 2	; 28
    175a:	e1 9a       	sbi	0x1c, 1	; 28
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	01 96       	adiw	r24, 0x01	; 1
    1760:	08 95       	ret

00001762 <__prologue_saves__>:
    1762:	2f 92       	push	r2
    1764:	3f 92       	push	r3
    1766:	4f 92       	push	r4
    1768:	5f 92       	push	r5
    176a:	6f 92       	push	r6
    176c:	7f 92       	push	r7
    176e:	8f 92       	push	r8
    1770:	9f 92       	push	r9
    1772:	af 92       	push	r10
    1774:	bf 92       	push	r11
    1776:	cf 92       	push	r12
    1778:	df 92       	push	r13
    177a:	ef 92       	push	r14
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	cd b7       	in	r28, 0x3d	; 61
    1788:	de b7       	in	r29, 0x3e	; 62
    178a:	ca 1b       	sub	r28, r26
    178c:	db 0b       	sbc	r29, r27
    178e:	0f b6       	in	r0, 0x3f	; 63
    1790:	f8 94       	cli
    1792:	de bf       	out	0x3e, r29	; 62
    1794:	0f be       	out	0x3f, r0	; 63
    1796:	cd bf       	out	0x3d, r28	; 61
    1798:	09 94       	ijmp

0000179a <__epilogue_restores__>:
    179a:	2a 88       	ldd	r2, Y+18	; 0x12
    179c:	39 88       	ldd	r3, Y+17	; 0x11
    179e:	48 88       	ldd	r4, Y+16	; 0x10
    17a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    17a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    17a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    17aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    17ac:	b9 84       	ldd	r11, Y+9	; 0x09
    17ae:	c8 84       	ldd	r12, Y+8	; 0x08
    17b0:	df 80       	ldd	r13, Y+7	; 0x07
    17b2:	ee 80       	ldd	r14, Y+6	; 0x06
    17b4:	fd 80       	ldd	r15, Y+5	; 0x05
    17b6:	0c 81       	ldd	r16, Y+4	; 0x04
    17b8:	1b 81       	ldd	r17, Y+3	; 0x03
    17ba:	aa 81       	ldd	r26, Y+2	; 0x02
    17bc:	b9 81       	ldd	r27, Y+1	; 0x01
    17be:	ce 0f       	add	r28, r30
    17c0:	d1 1d       	adc	r29, r1
    17c2:	0f b6       	in	r0, 0x3f	; 63
    17c4:	f8 94       	cli
    17c6:	de bf       	out	0x3e, r29	; 62
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	cd bf       	out	0x3d, r28	; 61
    17cc:	ed 01       	movw	r28, r26
    17ce:	08 95       	ret

000017d0 <_exit>:
    17d0:	f8 94       	cli

000017d2 <__stop_program>:
    17d2:	ff cf       	rjmp	.-2      	; 0x17d2 <__stop_program>
