
node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011c  00800100  0000140a  0000149e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000140a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080021c  0080021c  000015ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015ba  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000218  00000000  00000000  00001616  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b2f  00000000  00000000  0000182e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bc4  00000000  00000000  0000335d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a10  00000000  00000000  00003f21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000478  00000000  00000000  00004934  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005c2  00000000  00000000  00004dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000be2  00000000  00000000  0000536e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a0  00000000  00000000  00005f50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <fdevopen+0x54>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ea e0       	ldi	r30, 0x0A	; 10
     37c:	f4 e1       	ldi	r31, 0x14	; 20
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ac 31       	cpi	r26, 0x1C	; 28
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	ac e1       	ldi	r26, 0x1C	; 28
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ac 32       	cpi	r26, 0x2C	; 44
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <main>
     39e:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
     3a6:	8c 5f       	subi	r24, 0xFC	; 252
     3a8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	8a 95       	dec	r24
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <ADC_read+0x8>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <ADC_read+0xe>
     3b4:	80 91 00 14 	lds	r24, 0x1400
     3b8:	08 95       	ret

000003ba <main>:


int main(void)
{

	USART_init(MYUBRR);
     3ba:	8f e1       	ldi	r24, 0x1F	; 31
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	0e 94 42 05 	call	0xa84	; 0xa84 <USART_init>
	// Activate external memory
	MCUCR |= (1 << SRE);
     3c2:	85 b7       	in	r24, 0x35	; 53
     3c4:	80 68       	ori	r24, 0x80	; 128
     3c6:	85 bf       	out	0x35, r24	; 53
		
	// Initialize	
	joy_init();
     3c8:	0e 94 33 03 	call	0x666	; 0x666 <joy_init>
	oled_init();
     3cc:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <oled_init>
	can_init();
     3d0:	0e 94 ef 01 	call	0x3de	; 0x3de <can_init>

	// Starts the FSM
	menu_init();
     3d4:	0e 94 8b 04 	call	0x916	; 0x916 <menu_init>
	
}
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	08 95       	ret

000003de <can_init>:
#include "MCP2515.h"

void can_init()
{
	
	mcp2515_init();
     3de:	0e 94 f5 02 	call	0x5ea	; 0x5ea <mcp2515_init>
	
	mcp2515_bit_modify(MCP_RXF0SIDH, 0xff , 0x00);
     3e2:	40 e0       	ldi	r20, 0x00	; 0
     3e4:	6f ef       	ldi	r22, 0xFF	; 255
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	0e 94 c2 02 	call	0x584	; 0x584 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXF0SIDL, 0xE0 , 0x00);
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	60 ee       	ldi	r22, 0xE0	; 224
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	0e 94 c2 02 	call	0x584	; 0x584 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_CANCTRL, 0xE0 , MODE_NORMAL);
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	60 ee       	ldi	r22, 0xE0	; 224
     3fa:	8f e0       	ldi	r24, 0x0F	; 15
     3fc:	0e 94 c2 02 	call	0x584	; 0x584 <mcp2515_bit_modify>
     400:	08 95       	ret

00000402 <can_message_receive>:
	
	mcp2515_request_to_send(MCP_RTS_TX0);
}

void can_message_receive(can_message_t* message, int buffer)
{
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	8c 01       	movw	r16, r24
     410:	e6 2e       	mov	r14, r22
	char i;
	
	// ID
	message->id = mcp2515_read(MCP_RXB0CTRL+buffer + 1);
     412:	81 e6       	ldi	r24, 0x61	; 97
     414:	86 0f       	add	r24, r22
     416:	0e 94 b0 02 	call	0x560	; 0x560 <mcp2515_read>
     41a:	f8 01       	movw	r30, r16
     41c:	80 83       	st	Z, r24
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
     41e:	85 e6       	ldi	r24, 0x65	; 101
     420:	8e 0d       	add	r24, r14
     422:	0e 94 b0 02 	call	0x560	; 0x560 <mcp2515_read>
     426:	f8 01       	movw	r30, r16
     428:	81 83       	std	Z+1, r24	; 0x01
	
	// Data
	for(i=0;i<message->length;i++)
     42a:	88 23       	and	r24, r24
     42c:	99 f0       	breq	.+38     	; 0x454 <can_message_receive+0x52>
     42e:	c0 e0       	ldi	r28, 0x00	; 0
     430:	d0 e0       	ldi	r29, 0x00	; 0
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
     432:	f6 e6       	ldi	r31, 0x66	; 102
     434:	ef 0e       	add	r14, r31
     436:	fc 2e       	mov	r15, r28
     438:	8c 2f       	mov	r24, r28
     43a:	8e 0d       	add	r24, r14
     43c:	0e 94 b0 02 	call	0x560	; 0x560 <mcp2515_read>
     440:	f8 01       	movw	r30, r16
     442:	ec 0f       	add	r30, r28
     444:	f1 1d       	adc	r31, r1
     446:	82 83       	std	Z+2, r24	; 0x02
     448:	f3 94       	inc	r15
     44a:	21 96       	adiw	r28, 0x01	; 1
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
	
	// Data
	for(i=0;i<message->length;i++)
     44c:	f8 01       	movw	r30, r16
     44e:	81 81       	ldd	r24, Z+1	; 0x01
     450:	f8 16       	cp	r15, r24
     452:	88 f3       	brcs	.-30     	; 0x436 <can_message_receive+0x34>
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
	}
	
}
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	1f 91       	pop	r17
     45a:	0f 91       	pop	r16
     45c:	ff 90       	pop	r15
     45e:	ef 90       	pop	r14
     460:	08 95       	ret

00000462 <can_get_message>:

int can_get_message(can_message_t* message)
{
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	ec 01       	movw	r28, r24
	
	if ((mcp2515_read(MCP_CANINTF) & 0x01) == 0x01)
     468:	8c e2       	ldi	r24, 0x2C	; 44
     46a:	0e 94 b0 02 	call	0x560	; 0x560 <mcp2515_read>
     46e:	80 ff       	sbrs	r24, 0
     470:	0d c0       	rjmp	.+26     	; 0x48c <can_get_message+0x2a>
	{
		can_message_receive(message,0);
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	ce 01       	movw	r24, r28
     478:	0e 94 01 02 	call	0x402	; 0x402 <can_message_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     47c:	40 e0       	ldi	r20, 0x00	; 0
     47e:	61 e0       	ldi	r22, 0x01	; 1
     480:	8c e2       	ldi	r24, 0x2C	; 44
     482:	0e 94 c2 02 	call	0x584	; 0x584 <mcp2515_bit_modify>
		return 1;
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	14 c0       	rjmp	.+40     	; 0x4b4 <can_get_message+0x52>
	}
	else if ((mcp2515_read(MCP_CANINTF) & 0x02) == 0x02)
     48c:	8c e2       	ldi	r24, 0x2C	; 44
     48e:	0e 94 b0 02 	call	0x560	; 0x560 <mcp2515_read>
     492:	81 ff       	sbrs	r24, 1
     494:	0d c0       	rjmp	.+26     	; 0x4b0 <can_get_message+0x4e>
	{
		can_message_receive(message,1);
     496:	61 e0       	ldi	r22, 0x01	; 1
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	ce 01       	movw	r24, r28
     49c:	0e 94 01 02 	call	0x402	; 0x402 <can_message_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     4a0:	40 e0       	ldi	r20, 0x00	; 0
     4a2:	62 e0       	ldi	r22, 0x02	; 2
     4a4:	8c e2       	ldi	r24, 0x2C	; 44
     4a6:	0e 94 c2 02 	call	0x584	; 0x584 <mcp2515_bit_modify>
		return 1;
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <can_get_message+0x52>
	}
	else
	{
		return 0;
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	08 95       	ret

000004ba <can_print>:
	
}


void can_print(can_message_t* msg)
{
     4ba:	cf 92       	push	r12
     4bc:	df 92       	push	r13
     4be:	ef 92       	push	r14
     4c0:	ff 92       	push	r15
     4c2:	0f 93       	push	r16
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	6c 01       	movw	r12, r24
	printf("ID: %c ,Length: %d, ",msg->id,msg->length);
     4cc:	fc 01       	movw	r30, r24
     4ce:	81 81       	ldd	r24, Z+1	; 0x01
     4d0:	1f 92       	push	r1
     4d2:	8f 93       	push	r24
     4d4:	80 81       	ld	r24, Z
     4d6:	1f 92       	push	r1
     4d8:	8f 93       	push	r24
     4da:	82 ee       	ldi	r24, 0xE2	; 226
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	9f 93       	push	r25
     4e0:	8f 93       	push	r24
     4e2:	0e 94 c2 05 	call	0xb84	; 0xb84 <printf>
	int i ;
	for (i=0; i<msg->length;i++)
     4e6:	f6 01       	movw	r30, r12
     4e8:	81 81       	ldd	r24, Z+1	; 0x01
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	0f 90       	pop	r0
     4f6:	88 23       	and	r24, r24
     4f8:	e1 f0       	breq	.+56     	; 0x532 <__stack+0x33>
     4fa:	76 01       	movw	r14, r12
     4fc:	f2 e0       	ldi	r31, 0x02	; 2
     4fe:	ef 0e       	add	r14, r31
     500:	f1 1c       	adc	r15, r1
     502:	c0 e0       	ldi	r28, 0x00	; 0
     504:	d0 e0       	ldi	r29, 0x00	; 0
	{
		printf("%i", msg->data[i]);
     506:	07 ef       	ldi	r16, 0xF7	; 247
     508:	11 e0       	ldi	r17, 0x01	; 1
     50a:	f7 01       	movw	r30, r14
     50c:	81 91       	ld	r24, Z+
     50e:	7f 01       	movw	r14, r30
     510:	1f 92       	push	r1
     512:	8f 93       	push	r24
     514:	1f 93       	push	r17
     516:	0f 93       	push	r16
     518:	0e 94 c2 05 	call	0xb84	; 0xb84 <printf>

void can_print(can_message_t* msg)
{
	printf("ID: %c ,Length: %d, ",msg->id,msg->length);
	int i ;
	for (i=0; i<msg->length;i++)
     51c:	21 96       	adiw	r28, 0x01	; 1
     51e:	f6 01       	movw	r30, r12
     520:	21 81       	ldd	r18, Z+1	; 0x01
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	0f 90       	pop	r0
     52a:	0f 90       	pop	r0
     52c:	c2 17       	cp	r28, r18
     52e:	d3 07       	cpc	r29, r19
     530:	64 f3       	brlt	.-40     	; 0x50a <__stack+0xb>
	{
		printf("%i", msg->data[i]);
	}
	printf("\n");
     532:	8a e0       	ldi	r24, 0x0A	; 10
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	0e 94 d6 05 	call	0xbac	; 0xbac <putchar>
}
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	ff 90       	pop	r15
     544:	ef 90       	pop	r14
     546:	df 90       	pop	r13
     548:	cf 90       	pop	r12
     54a:	08 95       	ret

0000054c <can_handle_message>:
	
}

void can_handle_message(can_message_t* message)
{
	switch (message->id)
     54c:	fc 01       	movw	r30, r24
     54e:	20 81       	ld	r18, Z
     550:	20 37       	cpi	r18, 0x70	; 112
     552:	19 f4       	brne	.+6      	; 0x55a <can_handle_message+0xe>
	{
		case 'p' :				// Print
			can_print(message);
     554:	0e 94 5d 02 	call	0x4ba	; 0x4ba <can_print>
			break;	
     558:	08 95       	ret
		default:
			can_print(message);					//do nothing 
     55a:	0e 94 5d 02 	call	0x4ba	; 0x4ba <can_print>
     55e:	08 95       	ret

00000560 <mcp2515_read>:
     560:	cf 93       	push	r28
     562:	c8 2f       	mov	r28, r24
     564:	0e 94 27 05 	call	0xa4e	; 0xa4e <spi_select>
     568:	83 e0       	ldi	r24, 0x03	; 3
     56a:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     56e:	8c 2f       	mov	r24, r28
     570:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     574:	0e 94 2f 05 	call	0xa5e	; 0xa5e <spi_receive>
     578:	c8 2f       	mov	r28, r24
     57a:	0e 94 29 05 	call	0xa52	; 0xa52 <spi_deselect>
     57e:	8c 2f       	mov	r24, r28
     580:	cf 91       	pop	r28
     582:	08 95       	ret

00000584 <mcp2515_bit_modify>:
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	18 2f       	mov	r17, r24
     58c:	d6 2f       	mov	r29, r22
     58e:	c4 2f       	mov	r28, r20
     590:	0e 94 27 05 	call	0xa4e	; 0xa4e <spi_select>
     594:	85 e0       	ldi	r24, 0x05	; 5
     596:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     59a:	81 2f       	mov	r24, r17
     59c:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5a0:	8d 2f       	mov	r24, r29
     5a2:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5a6:	8c 2f       	mov	r24, r28
     5a8:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5ac:	0e 94 29 05 	call	0xa52	; 0xa52 <spi_deselect>
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	1f 91       	pop	r17
     5b6:	08 95       	ret

000005b8 <mcp2515_reset>:
     5b8:	0e 94 27 05 	call	0xa4e	; 0xa4e <spi_select>
     5bc:	80 ec       	ldi	r24, 0xC0	; 192
     5be:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5c2:	0e 94 29 05 	call	0xa52	; 0xa52 <spi_deselect>
     5c6:	08 95       	ret

000005c8 <mcp2515_read_status>:
     5c8:	cf 93       	push	r28
     5ca:	0e 94 27 05 	call	0xa4e	; 0xa4e <spi_select>
     5ce:	83 e0       	ldi	r24, 0x03	; 3
     5d0:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5d4:	8e e0       	ldi	r24, 0x0E	; 14
     5d6:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     5da:	0e 94 2f 05 	call	0xa5e	; 0xa5e <spi_receive>
     5de:	c8 2f       	mov	r28, r24
     5e0:	0e 94 29 05 	call	0xa52	; 0xa52 <spi_deselect>
     5e4:	8c 2f       	mov	r24, r28
     5e6:	cf 91       	pop	r28
     5e8:	08 95       	ret

000005ea <mcp2515_init>:
     5ea:	0e 94 34 05 	call	0xa68	; 0xa68 <spi_init>
     5ee:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <mcp2515_reset>
     5f2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <mcp2515_read_status>
     5f6:	80 7e       	andi	r24, 0xE0	; 224
     5f8:	80 38       	cpi	r24, 0x80	; 128
     5fa:	21 f0       	breq	.+8      	; 0x604 <mcp2515_init+0x1a>
     5fc:	8a ef       	ldi	r24, 0xFA	; 250
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	0e 94 dd 05 	call	0xbba	; 0xbba <puts>
     604:	08 95       	ret

00000606 <joy_calibrate>:
char x_ref = 0;
char y_ref = 0;



void joy_calibrate(){
     606:	ef 92       	push	r14
     608:	ff 92       	push	r15
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	ca e0       	ldi	r28, 0x0A	; 10
     614:	d0 e0       	ldi	r29, 0x00	; 0
	int sum_x=0;
	int sum_y=0;
     616:	00 e0       	ldi	r16, 0x00	; 0
     618:	10 e0       	ldi	r17, 0x00	; 0
char y_ref = 0;



void joy_calibrate(){
	int sum_x=0;
     61a:	e1 2c       	mov	r14, r1
     61c:	f1 2c       	mov	r15, r1
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
		sum_x += ADC_read(1);
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     626:	e8 0e       	add	r14, r24
     628:	f1 1c       	adc	r15, r1
		sum_y += ADC_read(0);
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     632:	08 0f       	add	r16, r24
     634:	11 1d       	adc	r17, r1
     636:	21 97       	sbiw	r28, 0x01	; 1

void joy_calibrate(){
	int sum_x=0;
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
     638:	20 97       	sbiw	r28, 0x00	; 0
     63a:	89 f7       	brne	.-30     	; 0x61e <joy_calibrate+0x18>
		sum_x += ADC_read(1);
		sum_y += ADC_read(0);
	}
	x_ref = sum_x/10;
     63c:	2a e0       	ldi	r18, 0x0A	; 10
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	c7 01       	movw	r24, r14
     642:	b9 01       	movw	r22, r18
     644:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__divmodhi4>
     648:	60 93 1d 02 	sts	0x021D, r22
	y_ref = sum_y/10;
     64c:	c8 01       	movw	r24, r16
     64e:	b9 01       	movw	r22, r18
     650:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__divmodhi4>
     654:	60 93 1c 02 	sts	0x021C, r22
	
}
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	ff 90       	pop	r15
     662:	ef 90       	pop	r14
     664:	08 95       	ret

00000666 <joy_init>:

void joy_init(){
	joy_calibrate();
     666:	0e 94 03 03 	call	0x606	; 0x606 <joy_calibrate>
     66a:	08 95       	ret

0000066c <get_position>:
	
}

joy_position_t get_position(){
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
	joy_position_t position;
	position.x_pos = (ADC_read(1) - x_ref)*100/128;
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	20 91 1d 02 	lds	r18, 0x021D
     67e:	82 1b       	sub	r24, r18
     680:	91 09       	sbc	r25, r1
     682:	44 e6       	ldi	r20, 0x64	; 100
     684:	48 9f       	mul	r20, r24
     686:	90 01       	movw	r18, r0
     688:	49 9f       	mul	r20, r25
     68a:	30 0d       	add	r19, r0
     68c:	11 24       	eor	r1, r1
     68e:	33 23       	and	r19, r19
     690:	14 f4       	brge	.+4      	; 0x696 <get_position+0x2a>
     692:	21 58       	subi	r18, 0x81	; 129
     694:	3f 4f       	sbci	r19, 0xFF	; 255
     696:	e9 01       	movw	r28, r18
     698:	cc 0f       	add	r28, r28
     69a:	cd 2f       	mov	r28, r29
     69c:	cc 1f       	adc	r28, r28
     69e:	dd 0b       	sbc	r29, r29
	position.y_pos = (ADC_read(0) - y_ref)*100/128;
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	20 91 1c 02 	lds	r18, 0x021C
     6ae:	82 1b       	sub	r24, r18
     6b0:	91 09       	sbc	r25, r1
     6b2:	44 e6       	ldi	r20, 0x64	; 100
     6b4:	48 9f       	mul	r20, r24
     6b6:	90 01       	movw	r18, r0
     6b8:	49 9f       	mul	r20, r25
     6ba:	30 0d       	add	r19, r0
     6bc:	11 24       	eor	r1, r1
     6be:	33 23       	and	r19, r19
     6c0:	14 f4       	brge	.+4      	; 0x6c6 <get_position+0x5a>
     6c2:	21 58       	subi	r18, 0x81	; 129
     6c4:	3f 4f       	sbci	r19, 0xFF	; 255
	return position;
     6c6:	be 01       	movw	r22, r28
     6c8:	c9 01       	movw	r24, r18
     6ca:	88 0f       	add	r24, r24
     6cc:	89 2f       	mov	r24, r25
     6ce:	88 1f       	adc	r24, r24
     6d0:	99 0b       	sbc	r25, r25
}
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	08 95       	ret

000006d8 <get_direction>:


direction get_direction(){
	
	joy_position_t position = get_position();
     6d8:	0e 94 36 03 	call	0x66c	; 0x66c <get_position>
	
	if (position.x_pos > 70)
     6dc:	67 34       	cpi	r22, 0x47	; 71
     6de:	71 05       	cpc	r23, r1
     6e0:	64 f4       	brge	.+24     	; 0x6fa <get_direction+0x22>
		{

			return RIGHT;
		}
	else if (position.x_pos < -70)
     6e2:	6a 3b       	cpi	r22, 0xBA	; 186
     6e4:	4f ef       	ldi	r20, 0xFF	; 255
     6e6:	74 07       	cpc	r23, r20
     6e8:	54 f0       	brlt	.+20     	; 0x6fe <get_direction+0x26>
		{

			return LEFT;
		}
	else if (position.y_pos > 70)
     6ea:	87 34       	cpi	r24, 0x47	; 71
     6ec:	91 05       	cpc	r25, r1
     6ee:	4c f4       	brge	.+18     	; 0x702 <get_direction+0x2a>
		{

			return UP;
		}
	else if (position.y_pos < -70)
     6f0:	8a 3b       	cpi	r24, 0xBA	; 186
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	44 f4       	brge	.+16     	; 0x706 <get_direction+0x2e>
		{

			return DOWN;
     6f6:	83 e0       	ldi	r24, 0x03	; 3
     6f8:	08 95       	ret
	joy_position_t position = get_position();
	
	if (position.x_pos > 70)
		{

			return RIGHT;
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	08 95       	ret
		}
	else if (position.x_pos < -70)
		{

			return LEFT;
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	08 95       	ret
		}
	else if (position.y_pos > 70)
		{

			return UP;
     702:	82 e0       	ldi	r24, 0x02	; 2
     704:	08 95       	ret
			return DOWN;
		}
	else
		{

			return NEUTRAL;
     706:	84 e0       	ldi	r24, 0x04	; 4
		}
	
}
     708:	08 95       	ret

0000070a <update_next>:
	*last_dir = *curr_dir;
}


void update_next(direction dir){
	if (dir == DOWN) {
     70a:	83 30       	cpi	r24, 0x03	; 3
     70c:	41 f5       	brne	.+80     	; 0x75e <update_next+0x54>
		if (next+1 <= current->number_children){
     70e:	80 91 20 02 	lds	r24, 0x0220
     712:	90 91 21 02 	lds	r25, 0x0221
     716:	ac 01       	movw	r20, r24
     718:	4f 5f       	subi	r20, 0xFF	; 255
     71a:	5f 4f       	sbci	r21, 0xFF	; 255
     71c:	e0 91 1e 02 	lds	r30, 0x021E
     720:	f0 91 1f 02 	lds	r31, 0x021F
     724:	27 85       	ldd	r18, Z+15	; 0x0f
     726:	30 89       	ldd	r19, Z+16	; 0x10
     728:	24 17       	cp	r18, r20
     72a:	35 07       	cpc	r19, r21
     72c:	b4 f1       	brlt	.+108    	; 0x79a <update_next+0x90>
			oled_goto(next,0);
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
			oled_print(" ");
     734:	85 ef       	ldi	r24, 0xF5	; 245
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
			next++;
     73c:	80 91 20 02 	lds	r24, 0x0220
     740:	90 91 21 02 	lds	r25, 0x0221
     744:	01 96       	adiw	r24, 0x01	; 1
     746:	90 93 21 02 	sts	0x0221, r25
     74a:	80 93 20 02 	sts	0x0220, r24
			oled_goto(next,0);
     74e:	60 e0       	ldi	r22, 0x00	; 0
     750:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
			oled_print("-");
     754:	89 e1       	ldi	r24, 0x19	; 25
     756:	92 e0       	ldi	r25, 0x02	; 2
     758:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
     75c:	08 95       	ret
		}
		
	}
	else{
		if (next > 1){
     75e:	80 91 20 02 	lds	r24, 0x0220
     762:	90 91 21 02 	lds	r25, 0x0221
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	91 05       	cpc	r25, r1
     76a:	bc f0       	brlt	.+46     	; 0x79a <update_next+0x90>
			oled_goto(next,0);
     76c:	60 e0       	ldi	r22, 0x00	; 0
     76e:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
			oled_print(" ");
     772:	85 ef       	ldi	r24, 0xF5	; 245
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
			next--;
     77a:	80 91 20 02 	lds	r24, 0x0220
     77e:	90 91 21 02 	lds	r25, 0x0221
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	90 93 21 02 	sts	0x0221, r25
     788:	80 93 20 02 	sts	0x0220, r24
			oled_goto(next,0);
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
			oled_print("-");
     792:	89 e1       	ldi	r24, 0x19	; 25
     794:	92 e0       	ldi	r25, 0x02	; 2
     796:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
     79a:	08 95       	ret

0000079c <menu_print>:
		}
	}
}

void menu_print(menu_t* object){
     79c:	ef 92       	push	r14
     79e:	ff 92       	push	r15
     7a0:	0f 93       	push	r16
     7a2:	1f 93       	push	r17
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
     7a8:	7c 01       	movw	r14, r24
	oled_clear_all();
     7aa:	0e 94 1a 05 	call	0xa34	; 0xa34 <oled_clear_all>
	oled_goto(0,0);
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
	oled_print(object->name);
     7b6:	c7 01       	movw	r24, r14
     7b8:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
	oled_goto(next,0);
     7bc:	60 e0       	ldi	r22, 0x00	; 0
     7be:	80 91 20 02 	lds	r24, 0x0220
     7c2:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
	oled_print("-");
     7c6:	89 e1       	ldi	r24, 0x19	; 25
     7c8:	92 e0       	ldi	r25, 0x02	; 2
     7ca:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     7ce:	f7 01       	movw	r30, r14
     7d0:	87 85       	ldd	r24, Z+15	; 0x0f
     7d2:	90 89       	ldd	r25, Z+16	; 0x10
     7d4:	01 96       	adiw	r24, 0x01	; 1
     7d6:	02 97       	sbiw	r24, 0x02	; 2
     7d8:	c4 f0       	brlt	.+48     	; 0x80a <menu_print+0x6e>
     7da:	87 01       	movw	r16, r14
     7dc:	0b 5e       	subi	r16, 0xEB	; 235
     7de:	1f 4f       	sbci	r17, 0xFF	; 255
     7e0:	c1 e0       	ldi	r28, 0x01	; 1
     7e2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i,8);
     7e4:	68 e0       	ldi	r22, 0x08	; 8
     7e6:	8c 2f       	mov	r24, r28
     7e8:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
		oled_print((object->children[i-1])->name);
     7ec:	f8 01       	movw	r30, r16
     7ee:	81 91       	ld	r24, Z+
     7f0:	91 91       	ld	r25, Z+
     7f2:	8f 01       	movw	r16, r30
     7f4:	0e 94 cd 04 	call	0x99a	; 0x99a <oled_print>
	oled_print(object->name);
	oled_goto(next,0);
	oled_print("-");
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     7f8:	21 96       	adiw	r28, 0x01	; 1
     7fa:	f7 01       	movw	r30, r14
     7fc:	27 85       	ldd	r18, Z+15	; 0x0f
     7fe:	30 89       	ldd	r19, Z+16	; 0x10
     800:	2f 5f       	subi	r18, 0xFF	; 255
     802:	3f 4f       	sbci	r19, 0xFF	; 255
     804:	c2 17       	cp	r28, r18
     806:	d3 07       	cpc	r29, r19
     808:	6c f3       	brlt	.-38     	; 0x7e4 <menu_print+0x48>
	{
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	1f 91       	pop	r17
     810:	0f 91       	pop	r16
     812:	ff 90       	pop	r15
     814:	ef 90       	pop	r14
     816:	08 95       	ret

00000818 <menu_handler>:
}



void menu_handler(direction* curr_dir, direction* last_dir)
{
     818:	0f 93       	push	r16
     81a:	1f 93       	push	r17
     81c:	cf 93       	push	r28
     81e:	df 93       	push	r29
     820:	8c 01       	movw	r16, r24
     822:	eb 01       	movw	r28, r22
	
	*curr_dir = get_direction();
     824:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <get_direction>
     828:	f8 01       	movw	r30, r16
     82a:	80 83       	st	Z, r24
	if (*curr_dir != *last_dir)
     82c:	98 81       	ld	r25, Y
     82e:	89 17       	cp	r24, r25
     830:	e9 f1       	breq	.+122    	; 0x8ac <menu_handler+0x94>
	{
		switch (*curr_dir){
     832:	81 30       	cpi	r24, 0x01	; 1
     834:	31 f0       	breq	.+12     	; 0x842 <menu_handler+0x2a>
     836:	f0 f0       	brcs	.+60     	; 0x874 <menu_handler+0x5c>
     838:	82 30       	cpi	r24, 0x02	; 2
     83a:	89 f1       	breq	.+98     	; 0x89e <menu_handler+0x86>
     83c:	83 30       	cpi	r24, 0x03	; 3
     83e:	99 f1       	breq	.+102    	; 0x8a6 <menu_handler+0x8e>
     840:	35 c0       	rjmp	.+106    	; 0x8ac <menu_handler+0x94>
			case RIGHT:
			//if (current->children[next]->number_children == 0){
			//current->children[next]->fnc_pointer();
			//}
			
			if (next == 3)
     842:	80 91 20 02 	lds	r24, 0x0220
     846:	90 91 21 02 	lds	r25, 0x0221
     84a:	03 97       	sbiw	r24, 0x03	; 3
     84c:	79 f5       	brne	.+94     	; 0x8ac <menu_handler+0x94>
			{
				current = current->children[next-1];
     84e:	e0 91 1e 02 	lds	r30, 0x021E
     852:	f0 91 1f 02 	lds	r31, 0x021F
     856:	81 8d       	ldd	r24, Z+25	; 0x19
     858:	92 8d       	ldd	r25, Z+26	; 0x1a
     85a:	90 93 1f 02 	sts	0x021F, r25
     85e:	80 93 1e 02 	sts	0x021E, r24
				next = 1;
     862:	21 e0       	ldi	r18, 0x01	; 1
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	30 93 21 02 	sts	0x0221, r19
     86a:	20 93 20 02 	sts	0x0220, r18
				menu_print(current);
     86e:	0e 94 ce 03 	call	0x79c	; 0x79c <menu_print>
     872:	1c c0       	rjmp	.+56     	; 0x8ac <menu_handler+0x94>
			}

			break;
			case LEFT:
			if (current->parent != NULL){
     874:	e0 91 1e 02 	lds	r30, 0x021E
     878:	f0 91 1f 02 	lds	r31, 0x021F
     87c:	83 89       	ldd	r24, Z+19	; 0x13
     87e:	94 89       	ldd	r25, Z+20	; 0x14
     880:	00 97       	sbiw	r24, 0x00	; 0
     882:	a1 f0       	breq	.+40     	; 0x8ac <menu_handler+0x94>
				current = current->parent;
     884:	90 93 1f 02 	sts	0x021F, r25
     888:	80 93 1e 02 	sts	0x021E, r24
				next = 1;
     88c:	21 e0       	ldi	r18, 0x01	; 1
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	30 93 21 02 	sts	0x0221, r19
     894:	20 93 20 02 	sts	0x0220, r18
				menu_print(current);
     898:	0e 94 ce 03 	call	0x79c	; 0x79c <menu_print>
     89c:	07 c0       	rjmp	.+14     	; 0x8ac <menu_handler+0x94>
			}
			break;
			case UP:
			
			update_next(*curr_dir);
     89e:	82 e0       	ldi	r24, 0x02	; 2
     8a0:	0e 94 85 03 	call	0x70a	; 0x70a <update_next>
			break;
     8a4:	03 c0       	rjmp	.+6      	; 0x8ac <menu_handler+0x94>
			case DOWN:
			
			update_next(*curr_dir);
     8a6:	83 e0       	ldi	r24, 0x03	; 3
     8a8:	0e 94 85 03 	call	0x70a	; 0x70a <update_next>
			break;
			default:
			break;
		}
	}
	*last_dir = *curr_dir;
     8ac:	f8 01       	movw	r30, r16
     8ae:	80 81       	ld	r24, Z
     8b0:	88 83       	st	Y, r24
}
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	08 95       	ret

000008bc <menu_fsm>:
	menu_fsm();
	
}


void menu_fsm(){
     8bc:	cf 93       	push	r28
     8be:	df 93       	push	r29
     8c0:	cd b7       	in	r28, 0x3d	; 61
     8c2:	de b7       	in	r29, 0x3e	; 62
     8c4:	2c 97       	sbiw	r28, 0x0c	; 12
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	f8 94       	cli
     8ca:	de bf       	out	0x3e, r29	; 62
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	cd bf       	out	0x3d, r28	; 61
	direction curr_dir;
	direction last_dir = NEUTRAL;
     8d0:	84 e0       	ldi	r24, 0x04	; 4
     8d2:	8a 83       	std	Y+2, r24	; 0x02
	joy_position_t joystick;
	
	// Testing
	can_message_t message = {'j',8,"joystick"};
     8d4:	8a e0       	ldi	r24, 0x0A	; 10
     8d6:	e8 ed       	ldi	r30, 0xD8	; 216
     8d8:	f1 e0       	ldi	r31, 0x01	; 1
     8da:	de 01       	movw	r26, r28
     8dc:	13 96       	adiw	r26, 0x03	; 3
     8de:	01 90       	ld	r0, Z+
     8e0:	0d 92       	st	X+, r0
     8e2:	8a 95       	dec	r24
     8e4:	e1 f7       	brne	.-8      	; 0x8de <menu_fsm+0x22>
	//can_message_send(&message);
	
	while(1)
	{
		menu_handler(&curr_dir, &last_dir);
     8e6:	be 01       	movw	r22, r28
     8e8:	6e 5f       	subi	r22, 0xFE	; 254
     8ea:	7f 4f       	sbci	r23, 0xFF	; 255
     8ec:	ce 01       	movw	r24, r28
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	0e 94 0c 04 	call	0x818	; 0x818 <menu_handler>
		/*        TESTING     */
		//joystick = get_position();
		//message.data[0] = joystick.x_pos;
		//message.data[1] = joystick.y_pos;
		//can_message_send(&message);
		if (can_get_message(&message) == 1)
     8f4:	ce 01       	movw	r24, r28
     8f6:	03 96       	adiw	r24, 0x03	; 3
     8f8:	0e 94 31 02 	call	0x462	; 0x462 <can_get_message>
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	21 f4       	brne	.+8      	; 0x908 <menu_fsm+0x4c>
		{
			can_handle_message(&message);
     900:	ce 01       	movw	r24, r28
     902:	03 96       	adiw	r24, 0x03	; 3
     904:	0e 94 a6 02 	call	0x54c	; 0x54c <can_handle_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	9f e2       	ldi	r25, 0x2F	; 47
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <menu_fsm+0x50>
     910:	00 c0       	rjmp	.+0      	; 0x912 <menu_fsm+0x56>
     912:	00 00       	nop
     914:	e8 cf       	rjmp	.-48     	; 0x8e6 <menu_fsm+0x2a>

00000916 <menu_init>:
menu_t sub4 = {"Debug",0,NULL ,NULL,{}};
menu_t menu = {"Main Menu",4,NULL,NULL,{&sub1,&sub2,&sub3,&sub4}};

void menu_init(){

	sub3sub1.parent= &sub3;
     916:	8c e4       	ldi	r24, 0x4C	; 76
     918:	91 e0       	ldi	r25, 0x01	; 1
     91a:	90 93 c9 01 	sts	0x01C9, r25
     91e:	80 93 c8 01 	sts	0x01C8, r24
	sub1.parent = &menu;	
     922:	86 e0       	ldi	r24, 0x06	; 6
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	90 93 a6 01 	sts	0x01A6, r25
     92a:	80 93 a5 01 	sts	0x01A5, r24
	sub2.parent = &menu;
     92e:	90 93 83 01 	sts	0x0183, r25
     932:	80 93 82 01 	sts	0x0182, r24
	sub3.parent = &menu;
     936:	90 93 60 01 	sts	0x0160, r25
     93a:	80 93 5f 01 	sts	0x015F, r24
	
	
	
	current = &menu;
     93e:	90 93 1f 02 	sts	0x021F, r25
     942:	80 93 1e 02 	sts	0x021E, r24
	next = 1;
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	90 93 21 02 	sts	0x0221, r25
     94e:	80 93 20 02 	sts	0x0220, r24
	
	
	menu_print(current);
     952:	86 e0       	ldi	r24, 0x06	; 6
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	0e 94 ce 03 	call	0x79c	; 0x79c <menu_print>
	menu_fsm();
     95a:	0e 94 5e 04 	call	0x8bc	; 0x8bc <menu_fsm>

0000095e <oled_print_char>:
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	ec 01       	movw	r28, r24
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	30 e0       	ldi	r19, 0x00	; 0
     968:	a0 e0       	ldi	r26, 0x00	; 0
     96a:	b2 e1       	ldi	r27, 0x12	; 18
     96c:	e8 81       	ld	r30, Y
     96e:	f0 e0       	ldi	r31, 0x00	; 0
     970:	b0 97       	sbiw	r30, 0x20	; 32
     972:	ee 0f       	add	r30, r30
     974:	ff 1f       	adc	r31, r31
     976:	ee 0f       	add	r30, r30
     978:	ff 1f       	adc	r31, r31
     97a:	ee 0f       	add	r30, r30
     97c:	ff 1f       	adc	r31, r31
     97e:	e2 0f       	add	r30, r18
     980:	f3 1f       	adc	r31, r19
     982:	e0 59       	subi	r30, 0x90	; 144
     984:	ff 4f       	sbci	r31, 0xFF	; 255
     986:	e4 91       	lpm	r30, Z
     988:	ec 93       	st	X, r30
     98a:	2f 5f       	subi	r18, 0xFF	; 255
     98c:	3f 4f       	sbci	r19, 0xFF	; 255
     98e:	28 30       	cpi	r18, 0x08	; 8
     990:	31 05       	cpc	r19, r1
     992:	61 f7       	brne	.-40     	; 0x96c <oled_print_char+0xe>
     994:	df 91       	pop	r29
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <oled_print>:
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	fc 01       	movw	r30, r24
     9a0:	20 81       	ld	r18, Z
     9a2:	22 23       	and	r18, r18
     9a4:	51 f0       	breq	.+20     	; 0x9ba <oled_print+0x20>
     9a6:	ec 01       	movw	r28, r24
     9a8:	21 96       	adiw	r28, 0x01	; 1
     9aa:	0e 94 af 04 	call	0x95e	; 0x95e <oled_print_char>
     9ae:	ce 01       	movw	r24, r28
     9b0:	21 96       	adiw	r28, 0x01	; 1
     9b2:	fc 01       	movw	r30, r24
     9b4:	20 81       	ld	r18, Z
     9b6:	21 11       	cpse	r18, r1
     9b8:	f8 cf       	rjmp	.-16     	; 0x9aa <oled_print+0x10>
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	08 95       	ret

000009c0 <oled_init>:
     9c0:	e0 e0       	ldi	r30, 0x00	; 0
     9c2:	f0 e1       	ldi	r31, 0x10	; 16
     9c4:	8e ea       	ldi	r24, 0xAE	; 174
     9c6:	80 83       	st	Z, r24
     9c8:	81 ea       	ldi	r24, 0xA1	; 161
     9ca:	80 83       	st	Z, r24
     9cc:	8a ed       	ldi	r24, 0xDA	; 218
     9ce:	80 83       	st	Z, r24
     9d0:	82 e1       	ldi	r24, 0x12	; 18
     9d2:	80 83       	st	Z, r24
     9d4:	88 ec       	ldi	r24, 0xC8	; 200
     9d6:	80 83       	st	Z, r24
     9d8:	88 ea       	ldi	r24, 0xA8	; 168
     9da:	80 83       	st	Z, r24
     9dc:	8f e3       	ldi	r24, 0x3F	; 63
     9de:	80 83       	st	Z, r24
     9e0:	85 ed       	ldi	r24, 0xD5	; 213
     9e2:	80 83       	st	Z, r24
     9e4:	80 e8       	ldi	r24, 0x80	; 128
     9e6:	80 83       	st	Z, r24
     9e8:	81 e8       	ldi	r24, 0x81	; 129
     9ea:	80 83       	st	Z, r24
     9ec:	80 e5       	ldi	r24, 0x50	; 80
     9ee:	80 83       	st	Z, r24
     9f0:	89 ed       	ldi	r24, 0xD9	; 217
     9f2:	80 83       	st	Z, r24
     9f4:	81 e2       	ldi	r24, 0x21	; 33
     9f6:	80 83       	st	Z, r24
     9f8:	80 e2       	ldi	r24, 0x20	; 32
     9fa:	80 83       	st	Z, r24
     9fc:	10 82       	st	Z, r1
     9fe:	8b ed       	ldi	r24, 0xDB	; 219
     a00:	80 83       	st	Z, r24
     a02:	80 e3       	ldi	r24, 0x30	; 48
     a04:	80 83       	st	Z, r24
     a06:	8d ea       	ldi	r24, 0xAD	; 173
     a08:	80 83       	st	Z, r24
     a0a:	10 82       	st	Z, r1
     a0c:	84 ea       	ldi	r24, 0xA4	; 164
     a0e:	80 83       	st	Z, r24
     a10:	86 ea       	ldi	r24, 0xA6	; 166
     a12:	80 83       	st	Z, r24
     a14:	8f ea       	ldi	r24, 0xAF	; 175
     a16:	80 83       	st	Z, r24
     a18:	08 95       	ret

00000a1a <oled_goto>:
     a1a:	e0 e0       	ldi	r30, 0x00	; 0
     a1c:	f0 e1       	ldi	r31, 0x10	; 16
     a1e:	91 e2       	ldi	r25, 0x21	; 33
     a20:	90 83       	st	Z, r25
     a22:	60 83       	st	Z, r22
     a24:	9f e7       	ldi	r25, 0x7F	; 127
     a26:	90 83       	st	Z, r25
     a28:	92 e2       	ldi	r25, 0x22	; 34
     a2a:	90 83       	st	Z, r25
     a2c:	80 83       	st	Z, r24
     a2e:	87 e0       	ldi	r24, 0x07	; 7
     a30:	80 83       	st	Z, r24
     a32:	08 95       	ret

00000a34 <oled_clear_all>:
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	80 e0       	ldi	r24, 0x00	; 0
     a38:	0e 94 0d 05 	call	0xa1a	; 0xa1a <oled_goto>
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	94 e0       	ldi	r25, 0x04	; 4
     a40:	e0 e0       	ldi	r30, 0x00	; 0
     a42:	f2 e1       	ldi	r31, 0x12	; 18
     a44:	10 82       	st	Z, r1
     a46:	01 97       	sbiw	r24, 0x01	; 1
     a48:	00 97       	sbiw	r24, 0x00	; 0
     a4a:	e1 f7       	brne	.-8      	; 0xa44 <oled_clear_all+0x10>
     a4c:	08 95       	ret

00000a4e <spi_select>:
     a4e:	c4 98       	cbi	0x18, 4	; 24
     a50:	08 95       	ret

00000a52 <spi_deselect>:
     a52:	c4 9a       	sbi	0x18, 4	; 24
     a54:	08 95       	ret

00000a56 <spi_transmit>:
     a56:	8f b9       	out	0x0f, r24	; 15
     a58:	77 9b       	sbis	0x0e, 7	; 14
     a5a:	fe cf       	rjmp	.-4      	; 0xa58 <spi_transmit+0x2>
     a5c:	08 95       	ret

00000a5e <spi_receive>:
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	0e 94 2b 05 	call	0xa56	; 0xa56 <spi_transmit>
     a64:	8f b1       	in	r24, 0x0f	; 15
     a66:	08 95       	ret

00000a68 <spi_init>:
     a68:	87 b3       	in	r24, 0x17	; 23
     a6a:	80 6b       	ori	r24, 0xB0	; 176
     a6c:	87 bb       	out	0x17, r24	; 23
     a6e:	81 e5       	ldi	r24, 0x51	; 81
     a70:	8d b9       	out	0x0d, r24	; 13
     a72:	08 95       	ret

00000a74 <USART_transmit>:
     a74:	5d 9b       	sbis	0x0b, 5	; 11
     a76:	fe cf       	rjmp	.-4      	; 0xa74 <USART_transmit>
     a78:	8c b9       	out	0x0c, r24	; 12
     a7a:	08 95       	ret

00000a7c <USART_receive>:
     a7c:	5f 9b       	sbis	0x0b, 7	; 11
     a7e:	fe cf       	rjmp	.-4      	; 0xa7c <USART_receive>
     a80:	8c b1       	in	r24, 0x0c	; 12
     a82:	08 95       	ret

00000a84 <USART_init>:
     a84:	90 bd       	out	0x20, r25	; 32
     a86:	89 b9       	out	0x09, r24	; 9
     a88:	88 e1       	ldi	r24, 0x18	; 24
     a8a:	8a b9       	out	0x0a, r24	; 10
     a8c:	8e e8       	ldi	r24, 0x8E	; 142
     a8e:	80 bd       	out	0x20, r24	; 32
     a90:	6e e3       	ldi	r22, 0x3E	; 62
     a92:	75 e0       	ldi	r23, 0x05	; 5
     a94:	8a e3       	ldi	r24, 0x3A	; 58
     a96:	95 e0       	ldi	r25, 0x05	; 5
     a98:	0e 94 77 05 	call	0xaee	; 0xaee <fdevopen>
     a9c:	08 95       	ret

00000a9e <__divmodhi4>:
     a9e:	97 fb       	bst	r25, 7
     aa0:	07 2e       	mov	r0, r23
     aa2:	16 f4       	brtc	.+4      	; 0xaa8 <__divmodhi4+0xa>
     aa4:	00 94       	com	r0
     aa6:	07 d0       	rcall	.+14     	; 0xab6 <__divmodhi4_neg1>
     aa8:	77 fd       	sbrc	r23, 7
     aaa:	09 d0       	rcall	.+18     	; 0xabe <__divmodhi4_neg2>
     aac:	0e 94 63 05 	call	0xac6	; 0xac6 <__udivmodhi4>
     ab0:	07 fc       	sbrc	r0, 7
     ab2:	05 d0       	rcall	.+10     	; 0xabe <__divmodhi4_neg2>
     ab4:	3e f4       	brtc	.+14     	; 0xac4 <__divmodhi4_exit>

00000ab6 <__divmodhi4_neg1>:
     ab6:	90 95       	com	r25
     ab8:	81 95       	neg	r24
     aba:	9f 4f       	sbci	r25, 0xFF	; 255
     abc:	08 95       	ret

00000abe <__divmodhi4_neg2>:
     abe:	70 95       	com	r23
     ac0:	61 95       	neg	r22
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255

00000ac4 <__divmodhi4_exit>:
     ac4:	08 95       	ret

00000ac6 <__udivmodhi4>:
     ac6:	aa 1b       	sub	r26, r26
     ac8:	bb 1b       	sub	r27, r27
     aca:	51 e1       	ldi	r21, 0x11	; 17
     acc:	07 c0       	rjmp	.+14     	; 0xadc <__udivmodhi4_ep>

00000ace <__udivmodhi4_loop>:
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	a6 17       	cp	r26, r22
     ad4:	b7 07       	cpc	r27, r23
     ad6:	10 f0       	brcs	.+4      	; 0xadc <__udivmodhi4_ep>
     ad8:	a6 1b       	sub	r26, r22
     ada:	b7 0b       	sbc	r27, r23

00000adc <__udivmodhi4_ep>:
     adc:	88 1f       	adc	r24, r24
     ade:	99 1f       	adc	r25, r25
     ae0:	5a 95       	dec	r21
     ae2:	a9 f7       	brne	.-22     	; 0xace <__udivmodhi4_loop>
     ae4:	80 95       	com	r24
     ae6:	90 95       	com	r25
     ae8:	bc 01       	movw	r22, r24
     aea:	cd 01       	movw	r24, r26
     aec:	08 95       	ret

00000aee <fdevopen>:
     aee:	0f 93       	push	r16
     af0:	1f 93       	push	r17
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	ec 01       	movw	r28, r24
     af8:	8b 01       	movw	r16, r22
     afa:	00 97       	sbiw	r24, 0x00	; 0
     afc:	31 f4       	brne	.+12     	; 0xb0a <fdevopen+0x1c>
     afe:	61 15       	cp	r22, r1
     b00:	71 05       	cpc	r23, r1
     b02:	19 f4       	brne	.+6      	; 0xb0a <fdevopen+0x1c>
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	38 c0       	rjmp	.+112    	; 0xb7a <fdevopen+0x8c>
     b0a:	6e e0       	ldi	r22, 0x0E	; 14
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <calloc>
     b16:	fc 01       	movw	r30, r24
     b18:	00 97       	sbiw	r24, 0x00	; 0
     b1a:	a1 f3       	breq	.-24     	; 0xb04 <fdevopen+0x16>
     b1c:	80 e8       	ldi	r24, 0x80	; 128
     b1e:	83 83       	std	Z+3, r24	; 0x03
     b20:	01 15       	cp	r16, r1
     b22:	11 05       	cpc	r17, r1
     b24:	71 f0       	breq	.+28     	; 0xb42 <fdevopen+0x54>
     b26:	13 87       	std	Z+11, r17	; 0x0b
     b28:	02 87       	std	Z+10, r16	; 0x0a
     b2a:	81 e8       	ldi	r24, 0x81	; 129
     b2c:	83 83       	std	Z+3, r24	; 0x03
     b2e:	80 91 22 02 	lds	r24, 0x0222
     b32:	90 91 23 02 	lds	r25, 0x0223
     b36:	89 2b       	or	r24, r25
     b38:	21 f4       	brne	.+8      	; 0xb42 <fdevopen+0x54>
     b3a:	f0 93 23 02 	sts	0x0223, r31
     b3e:	e0 93 22 02 	sts	0x0222, r30
     b42:	20 97       	sbiw	r28, 0x00	; 0
     b44:	c9 f0       	breq	.+50     	; 0xb78 <fdevopen+0x8a>
     b46:	d1 87       	std	Z+9, r29	; 0x09
     b48:	c0 87       	std	Z+8, r28	; 0x08
     b4a:	83 81       	ldd	r24, Z+3	; 0x03
     b4c:	82 60       	ori	r24, 0x02	; 2
     b4e:	83 83       	std	Z+3, r24	; 0x03
     b50:	80 91 24 02 	lds	r24, 0x0224
     b54:	90 91 25 02 	lds	r25, 0x0225
     b58:	89 2b       	or	r24, r25
     b5a:	71 f4       	brne	.+28     	; 0xb78 <fdevopen+0x8a>
     b5c:	f0 93 25 02 	sts	0x0225, r31
     b60:	e0 93 24 02 	sts	0x0224, r30
     b64:	80 91 26 02 	lds	r24, 0x0226
     b68:	90 91 27 02 	lds	r25, 0x0227
     b6c:	89 2b       	or	r24, r25
     b6e:	21 f4       	brne	.+8      	; 0xb78 <fdevopen+0x8a>
     b70:	f0 93 27 02 	sts	0x0227, r31
     b74:	e0 93 26 02 	sts	0x0226, r30
     b78:	cf 01       	movw	r24, r30
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	1f 91       	pop	r17
     b80:	0f 91       	pop	r16
     b82:	08 95       	ret

00000b84 <printf>:
     b84:	a0 e0       	ldi	r26, 0x00	; 0
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	e8 ec       	ldi	r30, 0xC8	; 200
     b8a:	f5 e0       	ldi	r31, 0x05	; 5
     b8c:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__prologue_saves__+0x20>
     b90:	fe 01       	movw	r30, r28
     b92:	35 96       	adiw	r30, 0x05	; 5
     b94:	61 91       	ld	r22, Z+
     b96:	71 91       	ld	r23, Z+
     b98:	af 01       	movw	r20, r30
     b9a:	80 91 24 02 	lds	r24, 0x0224
     b9e:	90 91 25 02 	lds	r25, 0x0225
     ba2:	0e 94 0a 06 	call	0xc14	; 0xc14 <vfprintf>
     ba6:	e2 e0       	ldi	r30, 0x02	; 2
     ba8:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__epilogue_restores__+0x20>

00000bac <putchar>:
     bac:	60 91 24 02 	lds	r22, 0x0224
     bb0:	70 91 25 02 	lds	r23, 0x0225
     bb4:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     bb8:	08 95       	ret

00000bba <puts>:
     bba:	0f 93       	push	r16
     bbc:	1f 93       	push	r17
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	e0 91 24 02 	lds	r30, 0x0224
     bc6:	f0 91 25 02 	lds	r31, 0x0225
     bca:	23 81       	ldd	r18, Z+3	; 0x03
     bcc:	21 ff       	sbrs	r18, 1
     bce:	1b c0       	rjmp	.+54     	; 0xc06 <puts+0x4c>
     bd0:	ec 01       	movw	r28, r24
     bd2:	00 e0       	ldi	r16, 0x00	; 0
     bd4:	10 e0       	ldi	r17, 0x00	; 0
     bd6:	89 91       	ld	r24, Y+
     bd8:	60 91 24 02 	lds	r22, 0x0224
     bdc:	70 91 25 02 	lds	r23, 0x0225
     be0:	db 01       	movw	r26, r22
     be2:	18 96       	adiw	r26, 0x08	; 8
     be4:	ed 91       	ld	r30, X+
     be6:	fc 91       	ld	r31, X
     be8:	19 97       	sbiw	r26, 0x09	; 9
     bea:	88 23       	and	r24, r24
     bec:	31 f0       	breq	.+12     	; 0xbfa <puts+0x40>
     bee:	09 95       	icall
     bf0:	89 2b       	or	r24, r25
     bf2:	89 f3       	breq	.-30     	; 0xbd6 <puts+0x1c>
     bf4:	0f ef       	ldi	r16, 0xFF	; 255
     bf6:	1f ef       	ldi	r17, 0xFF	; 255
     bf8:	ee cf       	rjmp	.-36     	; 0xbd6 <puts+0x1c>
     bfa:	8a e0       	ldi	r24, 0x0A	; 10
     bfc:	09 95       	icall
     bfe:	89 2b       	or	r24, r25
     c00:	11 f4       	brne	.+4      	; 0xc06 <puts+0x4c>
     c02:	c8 01       	movw	r24, r16
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <puts+0x50>
     c06:	8f ef       	ldi	r24, 0xFF	; 255
     c08:	9f ef       	ldi	r25, 0xFF	; 255
     c0a:	df 91       	pop	r29
     c0c:	cf 91       	pop	r28
     c0e:	1f 91       	pop	r17
     c10:	0f 91       	pop	r16
     c12:	08 95       	ret

00000c14 <vfprintf>:
     c14:	ac e0       	ldi	r26, 0x0C	; 12
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	e0 e1       	ldi	r30, 0x10	; 16
     c1a:	f6 e0       	ldi	r31, 0x06	; 6
     c1c:	0c 94 cc 09 	jmp	0x1398	; 0x1398 <__prologue_saves__>
     c20:	7c 01       	movw	r14, r24
     c22:	6b 01       	movw	r12, r22
     c24:	8a 01       	movw	r16, r20
     c26:	fc 01       	movw	r30, r24
     c28:	17 82       	std	Z+7, r1	; 0x07
     c2a:	16 82       	std	Z+6, r1	; 0x06
     c2c:	83 81       	ldd	r24, Z+3	; 0x03
     c2e:	81 ff       	sbrs	r24, 1
     c30:	bd c1       	rjmp	.+890    	; 0xfac <vfprintf+0x398>
     c32:	ce 01       	movw	r24, r28
     c34:	01 96       	adiw	r24, 0x01	; 1
     c36:	4c 01       	movw	r8, r24
     c38:	f7 01       	movw	r30, r14
     c3a:	93 81       	ldd	r25, Z+3	; 0x03
     c3c:	f6 01       	movw	r30, r12
     c3e:	93 fd       	sbrc	r25, 3
     c40:	85 91       	lpm	r24, Z+
     c42:	93 ff       	sbrs	r25, 3
     c44:	81 91       	ld	r24, Z+
     c46:	6f 01       	movw	r12, r30
     c48:	88 23       	and	r24, r24
     c4a:	09 f4       	brne	.+2      	; 0xc4e <vfprintf+0x3a>
     c4c:	ab c1       	rjmp	.+854    	; 0xfa4 <vfprintf+0x390>
     c4e:	85 32       	cpi	r24, 0x25	; 37
     c50:	39 f4       	brne	.+14     	; 0xc60 <vfprintf+0x4c>
     c52:	93 fd       	sbrc	r25, 3
     c54:	85 91       	lpm	r24, Z+
     c56:	93 ff       	sbrs	r25, 3
     c58:	81 91       	ld	r24, Z+
     c5a:	6f 01       	movw	r12, r30
     c5c:	85 32       	cpi	r24, 0x25	; 37
     c5e:	29 f4       	brne	.+10     	; 0xc6a <vfprintf+0x56>
     c60:	b7 01       	movw	r22, r14
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     c68:	e7 cf       	rjmp	.-50     	; 0xc38 <vfprintf+0x24>
     c6a:	51 2c       	mov	r5, r1
     c6c:	31 2c       	mov	r3, r1
     c6e:	20 e0       	ldi	r18, 0x00	; 0
     c70:	20 32       	cpi	r18, 0x20	; 32
     c72:	a0 f4       	brcc	.+40     	; 0xc9c <vfprintf+0x88>
     c74:	8b 32       	cpi	r24, 0x2B	; 43
     c76:	69 f0       	breq	.+26     	; 0xc92 <vfprintf+0x7e>
     c78:	30 f4       	brcc	.+12     	; 0xc86 <vfprintf+0x72>
     c7a:	80 32       	cpi	r24, 0x20	; 32
     c7c:	59 f0       	breq	.+22     	; 0xc94 <vfprintf+0x80>
     c7e:	83 32       	cpi	r24, 0x23	; 35
     c80:	69 f4       	brne	.+26     	; 0xc9c <vfprintf+0x88>
     c82:	20 61       	ori	r18, 0x10	; 16
     c84:	2c c0       	rjmp	.+88     	; 0xcde <vfprintf+0xca>
     c86:	8d 32       	cpi	r24, 0x2D	; 45
     c88:	39 f0       	breq	.+14     	; 0xc98 <vfprintf+0x84>
     c8a:	80 33       	cpi	r24, 0x30	; 48
     c8c:	39 f4       	brne	.+14     	; 0xc9c <vfprintf+0x88>
     c8e:	21 60       	ori	r18, 0x01	; 1
     c90:	26 c0       	rjmp	.+76     	; 0xcde <vfprintf+0xca>
     c92:	22 60       	ori	r18, 0x02	; 2
     c94:	24 60       	ori	r18, 0x04	; 4
     c96:	23 c0       	rjmp	.+70     	; 0xcde <vfprintf+0xca>
     c98:	28 60       	ori	r18, 0x08	; 8
     c9a:	21 c0       	rjmp	.+66     	; 0xcde <vfprintf+0xca>
     c9c:	27 fd       	sbrc	r18, 7
     c9e:	27 c0       	rjmp	.+78     	; 0xcee <vfprintf+0xda>
     ca0:	30 ed       	ldi	r19, 0xD0	; 208
     ca2:	38 0f       	add	r19, r24
     ca4:	3a 30       	cpi	r19, 0x0A	; 10
     ca6:	78 f4       	brcc	.+30     	; 0xcc6 <vfprintf+0xb2>
     ca8:	26 ff       	sbrs	r18, 6
     caa:	06 c0       	rjmp	.+12     	; 0xcb8 <vfprintf+0xa4>
     cac:	fa e0       	ldi	r31, 0x0A	; 10
     cae:	5f 9e       	mul	r5, r31
     cb0:	30 0d       	add	r19, r0
     cb2:	11 24       	eor	r1, r1
     cb4:	53 2e       	mov	r5, r19
     cb6:	13 c0       	rjmp	.+38     	; 0xcde <vfprintf+0xca>
     cb8:	8a e0       	ldi	r24, 0x0A	; 10
     cba:	38 9e       	mul	r3, r24
     cbc:	30 0d       	add	r19, r0
     cbe:	11 24       	eor	r1, r1
     cc0:	33 2e       	mov	r3, r19
     cc2:	20 62       	ori	r18, 0x20	; 32
     cc4:	0c c0       	rjmp	.+24     	; 0xcde <vfprintf+0xca>
     cc6:	8e 32       	cpi	r24, 0x2E	; 46
     cc8:	21 f4       	brne	.+8      	; 0xcd2 <vfprintf+0xbe>
     cca:	26 fd       	sbrc	r18, 6
     ccc:	6b c1       	rjmp	.+726    	; 0xfa4 <vfprintf+0x390>
     cce:	20 64       	ori	r18, 0x40	; 64
     cd0:	06 c0       	rjmp	.+12     	; 0xcde <vfprintf+0xca>
     cd2:	8c 36       	cpi	r24, 0x6C	; 108
     cd4:	11 f4       	brne	.+4      	; 0xcda <vfprintf+0xc6>
     cd6:	20 68       	ori	r18, 0x80	; 128
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <vfprintf+0xca>
     cda:	88 36       	cpi	r24, 0x68	; 104
     cdc:	41 f4       	brne	.+16     	; 0xcee <vfprintf+0xda>
     cde:	f6 01       	movw	r30, r12
     ce0:	93 fd       	sbrc	r25, 3
     ce2:	85 91       	lpm	r24, Z+
     ce4:	93 ff       	sbrs	r25, 3
     ce6:	81 91       	ld	r24, Z+
     ce8:	6f 01       	movw	r12, r30
     cea:	81 11       	cpse	r24, r1
     cec:	c1 cf       	rjmp	.-126    	; 0xc70 <vfprintf+0x5c>
     cee:	98 2f       	mov	r25, r24
     cf0:	9f 7d       	andi	r25, 0xDF	; 223
     cf2:	95 54       	subi	r25, 0x45	; 69
     cf4:	93 30       	cpi	r25, 0x03	; 3
     cf6:	28 f4       	brcc	.+10     	; 0xd02 <vfprintf+0xee>
     cf8:	0c 5f       	subi	r16, 0xFC	; 252
     cfa:	1f 4f       	sbci	r17, 0xFF	; 255
     cfc:	ff e3       	ldi	r31, 0x3F	; 63
     cfe:	f9 83       	std	Y+1, r31	; 0x01
     d00:	0d c0       	rjmp	.+26     	; 0xd1c <vfprintf+0x108>
     d02:	83 36       	cpi	r24, 0x63	; 99
     d04:	31 f0       	breq	.+12     	; 0xd12 <vfprintf+0xfe>
     d06:	83 37       	cpi	r24, 0x73	; 115
     d08:	71 f0       	breq	.+28     	; 0xd26 <vfprintf+0x112>
     d0a:	83 35       	cpi	r24, 0x53	; 83
     d0c:	09 f0       	breq	.+2      	; 0xd10 <vfprintf+0xfc>
     d0e:	5b c0       	rjmp	.+182    	; 0xdc6 <vfprintf+0x1b2>
     d10:	22 c0       	rjmp	.+68     	; 0xd56 <vfprintf+0x142>
     d12:	f8 01       	movw	r30, r16
     d14:	80 81       	ld	r24, Z
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	0e 5f       	subi	r16, 0xFE	; 254
     d1a:	1f 4f       	sbci	r17, 0xFF	; 255
     d1c:	44 24       	eor	r4, r4
     d1e:	43 94       	inc	r4
     d20:	51 2c       	mov	r5, r1
     d22:	54 01       	movw	r10, r8
     d24:	15 c0       	rjmp	.+42     	; 0xd50 <vfprintf+0x13c>
     d26:	38 01       	movw	r6, r16
     d28:	f2 e0       	ldi	r31, 0x02	; 2
     d2a:	6f 0e       	add	r6, r31
     d2c:	71 1c       	adc	r7, r1
     d2e:	f8 01       	movw	r30, r16
     d30:	a0 80       	ld	r10, Z
     d32:	b1 80       	ldd	r11, Z+1	; 0x01
     d34:	26 ff       	sbrs	r18, 6
     d36:	03 c0       	rjmp	.+6      	; 0xd3e <vfprintf+0x12a>
     d38:	65 2d       	mov	r22, r5
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <vfprintf+0x12e>
     d3e:	6f ef       	ldi	r22, 0xFF	; 255
     d40:	7f ef       	ldi	r23, 0xFF	; 255
     d42:	c5 01       	movw	r24, r10
     d44:	2c 87       	std	Y+12, r18	; 0x0c
     d46:	0e 94 31 09 	call	0x1262	; 0x1262 <strnlen>
     d4a:	2c 01       	movw	r4, r24
     d4c:	83 01       	movw	r16, r6
     d4e:	2c 85       	ldd	r18, Y+12	; 0x0c
     d50:	2f 77       	andi	r18, 0x7F	; 127
     d52:	22 2e       	mov	r2, r18
     d54:	17 c0       	rjmp	.+46     	; 0xd84 <vfprintf+0x170>
     d56:	38 01       	movw	r6, r16
     d58:	f2 e0       	ldi	r31, 0x02	; 2
     d5a:	6f 0e       	add	r6, r31
     d5c:	71 1c       	adc	r7, r1
     d5e:	f8 01       	movw	r30, r16
     d60:	a0 80       	ld	r10, Z
     d62:	b1 80       	ldd	r11, Z+1	; 0x01
     d64:	26 ff       	sbrs	r18, 6
     d66:	03 c0       	rjmp	.+6      	; 0xd6e <vfprintf+0x15a>
     d68:	65 2d       	mov	r22, r5
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <vfprintf+0x15e>
     d6e:	6f ef       	ldi	r22, 0xFF	; 255
     d70:	7f ef       	ldi	r23, 0xFF	; 255
     d72:	c5 01       	movw	r24, r10
     d74:	2c 87       	std	Y+12, r18	; 0x0c
     d76:	0e 94 1f 09 	call	0x123e	; 0x123e <strnlen_P>
     d7a:	2c 01       	movw	r4, r24
     d7c:	2c 85       	ldd	r18, Y+12	; 0x0c
     d7e:	20 68       	ori	r18, 0x80	; 128
     d80:	22 2e       	mov	r2, r18
     d82:	83 01       	movw	r16, r6
     d84:	23 fc       	sbrc	r2, 3
     d86:	1b c0       	rjmp	.+54     	; 0xdbe <vfprintf+0x1aa>
     d88:	83 2d       	mov	r24, r3
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	48 16       	cp	r4, r24
     d8e:	59 06       	cpc	r5, r25
     d90:	b0 f4       	brcc	.+44     	; 0xdbe <vfprintf+0x1aa>
     d92:	b7 01       	movw	r22, r14
     d94:	80 e2       	ldi	r24, 0x20	; 32
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     d9c:	3a 94       	dec	r3
     d9e:	f4 cf       	rjmp	.-24     	; 0xd88 <vfprintf+0x174>
     da0:	f5 01       	movw	r30, r10
     da2:	27 fc       	sbrc	r2, 7
     da4:	85 91       	lpm	r24, Z+
     da6:	27 fe       	sbrs	r2, 7
     da8:	81 91       	ld	r24, Z+
     daa:	5f 01       	movw	r10, r30
     dac:	b7 01       	movw	r22, r14
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     db4:	31 10       	cpse	r3, r1
     db6:	3a 94       	dec	r3
     db8:	f1 e0       	ldi	r31, 0x01	; 1
     dba:	4f 1a       	sub	r4, r31
     dbc:	51 08       	sbc	r5, r1
     dbe:	41 14       	cp	r4, r1
     dc0:	51 04       	cpc	r5, r1
     dc2:	71 f7       	brne	.-36     	; 0xda0 <vfprintf+0x18c>
     dc4:	e5 c0       	rjmp	.+458    	; 0xf90 <vfprintf+0x37c>
     dc6:	84 36       	cpi	r24, 0x64	; 100
     dc8:	11 f0       	breq	.+4      	; 0xdce <vfprintf+0x1ba>
     dca:	89 36       	cpi	r24, 0x69	; 105
     dcc:	39 f5       	brne	.+78     	; 0xe1c <vfprintf+0x208>
     dce:	f8 01       	movw	r30, r16
     dd0:	27 ff       	sbrs	r18, 7
     dd2:	07 c0       	rjmp	.+14     	; 0xde2 <vfprintf+0x1ce>
     dd4:	60 81       	ld	r22, Z
     dd6:	71 81       	ldd	r23, Z+1	; 0x01
     dd8:	82 81       	ldd	r24, Z+2	; 0x02
     dda:	93 81       	ldd	r25, Z+3	; 0x03
     ddc:	0c 5f       	subi	r16, 0xFC	; 252
     dde:	1f 4f       	sbci	r17, 0xFF	; 255
     de0:	08 c0       	rjmp	.+16     	; 0xdf2 <vfprintf+0x1de>
     de2:	60 81       	ld	r22, Z
     de4:	71 81       	ldd	r23, Z+1	; 0x01
     de6:	88 27       	eor	r24, r24
     de8:	77 fd       	sbrc	r23, 7
     dea:	80 95       	com	r24
     dec:	98 2f       	mov	r25, r24
     dee:	0e 5f       	subi	r16, 0xFE	; 254
     df0:	1f 4f       	sbci	r17, 0xFF	; 255
     df2:	2f 76       	andi	r18, 0x6F	; 111
     df4:	b2 2e       	mov	r11, r18
     df6:	97 ff       	sbrs	r25, 7
     df8:	09 c0       	rjmp	.+18     	; 0xe0c <vfprintf+0x1f8>
     dfa:	90 95       	com	r25
     dfc:	80 95       	com	r24
     dfe:	70 95       	com	r23
     e00:	61 95       	neg	r22
     e02:	7f 4f       	sbci	r23, 0xFF	; 255
     e04:	8f 4f       	sbci	r24, 0xFF	; 255
     e06:	9f 4f       	sbci	r25, 0xFF	; 255
     e08:	20 68       	ori	r18, 0x80	; 128
     e0a:	b2 2e       	mov	r11, r18
     e0c:	2a e0       	ldi	r18, 0x0A	; 10
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	a4 01       	movw	r20, r8
     e12:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__ultoa_invert>
     e16:	a8 2e       	mov	r10, r24
     e18:	a8 18       	sub	r10, r8
     e1a:	44 c0       	rjmp	.+136    	; 0xea4 <vfprintf+0x290>
     e1c:	85 37       	cpi	r24, 0x75	; 117
     e1e:	29 f4       	brne	.+10     	; 0xe2a <vfprintf+0x216>
     e20:	2f 7e       	andi	r18, 0xEF	; 239
     e22:	b2 2e       	mov	r11, r18
     e24:	2a e0       	ldi	r18, 0x0A	; 10
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	25 c0       	rjmp	.+74     	; 0xe74 <vfprintf+0x260>
     e2a:	f2 2f       	mov	r31, r18
     e2c:	f9 7f       	andi	r31, 0xF9	; 249
     e2e:	bf 2e       	mov	r11, r31
     e30:	8f 36       	cpi	r24, 0x6F	; 111
     e32:	c1 f0       	breq	.+48     	; 0xe64 <vfprintf+0x250>
     e34:	18 f4       	brcc	.+6      	; 0xe3c <vfprintf+0x228>
     e36:	88 35       	cpi	r24, 0x58	; 88
     e38:	79 f0       	breq	.+30     	; 0xe58 <vfprintf+0x244>
     e3a:	b4 c0       	rjmp	.+360    	; 0xfa4 <vfprintf+0x390>
     e3c:	80 37       	cpi	r24, 0x70	; 112
     e3e:	19 f0       	breq	.+6      	; 0xe46 <vfprintf+0x232>
     e40:	88 37       	cpi	r24, 0x78	; 120
     e42:	21 f0       	breq	.+8      	; 0xe4c <vfprintf+0x238>
     e44:	af c0       	rjmp	.+350    	; 0xfa4 <vfprintf+0x390>
     e46:	2f 2f       	mov	r18, r31
     e48:	20 61       	ori	r18, 0x10	; 16
     e4a:	b2 2e       	mov	r11, r18
     e4c:	b4 fe       	sbrs	r11, 4
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <vfprintf+0x256>
     e50:	8b 2d       	mov	r24, r11
     e52:	84 60       	ori	r24, 0x04	; 4
     e54:	b8 2e       	mov	r11, r24
     e56:	09 c0       	rjmp	.+18     	; 0xe6a <vfprintf+0x256>
     e58:	24 ff       	sbrs	r18, 4
     e5a:	0a c0       	rjmp	.+20     	; 0xe70 <vfprintf+0x25c>
     e5c:	9f 2f       	mov	r25, r31
     e5e:	96 60       	ori	r25, 0x06	; 6
     e60:	b9 2e       	mov	r11, r25
     e62:	06 c0       	rjmp	.+12     	; 0xe70 <vfprintf+0x25c>
     e64:	28 e0       	ldi	r18, 0x08	; 8
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <vfprintf+0x260>
     e6a:	20 e1       	ldi	r18, 0x10	; 16
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0x260>
     e70:	20 e1       	ldi	r18, 0x10	; 16
     e72:	32 e0       	ldi	r19, 0x02	; 2
     e74:	f8 01       	movw	r30, r16
     e76:	b7 fe       	sbrs	r11, 7
     e78:	07 c0       	rjmp	.+14     	; 0xe88 <vfprintf+0x274>
     e7a:	60 81       	ld	r22, Z
     e7c:	71 81       	ldd	r23, Z+1	; 0x01
     e7e:	82 81       	ldd	r24, Z+2	; 0x02
     e80:	93 81       	ldd	r25, Z+3	; 0x03
     e82:	0c 5f       	subi	r16, 0xFC	; 252
     e84:	1f 4f       	sbci	r17, 0xFF	; 255
     e86:	06 c0       	rjmp	.+12     	; 0xe94 <vfprintf+0x280>
     e88:	60 81       	ld	r22, Z
     e8a:	71 81       	ldd	r23, Z+1	; 0x01
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 5f       	subi	r16, 0xFE	; 254
     e92:	1f 4f       	sbci	r17, 0xFF	; 255
     e94:	a4 01       	movw	r20, r8
     e96:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__ultoa_invert>
     e9a:	a8 2e       	mov	r10, r24
     e9c:	a8 18       	sub	r10, r8
     e9e:	fb 2d       	mov	r31, r11
     ea0:	ff 77       	andi	r31, 0x7F	; 127
     ea2:	bf 2e       	mov	r11, r31
     ea4:	b6 fe       	sbrs	r11, 6
     ea6:	0b c0       	rjmp	.+22     	; 0xebe <vfprintf+0x2aa>
     ea8:	2b 2d       	mov	r18, r11
     eaa:	2e 7f       	andi	r18, 0xFE	; 254
     eac:	a5 14       	cp	r10, r5
     eae:	50 f4       	brcc	.+20     	; 0xec4 <vfprintf+0x2b0>
     eb0:	b4 fe       	sbrs	r11, 4
     eb2:	0a c0       	rjmp	.+20     	; 0xec8 <vfprintf+0x2b4>
     eb4:	b2 fc       	sbrc	r11, 2
     eb6:	08 c0       	rjmp	.+16     	; 0xec8 <vfprintf+0x2b4>
     eb8:	2b 2d       	mov	r18, r11
     eba:	2e 7e       	andi	r18, 0xEE	; 238
     ebc:	05 c0       	rjmp	.+10     	; 0xec8 <vfprintf+0x2b4>
     ebe:	7a 2c       	mov	r7, r10
     ec0:	2b 2d       	mov	r18, r11
     ec2:	03 c0       	rjmp	.+6      	; 0xeca <vfprintf+0x2b6>
     ec4:	7a 2c       	mov	r7, r10
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <vfprintf+0x2b6>
     ec8:	75 2c       	mov	r7, r5
     eca:	24 ff       	sbrs	r18, 4
     ecc:	0d c0       	rjmp	.+26     	; 0xee8 <vfprintf+0x2d4>
     ece:	fe 01       	movw	r30, r28
     ed0:	ea 0d       	add	r30, r10
     ed2:	f1 1d       	adc	r31, r1
     ed4:	80 81       	ld	r24, Z
     ed6:	80 33       	cpi	r24, 0x30	; 48
     ed8:	11 f4       	brne	.+4      	; 0xede <vfprintf+0x2ca>
     eda:	29 7e       	andi	r18, 0xE9	; 233
     edc:	09 c0       	rjmp	.+18     	; 0xef0 <vfprintf+0x2dc>
     ede:	22 ff       	sbrs	r18, 2
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0x2da>
     ee2:	73 94       	inc	r7
     ee4:	73 94       	inc	r7
     ee6:	04 c0       	rjmp	.+8      	; 0xef0 <vfprintf+0x2dc>
     ee8:	82 2f       	mov	r24, r18
     eea:	86 78       	andi	r24, 0x86	; 134
     eec:	09 f0       	breq	.+2      	; 0xef0 <vfprintf+0x2dc>
     eee:	73 94       	inc	r7
     ef0:	23 fd       	sbrc	r18, 3
     ef2:	13 c0       	rjmp	.+38     	; 0xf1a <vfprintf+0x306>
     ef4:	20 ff       	sbrs	r18, 0
     ef6:	06 c0       	rjmp	.+12     	; 0xf04 <vfprintf+0x2f0>
     ef8:	5a 2c       	mov	r5, r10
     efa:	73 14       	cp	r7, r3
     efc:	18 f4       	brcc	.+6      	; 0xf04 <vfprintf+0x2f0>
     efe:	53 0c       	add	r5, r3
     f00:	57 18       	sub	r5, r7
     f02:	73 2c       	mov	r7, r3
     f04:	73 14       	cp	r7, r3
     f06:	68 f4       	brcc	.+26     	; 0xf22 <vfprintf+0x30e>
     f08:	b7 01       	movw	r22, r14
     f0a:	80 e2       	ldi	r24, 0x20	; 32
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	2c 87       	std	Y+12, r18	; 0x0c
     f10:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     f14:	73 94       	inc	r7
     f16:	2c 85       	ldd	r18, Y+12	; 0x0c
     f18:	f5 cf       	rjmp	.-22     	; 0xf04 <vfprintf+0x2f0>
     f1a:	73 14       	cp	r7, r3
     f1c:	10 f4       	brcc	.+4      	; 0xf22 <vfprintf+0x30e>
     f1e:	37 18       	sub	r3, r7
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <vfprintf+0x310>
     f22:	31 2c       	mov	r3, r1
     f24:	24 ff       	sbrs	r18, 4
     f26:	12 c0       	rjmp	.+36     	; 0xf4c <vfprintf+0x338>
     f28:	b7 01       	movw	r22, r14
     f2a:	80 e3       	ldi	r24, 0x30	; 48
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	2c 87       	std	Y+12, r18	; 0x0c
     f30:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     f34:	2c 85       	ldd	r18, Y+12	; 0x0c
     f36:	22 ff       	sbrs	r18, 2
     f38:	17 c0       	rjmp	.+46     	; 0xf68 <vfprintf+0x354>
     f3a:	21 ff       	sbrs	r18, 1
     f3c:	03 c0       	rjmp	.+6      	; 0xf44 <vfprintf+0x330>
     f3e:	88 e5       	ldi	r24, 0x58	; 88
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <vfprintf+0x334>
     f44:	88 e7       	ldi	r24, 0x78	; 120
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	b7 01       	movw	r22, r14
     f4a:	0c c0       	rjmp	.+24     	; 0xf64 <vfprintf+0x350>
     f4c:	82 2f       	mov	r24, r18
     f4e:	86 78       	andi	r24, 0x86	; 134
     f50:	59 f0       	breq	.+22     	; 0xf68 <vfprintf+0x354>
     f52:	21 fd       	sbrc	r18, 1
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <vfprintf+0x346>
     f56:	80 e2       	ldi	r24, 0x20	; 32
     f58:	01 c0       	rjmp	.+2      	; 0xf5c <vfprintf+0x348>
     f5a:	8b e2       	ldi	r24, 0x2B	; 43
     f5c:	27 fd       	sbrc	r18, 7
     f5e:	8d e2       	ldi	r24, 0x2D	; 45
     f60:	b7 01       	movw	r22, r14
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     f68:	a5 14       	cp	r10, r5
     f6a:	38 f4       	brcc	.+14     	; 0xf7a <vfprintf+0x366>
     f6c:	b7 01       	movw	r22, r14
     f6e:	80 e3       	ldi	r24, 0x30	; 48
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     f76:	5a 94       	dec	r5
     f78:	f7 cf       	rjmp	.-18     	; 0xf68 <vfprintf+0x354>
     f7a:	aa 94       	dec	r10
     f7c:	f4 01       	movw	r30, r8
     f7e:	ea 0d       	add	r30, r10
     f80:	f1 1d       	adc	r31, r1
     f82:	80 81       	ld	r24, Z
     f84:	b7 01       	movw	r22, r14
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     f8c:	a1 10       	cpse	r10, r1
     f8e:	f5 cf       	rjmp	.-22     	; 0xf7a <vfprintf+0x366>
     f90:	33 20       	and	r3, r3
     f92:	09 f4       	brne	.+2      	; 0xf96 <vfprintf+0x382>
     f94:	51 ce       	rjmp	.-862    	; 0xc38 <vfprintf+0x24>
     f96:	b7 01       	movw	r22, r14
     f98:	80 e2       	ldi	r24, 0x20	; 32
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	0e 94 3c 09 	call	0x1278	; 0x1278 <fputc>
     fa0:	3a 94       	dec	r3
     fa2:	f6 cf       	rjmp	.-20     	; 0xf90 <vfprintf+0x37c>
     fa4:	f7 01       	movw	r30, r14
     fa6:	86 81       	ldd	r24, Z+6	; 0x06
     fa8:	97 81       	ldd	r25, Z+7	; 0x07
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0x39c>
     fac:	8f ef       	ldi	r24, 0xFF	; 255
     fae:	9f ef       	ldi	r25, 0xFF	; 255
     fb0:	2c 96       	adiw	r28, 0x0c	; 12
     fb2:	e2 e1       	ldi	r30, 0x12	; 18
     fb4:	0c 94 e8 09 	jmp	0x13d0	; 0x13d0 <__epilogue_restores__>

00000fb8 <calloc>:
     fb8:	0f 93       	push	r16
     fba:	1f 93       	push	r17
     fbc:	cf 93       	push	r28
     fbe:	df 93       	push	r29
     fc0:	86 9f       	mul	r24, r22
     fc2:	80 01       	movw	r16, r0
     fc4:	87 9f       	mul	r24, r23
     fc6:	10 0d       	add	r17, r0
     fc8:	96 9f       	mul	r25, r22
     fca:	10 0d       	add	r17, r0
     fcc:	11 24       	eor	r1, r1
     fce:	c8 01       	movw	r24, r16
     fd0:	0e 94 f8 07 	call	0xff0	; 0xff0 <malloc>
     fd4:	ec 01       	movw	r28, r24
     fd6:	00 97       	sbiw	r24, 0x00	; 0
     fd8:	29 f0       	breq	.+10     	; 0xfe4 <calloc+0x2c>
     fda:	a8 01       	movw	r20, r16
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	0e 94 2a 09 	call	0x1254	; 0x1254 <memset>
     fe4:	ce 01       	movw	r24, r28
     fe6:	df 91       	pop	r29
     fe8:	cf 91       	pop	r28
     fea:	1f 91       	pop	r17
     fec:	0f 91       	pop	r16
     fee:	08 95       	ret

00000ff0 <malloc>:
     ff0:	cf 93       	push	r28
     ff2:	df 93       	push	r29
     ff4:	82 30       	cpi	r24, 0x02	; 2
     ff6:	91 05       	cpc	r25, r1
     ff8:	10 f4       	brcc	.+4      	; 0xffe <malloc+0xe>
     ffa:	82 e0       	ldi	r24, 0x02	; 2
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	e0 91 2a 02 	lds	r30, 0x022A
    1002:	f0 91 2b 02 	lds	r31, 0x022B
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	30 97       	sbiw	r30, 0x00	; 0
    1010:	39 f1       	breq	.+78     	; 0x1060 <malloc+0x70>
    1012:	40 81       	ld	r20, Z
    1014:	51 81       	ldd	r21, Z+1	; 0x01
    1016:	48 17       	cp	r20, r24
    1018:	59 07       	cpc	r21, r25
    101a:	b8 f0       	brcs	.+46     	; 0x104a <malloc+0x5a>
    101c:	48 17       	cp	r20, r24
    101e:	59 07       	cpc	r21, r25
    1020:	71 f4       	brne	.+28     	; 0x103e <malloc+0x4e>
    1022:	82 81       	ldd	r24, Z+2	; 0x02
    1024:	93 81       	ldd	r25, Z+3	; 0x03
    1026:	10 97       	sbiw	r26, 0x00	; 0
    1028:	29 f0       	breq	.+10     	; 0x1034 <malloc+0x44>
    102a:	13 96       	adiw	r26, 0x03	; 3
    102c:	9c 93       	st	X, r25
    102e:	8e 93       	st	-X, r24
    1030:	12 97       	sbiw	r26, 0x02	; 2
    1032:	2c c0       	rjmp	.+88     	; 0x108c <malloc+0x9c>
    1034:	90 93 2b 02 	sts	0x022B, r25
    1038:	80 93 2a 02 	sts	0x022A, r24
    103c:	27 c0       	rjmp	.+78     	; 0x108c <malloc+0x9c>
    103e:	21 15       	cp	r18, r1
    1040:	31 05       	cpc	r19, r1
    1042:	31 f0       	breq	.+12     	; 0x1050 <malloc+0x60>
    1044:	42 17       	cp	r20, r18
    1046:	53 07       	cpc	r21, r19
    1048:	18 f0       	brcs	.+6      	; 0x1050 <malloc+0x60>
    104a:	a9 01       	movw	r20, r18
    104c:	db 01       	movw	r26, r22
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <malloc+0x62>
    1050:	ef 01       	movw	r28, r30
    1052:	9a 01       	movw	r18, r20
    1054:	bd 01       	movw	r22, r26
    1056:	df 01       	movw	r26, r30
    1058:	02 80       	ldd	r0, Z+2	; 0x02
    105a:	f3 81       	ldd	r31, Z+3	; 0x03
    105c:	e0 2d       	mov	r30, r0
    105e:	d7 cf       	rjmp	.-82     	; 0x100e <malloc+0x1e>
    1060:	21 15       	cp	r18, r1
    1062:	31 05       	cpc	r19, r1
    1064:	f9 f0       	breq	.+62     	; 0x10a4 <malloc+0xb4>
    1066:	28 1b       	sub	r18, r24
    1068:	39 0b       	sbc	r19, r25
    106a:	24 30       	cpi	r18, 0x04	; 4
    106c:	31 05       	cpc	r19, r1
    106e:	80 f4       	brcc	.+32     	; 0x1090 <malloc+0xa0>
    1070:	8a 81       	ldd	r24, Y+2	; 0x02
    1072:	9b 81       	ldd	r25, Y+3	; 0x03
    1074:	61 15       	cp	r22, r1
    1076:	71 05       	cpc	r23, r1
    1078:	21 f0       	breq	.+8      	; 0x1082 <malloc+0x92>
    107a:	fb 01       	movw	r30, r22
    107c:	93 83       	std	Z+3, r25	; 0x03
    107e:	82 83       	std	Z+2, r24	; 0x02
    1080:	04 c0       	rjmp	.+8      	; 0x108a <malloc+0x9a>
    1082:	90 93 2b 02 	sts	0x022B, r25
    1086:	80 93 2a 02 	sts	0x022A, r24
    108a:	fe 01       	movw	r30, r28
    108c:	32 96       	adiw	r30, 0x02	; 2
    108e:	44 c0       	rjmp	.+136    	; 0x1118 <malloc+0x128>
    1090:	fe 01       	movw	r30, r28
    1092:	e2 0f       	add	r30, r18
    1094:	f3 1f       	adc	r31, r19
    1096:	81 93       	st	Z+, r24
    1098:	91 93       	st	Z+, r25
    109a:	22 50       	subi	r18, 0x02	; 2
    109c:	31 09       	sbc	r19, r1
    109e:	39 83       	std	Y+1, r19	; 0x01
    10a0:	28 83       	st	Y, r18
    10a2:	3a c0       	rjmp	.+116    	; 0x1118 <malloc+0x128>
    10a4:	20 91 28 02 	lds	r18, 0x0228
    10a8:	30 91 29 02 	lds	r19, 0x0229
    10ac:	23 2b       	or	r18, r19
    10ae:	41 f4       	brne	.+16     	; 0x10c0 <malloc+0xd0>
    10b0:	20 91 02 01 	lds	r18, 0x0102
    10b4:	30 91 03 01 	lds	r19, 0x0103
    10b8:	30 93 29 02 	sts	0x0229, r19
    10bc:	20 93 28 02 	sts	0x0228, r18
    10c0:	20 91 00 01 	lds	r18, 0x0100
    10c4:	30 91 01 01 	lds	r19, 0x0101
    10c8:	21 15       	cp	r18, r1
    10ca:	31 05       	cpc	r19, r1
    10cc:	41 f4       	brne	.+16     	; 0x10de <malloc+0xee>
    10ce:	2d b7       	in	r18, 0x3d	; 61
    10d0:	3e b7       	in	r19, 0x3e	; 62
    10d2:	40 91 04 01 	lds	r20, 0x0104
    10d6:	50 91 05 01 	lds	r21, 0x0105
    10da:	24 1b       	sub	r18, r20
    10dc:	35 0b       	sbc	r19, r21
    10de:	e0 91 28 02 	lds	r30, 0x0228
    10e2:	f0 91 29 02 	lds	r31, 0x0229
    10e6:	e2 17       	cp	r30, r18
    10e8:	f3 07       	cpc	r31, r19
    10ea:	a0 f4       	brcc	.+40     	; 0x1114 <malloc+0x124>
    10ec:	2e 1b       	sub	r18, r30
    10ee:	3f 0b       	sbc	r19, r31
    10f0:	28 17       	cp	r18, r24
    10f2:	39 07       	cpc	r19, r25
    10f4:	78 f0       	brcs	.+30     	; 0x1114 <malloc+0x124>
    10f6:	ac 01       	movw	r20, r24
    10f8:	4e 5f       	subi	r20, 0xFE	; 254
    10fa:	5f 4f       	sbci	r21, 0xFF	; 255
    10fc:	24 17       	cp	r18, r20
    10fe:	35 07       	cpc	r19, r21
    1100:	48 f0       	brcs	.+18     	; 0x1114 <malloc+0x124>
    1102:	4e 0f       	add	r20, r30
    1104:	5f 1f       	adc	r21, r31
    1106:	50 93 29 02 	sts	0x0229, r21
    110a:	40 93 28 02 	sts	0x0228, r20
    110e:	81 93       	st	Z+, r24
    1110:	91 93       	st	Z+, r25
    1112:	02 c0       	rjmp	.+4      	; 0x1118 <malloc+0x128>
    1114:	e0 e0       	ldi	r30, 0x00	; 0
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	cf 01       	movw	r24, r30
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	08 95       	ret

00001120 <free>:
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	00 97       	sbiw	r24, 0x00	; 0
    1126:	09 f4       	brne	.+2      	; 0x112a <free+0xa>
    1128:	87 c0       	rjmp	.+270    	; 0x1238 <free+0x118>
    112a:	fc 01       	movw	r30, r24
    112c:	32 97       	sbiw	r30, 0x02	; 2
    112e:	13 82       	std	Z+3, r1	; 0x03
    1130:	12 82       	std	Z+2, r1	; 0x02
    1132:	c0 91 2a 02 	lds	r28, 0x022A
    1136:	d0 91 2b 02 	lds	r29, 0x022B
    113a:	20 97       	sbiw	r28, 0x00	; 0
    113c:	81 f4       	brne	.+32     	; 0x115e <free+0x3e>
    113e:	20 81       	ld	r18, Z
    1140:	31 81       	ldd	r19, Z+1	; 0x01
    1142:	28 0f       	add	r18, r24
    1144:	39 1f       	adc	r19, r25
    1146:	80 91 28 02 	lds	r24, 0x0228
    114a:	90 91 29 02 	lds	r25, 0x0229
    114e:	82 17       	cp	r24, r18
    1150:	93 07       	cpc	r25, r19
    1152:	79 f5       	brne	.+94     	; 0x11b2 <free+0x92>
    1154:	f0 93 29 02 	sts	0x0229, r31
    1158:	e0 93 28 02 	sts	0x0228, r30
    115c:	6d c0       	rjmp	.+218    	; 0x1238 <free+0x118>
    115e:	de 01       	movw	r26, r28
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	ae 17       	cp	r26, r30
    1166:	bf 07       	cpc	r27, r31
    1168:	50 f4       	brcc	.+20     	; 0x117e <free+0x5e>
    116a:	12 96       	adiw	r26, 0x02	; 2
    116c:	4d 91       	ld	r20, X+
    116e:	5c 91       	ld	r21, X
    1170:	13 97       	sbiw	r26, 0x03	; 3
    1172:	9d 01       	movw	r18, r26
    1174:	41 15       	cp	r20, r1
    1176:	51 05       	cpc	r21, r1
    1178:	09 f1       	breq	.+66     	; 0x11bc <free+0x9c>
    117a:	da 01       	movw	r26, r20
    117c:	f3 cf       	rjmp	.-26     	; 0x1164 <free+0x44>
    117e:	b3 83       	std	Z+3, r27	; 0x03
    1180:	a2 83       	std	Z+2, r26	; 0x02
    1182:	40 81       	ld	r20, Z
    1184:	51 81       	ldd	r21, Z+1	; 0x01
    1186:	84 0f       	add	r24, r20
    1188:	95 1f       	adc	r25, r21
    118a:	8a 17       	cp	r24, r26
    118c:	9b 07       	cpc	r25, r27
    118e:	71 f4       	brne	.+28     	; 0x11ac <free+0x8c>
    1190:	8d 91       	ld	r24, X+
    1192:	9c 91       	ld	r25, X
    1194:	11 97       	sbiw	r26, 0x01	; 1
    1196:	84 0f       	add	r24, r20
    1198:	95 1f       	adc	r25, r21
    119a:	02 96       	adiw	r24, 0x02	; 2
    119c:	91 83       	std	Z+1, r25	; 0x01
    119e:	80 83       	st	Z, r24
    11a0:	12 96       	adiw	r26, 0x02	; 2
    11a2:	8d 91       	ld	r24, X+
    11a4:	9c 91       	ld	r25, X
    11a6:	13 97       	sbiw	r26, 0x03	; 3
    11a8:	93 83       	std	Z+3, r25	; 0x03
    11aa:	82 83       	std	Z+2, r24	; 0x02
    11ac:	21 15       	cp	r18, r1
    11ae:	31 05       	cpc	r19, r1
    11b0:	29 f4       	brne	.+10     	; 0x11bc <free+0x9c>
    11b2:	f0 93 2b 02 	sts	0x022B, r31
    11b6:	e0 93 2a 02 	sts	0x022A, r30
    11ba:	3e c0       	rjmp	.+124    	; 0x1238 <free+0x118>
    11bc:	d9 01       	movw	r26, r18
    11be:	13 96       	adiw	r26, 0x03	; 3
    11c0:	fc 93       	st	X, r31
    11c2:	ee 93       	st	-X, r30
    11c4:	12 97       	sbiw	r26, 0x02	; 2
    11c6:	4d 91       	ld	r20, X+
    11c8:	5d 91       	ld	r21, X+
    11ca:	a4 0f       	add	r26, r20
    11cc:	b5 1f       	adc	r27, r21
    11ce:	ea 17       	cp	r30, r26
    11d0:	fb 07       	cpc	r31, r27
    11d2:	79 f4       	brne	.+30     	; 0x11f2 <free+0xd2>
    11d4:	80 81       	ld	r24, Z
    11d6:	91 81       	ldd	r25, Z+1	; 0x01
    11d8:	84 0f       	add	r24, r20
    11da:	95 1f       	adc	r25, r21
    11dc:	02 96       	adiw	r24, 0x02	; 2
    11de:	d9 01       	movw	r26, r18
    11e0:	11 96       	adiw	r26, 0x01	; 1
    11e2:	9c 93       	st	X, r25
    11e4:	8e 93       	st	-X, r24
    11e6:	82 81       	ldd	r24, Z+2	; 0x02
    11e8:	93 81       	ldd	r25, Z+3	; 0x03
    11ea:	13 96       	adiw	r26, 0x03	; 3
    11ec:	9c 93       	st	X, r25
    11ee:	8e 93       	st	-X, r24
    11f0:	12 97       	sbiw	r26, 0x02	; 2
    11f2:	e0 e0       	ldi	r30, 0x00	; 0
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	9b 81       	ldd	r25, Y+3	; 0x03
    11fa:	00 97       	sbiw	r24, 0x00	; 0
    11fc:	19 f0       	breq	.+6      	; 0x1204 <free+0xe4>
    11fe:	fe 01       	movw	r30, r28
    1200:	ec 01       	movw	r28, r24
    1202:	f9 cf       	rjmp	.-14     	; 0x11f6 <free+0xd6>
    1204:	ce 01       	movw	r24, r28
    1206:	02 96       	adiw	r24, 0x02	; 2
    1208:	28 81       	ld	r18, Y
    120a:	39 81       	ldd	r19, Y+1	; 0x01
    120c:	82 0f       	add	r24, r18
    120e:	93 1f       	adc	r25, r19
    1210:	20 91 28 02 	lds	r18, 0x0228
    1214:	30 91 29 02 	lds	r19, 0x0229
    1218:	28 17       	cp	r18, r24
    121a:	39 07       	cpc	r19, r25
    121c:	69 f4       	brne	.+26     	; 0x1238 <free+0x118>
    121e:	30 97       	sbiw	r30, 0x00	; 0
    1220:	29 f4       	brne	.+10     	; 0x122c <free+0x10c>
    1222:	10 92 2b 02 	sts	0x022B, r1
    1226:	10 92 2a 02 	sts	0x022A, r1
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <free+0x110>
    122c:	13 82       	std	Z+3, r1	; 0x03
    122e:	12 82       	std	Z+2, r1	; 0x02
    1230:	d0 93 29 02 	sts	0x0229, r29
    1234:	c0 93 28 02 	sts	0x0228, r28
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	08 95       	ret

0000123e <strnlen_P>:
    123e:	fc 01       	movw	r30, r24
    1240:	05 90       	lpm	r0, Z+
    1242:	61 50       	subi	r22, 0x01	; 1
    1244:	70 40       	sbci	r23, 0x00	; 0
    1246:	01 10       	cpse	r0, r1
    1248:	d8 f7       	brcc	.-10     	; 0x1240 <strnlen_P+0x2>
    124a:	80 95       	com	r24
    124c:	90 95       	com	r25
    124e:	8e 0f       	add	r24, r30
    1250:	9f 1f       	adc	r25, r31
    1252:	08 95       	ret

00001254 <memset>:
    1254:	dc 01       	movw	r26, r24
    1256:	01 c0       	rjmp	.+2      	; 0x125a <memset+0x6>
    1258:	6d 93       	st	X+, r22
    125a:	41 50       	subi	r20, 0x01	; 1
    125c:	50 40       	sbci	r21, 0x00	; 0
    125e:	e0 f7       	brcc	.-8      	; 0x1258 <memset+0x4>
    1260:	08 95       	ret

00001262 <strnlen>:
    1262:	fc 01       	movw	r30, r24
    1264:	61 50       	subi	r22, 0x01	; 1
    1266:	70 40       	sbci	r23, 0x00	; 0
    1268:	01 90       	ld	r0, Z+
    126a:	01 10       	cpse	r0, r1
    126c:	d8 f7       	brcc	.-10     	; 0x1264 <strnlen+0x2>
    126e:	80 95       	com	r24
    1270:	90 95       	com	r25
    1272:	8e 0f       	add	r24, r30
    1274:	9f 1f       	adc	r25, r31
    1276:	08 95       	ret

00001278 <fputc>:
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	18 2f       	mov	r17, r24
    1282:	09 2f       	mov	r16, r25
    1284:	eb 01       	movw	r28, r22
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
    1288:	81 fd       	sbrc	r24, 1
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <fputc+0x1a>
    128c:	8f ef       	ldi	r24, 0xFF	; 255
    128e:	9f ef       	ldi	r25, 0xFF	; 255
    1290:	20 c0       	rjmp	.+64     	; 0x12d2 <fputc+0x5a>
    1292:	82 ff       	sbrs	r24, 2
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <fputc+0x3e>
    1296:	4e 81       	ldd	r20, Y+6	; 0x06
    1298:	5f 81       	ldd	r21, Y+7	; 0x07
    129a:	2c 81       	ldd	r18, Y+4	; 0x04
    129c:	3d 81       	ldd	r19, Y+5	; 0x05
    129e:	42 17       	cp	r20, r18
    12a0:	53 07       	cpc	r21, r19
    12a2:	7c f4       	brge	.+30     	; 0x12c2 <fputc+0x4a>
    12a4:	e8 81       	ld	r30, Y
    12a6:	f9 81       	ldd	r31, Y+1	; 0x01
    12a8:	9f 01       	movw	r18, r30
    12aa:	2f 5f       	subi	r18, 0xFF	; 255
    12ac:	3f 4f       	sbci	r19, 0xFF	; 255
    12ae:	39 83       	std	Y+1, r19	; 0x01
    12b0:	28 83       	st	Y, r18
    12b2:	10 83       	st	Z, r17
    12b4:	06 c0       	rjmp	.+12     	; 0x12c2 <fputc+0x4a>
    12b6:	e8 85       	ldd	r30, Y+8	; 0x08
    12b8:	f9 85       	ldd	r31, Y+9	; 0x09
    12ba:	81 2f       	mov	r24, r17
    12bc:	09 95       	icall
    12be:	89 2b       	or	r24, r25
    12c0:	29 f7       	brne	.-54     	; 0x128c <fputc+0x14>
    12c2:	2e 81       	ldd	r18, Y+6	; 0x06
    12c4:	3f 81       	ldd	r19, Y+7	; 0x07
    12c6:	2f 5f       	subi	r18, 0xFF	; 255
    12c8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ca:	3f 83       	std	Y+7, r19	; 0x07
    12cc:	2e 83       	std	Y+6, r18	; 0x06
    12ce:	81 2f       	mov	r24, r17
    12d0:	90 2f       	mov	r25, r16
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	08 95       	ret

000012dc <__ultoa_invert>:
    12dc:	fa 01       	movw	r30, r20
    12de:	aa 27       	eor	r26, r26
    12e0:	28 30       	cpi	r18, 0x08	; 8
    12e2:	51 f1       	breq	.+84     	; 0x1338 <__ultoa_invert+0x5c>
    12e4:	20 31       	cpi	r18, 0x10	; 16
    12e6:	81 f1       	breq	.+96     	; 0x1348 <__ultoa_invert+0x6c>
    12e8:	e8 94       	clt
    12ea:	6f 93       	push	r22
    12ec:	6e 7f       	andi	r22, 0xFE	; 254
    12ee:	6e 5f       	subi	r22, 0xFE	; 254
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	8f 4f       	sbci	r24, 0xFF	; 255
    12f4:	9f 4f       	sbci	r25, 0xFF	; 255
    12f6:	af 4f       	sbci	r26, 0xFF	; 255
    12f8:	b1 e0       	ldi	r27, 0x01	; 1
    12fa:	3e d0       	rcall	.+124    	; 0x1378 <__ultoa_invert+0x9c>
    12fc:	b4 e0       	ldi	r27, 0x04	; 4
    12fe:	3c d0       	rcall	.+120    	; 0x1378 <__ultoa_invert+0x9c>
    1300:	67 0f       	add	r22, r23
    1302:	78 1f       	adc	r23, r24
    1304:	89 1f       	adc	r24, r25
    1306:	9a 1f       	adc	r25, r26
    1308:	a1 1d       	adc	r26, r1
    130a:	68 0f       	add	r22, r24
    130c:	79 1f       	adc	r23, r25
    130e:	8a 1f       	adc	r24, r26
    1310:	91 1d       	adc	r25, r1
    1312:	a1 1d       	adc	r26, r1
    1314:	6a 0f       	add	r22, r26
    1316:	71 1d       	adc	r23, r1
    1318:	81 1d       	adc	r24, r1
    131a:	91 1d       	adc	r25, r1
    131c:	a1 1d       	adc	r26, r1
    131e:	20 d0       	rcall	.+64     	; 0x1360 <__ultoa_invert+0x84>
    1320:	09 f4       	brne	.+2      	; 0x1324 <__ultoa_invert+0x48>
    1322:	68 94       	set
    1324:	3f 91       	pop	r19
    1326:	2a e0       	ldi	r18, 0x0A	; 10
    1328:	26 9f       	mul	r18, r22
    132a:	11 24       	eor	r1, r1
    132c:	30 19       	sub	r19, r0
    132e:	30 5d       	subi	r19, 0xD0	; 208
    1330:	31 93       	st	Z+, r19
    1332:	de f6       	brtc	.-74     	; 0x12ea <__ultoa_invert+0xe>
    1334:	cf 01       	movw	r24, r30
    1336:	08 95       	ret
    1338:	46 2f       	mov	r20, r22
    133a:	47 70       	andi	r20, 0x07	; 7
    133c:	40 5d       	subi	r20, 0xD0	; 208
    133e:	41 93       	st	Z+, r20
    1340:	b3 e0       	ldi	r27, 0x03	; 3
    1342:	0f d0       	rcall	.+30     	; 0x1362 <__ultoa_invert+0x86>
    1344:	c9 f7       	brne	.-14     	; 0x1338 <__ultoa_invert+0x5c>
    1346:	f6 cf       	rjmp	.-20     	; 0x1334 <__ultoa_invert+0x58>
    1348:	46 2f       	mov	r20, r22
    134a:	4f 70       	andi	r20, 0x0F	; 15
    134c:	40 5d       	subi	r20, 0xD0	; 208
    134e:	4a 33       	cpi	r20, 0x3A	; 58
    1350:	18 f0       	brcs	.+6      	; 0x1358 <__ultoa_invert+0x7c>
    1352:	49 5d       	subi	r20, 0xD9	; 217
    1354:	31 fd       	sbrc	r19, 1
    1356:	40 52       	subi	r20, 0x20	; 32
    1358:	41 93       	st	Z+, r20
    135a:	02 d0       	rcall	.+4      	; 0x1360 <__ultoa_invert+0x84>
    135c:	a9 f7       	brne	.-22     	; 0x1348 <__ultoa_invert+0x6c>
    135e:	ea cf       	rjmp	.-44     	; 0x1334 <__ultoa_invert+0x58>
    1360:	b4 e0       	ldi	r27, 0x04	; 4
    1362:	a6 95       	lsr	r26
    1364:	97 95       	ror	r25
    1366:	87 95       	ror	r24
    1368:	77 95       	ror	r23
    136a:	67 95       	ror	r22
    136c:	ba 95       	dec	r27
    136e:	c9 f7       	brne	.-14     	; 0x1362 <__ultoa_invert+0x86>
    1370:	00 97       	sbiw	r24, 0x00	; 0
    1372:	61 05       	cpc	r22, r1
    1374:	71 05       	cpc	r23, r1
    1376:	08 95       	ret
    1378:	9b 01       	movw	r18, r22
    137a:	ac 01       	movw	r20, r24
    137c:	0a 2e       	mov	r0, r26
    137e:	06 94       	lsr	r0
    1380:	57 95       	ror	r21
    1382:	47 95       	ror	r20
    1384:	37 95       	ror	r19
    1386:	27 95       	ror	r18
    1388:	ba 95       	dec	r27
    138a:	c9 f7       	brne	.-14     	; 0x137e <__ultoa_invert+0xa2>
    138c:	62 0f       	add	r22, r18
    138e:	73 1f       	adc	r23, r19
    1390:	84 1f       	adc	r24, r20
    1392:	95 1f       	adc	r25, r21
    1394:	a0 1d       	adc	r26, r0
    1396:	08 95       	ret

00001398 <__prologue_saves__>:
    1398:	2f 92       	push	r2
    139a:	3f 92       	push	r3
    139c:	4f 92       	push	r4
    139e:	5f 92       	push	r5
    13a0:	6f 92       	push	r6
    13a2:	7f 92       	push	r7
    13a4:	8f 92       	push	r8
    13a6:	9f 92       	push	r9
    13a8:	af 92       	push	r10
    13aa:	bf 92       	push	r11
    13ac:	cf 92       	push	r12
    13ae:	df 92       	push	r13
    13b0:	ef 92       	push	r14
    13b2:	ff 92       	push	r15
    13b4:	0f 93       	push	r16
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	df 93       	push	r29
    13bc:	cd b7       	in	r28, 0x3d	; 61
    13be:	de b7       	in	r29, 0x3e	; 62
    13c0:	ca 1b       	sub	r28, r26
    13c2:	db 0b       	sbc	r29, r27
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	09 94       	ijmp

000013d0 <__epilogue_restores__>:
    13d0:	2a 88       	ldd	r2, Y+18	; 0x12
    13d2:	39 88       	ldd	r3, Y+17	; 0x11
    13d4:	48 88       	ldd	r4, Y+16	; 0x10
    13d6:	5f 84       	ldd	r5, Y+15	; 0x0f
    13d8:	6e 84       	ldd	r6, Y+14	; 0x0e
    13da:	7d 84       	ldd	r7, Y+13	; 0x0d
    13dc:	8c 84       	ldd	r8, Y+12	; 0x0c
    13de:	9b 84       	ldd	r9, Y+11	; 0x0b
    13e0:	aa 84       	ldd	r10, Y+10	; 0x0a
    13e2:	b9 84       	ldd	r11, Y+9	; 0x09
    13e4:	c8 84       	ldd	r12, Y+8	; 0x08
    13e6:	df 80       	ldd	r13, Y+7	; 0x07
    13e8:	ee 80       	ldd	r14, Y+6	; 0x06
    13ea:	fd 80       	ldd	r15, Y+5	; 0x05
    13ec:	0c 81       	ldd	r16, Y+4	; 0x04
    13ee:	1b 81       	ldd	r17, Y+3	; 0x03
    13f0:	aa 81       	ldd	r26, Y+2	; 0x02
    13f2:	b9 81       	ldd	r27, Y+1	; 0x01
    13f4:	ce 0f       	add	r28, r30
    13f6:	d1 1d       	adc	r29, r1
    13f8:	0f b6       	in	r0, 0x3f	; 63
    13fa:	f8 94       	cli
    13fc:	de bf       	out	0x3e, r29	; 62
    13fe:	0f be       	out	0x3f, r0	; 63
    1400:	cd bf       	out	0x3d, r28	; 61
    1402:	ed 01       	movw	r28, r26
    1404:	08 95       	ret

00001406 <_exit>:
    1406:	f8 94       	cli

00001408 <__stop_program>:
    1408:	ff cf       	rjmp	.-2      	; 0x1408 <__stop_program>
