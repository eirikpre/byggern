
node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000106  00800100  00000d7c  00000e10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800206  00800206  00000f16  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f16  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000218  00000000  00000000  00000f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001ad2  00000000  00000000  0000115e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b9e  00000000  00000000  00002c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a23  00000000  00000000  000037ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000458  00000000  00000000  000041f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005c2  00000000  00000000  0000464c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b8b  00000000  00000000  00004c0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a0  00000000  00000000  00005799  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <malloc+0x26>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	12 e0       	ldi	r17, 0x02	; 2
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	ec e7       	ldi	r30, 0x7C	; 124
 37c:	fd e0       	ldi	r31, 0x0D	; 13
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a6 30       	cpi	r26, 0x06	; 6
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	22 e0       	ldi	r18, 0x02	; 2
 38c:	a6 e0       	ldi	r26, 0x06	; 6
 38e:	b2 e0       	ldi	r27, 0x02	; 2
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a6 31       	cpi	r26, 0x16	; 22
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <main>
 39e:	0c 94 bc 06 	jmp	0xd78	; 0xd78 <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
 3a6:	8c 5f       	subi	r24, 0xFC	; 252
 3a8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ac:	81 e4       	ldi	r24, 0x41	; 65
 3ae:	8a 95       	dec	r24
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <ADC_read+0x8>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <ADC_read+0xe>
 3b4:	80 91 00 14 	lds	r24, 0x1400
 3b8:	08 95       	ret

000003ba <main>:


int main(void)
{

	USART_init(MYUBRR);
 3ba:	8f e1       	ldi	r24, 0x1F	; 31
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 c5 04 	call	0x98a	; 0x98a <USART_init>
	// Activate external memory
	MCUCR |= (1 << SRE);
 3c2:	85 b7       	in	r24, 0x35	; 53
 3c4:	80 68       	ori	r24, 0x80	; 128
 3c6:	85 bf       	out	0x35, r24	; 53
		
	// Initialize	
	joy_init();
 3c8:	0e 94 b9 02 	call	0x572	; 0x572 <joy_init>
	oled_init();
 3cc:	0e 94 63 04 	call	0x8c6	; 0x8c6 <oled_init>
	can_init();
 3d0:	0e 94 ef 01 	call	0x3de	; 0x3de <can_init>

	// Starts the FSM
	menu_init();
 3d4:	0e 94 0e 04 	call	0x81c	; 0x81c <menu_init>
	
}
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	08 95       	ret

000003de <can_init>:
#include "MCP2515.h"

void can_init()
{
	
	mcp2515_init();
 3de:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <mcp2515_init>
	
	mcp2515_bit_modify(MCP_RXF0SIDH, 0xff , 0x00);
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	6f ef       	ldi	r22, 0xFF	; 255
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXF0SIDL, 0xE0 , 0x00);
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	60 ee       	ldi	r22, 0xE0	; 224
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_CANCTRL, 0xE0 , MODE_NORMAL);
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	60 ee       	ldi	r22, 0xE0	; 224
 3fa:	8f e0       	ldi	r24, 0x0F	; 15
 3fc:	0e 94 48 02 	call	0x490	; 0x490 <mcp2515_bit_modify>
 400:	08 95       	ret

00000402 <can_message_send>:
	
}


void can_message_send(can_message_t *message)
{
 402:	1f 93       	push	r17
 404:	cf 93       	push	r28
 406:	df 93       	push	r29
 408:	ec 01       	movw	r28, r24
	char i;
	
	// ID
	mcp2515_write(MCP_TXB0CTRL + 1,message->id);
 40a:	68 81       	ld	r22, Y
 40c:	81 e3       	ldi	r24, 0x31	; 49
 40e:	0e 94 29 02 	call	0x452	; 0x452 <mcp2515_write>
	mcp2515_write(0x32,0x00);
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	82 e3       	ldi	r24, 0x32	; 50
 416:	0e 94 29 02 	call	0x452	; 0x452 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
 41a:	69 81       	ldd	r22, Y+1	; 0x01
 41c:	85 e3       	ldi	r24, 0x35	; 53
 41e:	0e 94 29 02 	call	0x452	; 0x452 <mcp2515_write>
	
	// Data
	for (i = 0; i< message->length; i++){
 422:	89 81       	ldd	r24, Y+1	; 0x01
 424:	88 23       	and	r24, r24
 426:	69 f0       	breq	.+26     	; 0x442 <can_message_send+0x40>
 428:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
 42a:	fe 01       	movw	r30, r28
 42c:	e1 0f       	add	r30, r17
 42e:	f1 1d       	adc	r31, r1
 430:	62 81       	ldd	r22, Z+2	; 0x02
 432:	86 e3       	ldi	r24, 0x36	; 54
 434:	81 0f       	add	r24, r17
 436:	0e 94 29 02 	call	0x452	; 0x452 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
	
	// Data
	for (i = 0; i< message->length; i++){
 43a:	1f 5f       	subi	r17, 0xFF	; 255
 43c:	89 81       	ldd	r24, Y+1	; 0x01
 43e:	18 17       	cp	r17, r24
 440:	a0 f3       	brcs	.-24     	; 0x42a <can_message_send+0x28>
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
	}
	
	mcp2515_request_to_send(MCP_RTS_TX0);
 442:	81 e8       	ldi	r24, 0x81	; 129
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 3d 02 	call	0x47a	; 0x47a <mcp2515_request_to_send>
}
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	1f 91       	pop	r17
 450:	08 95       	ret

00000452 <mcp2515_write>:
 452:	cf 93       	push	r28
 454:	df 93       	push	r29
 456:	d8 2f       	mov	r29, r24
 458:	c6 2f       	mov	r28, r22
 45a:	0e 94 aa 04 	call	0x954	; 0x954 <spi_select>
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 464:	8d 2f       	mov	r24, r29
 466:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 46a:	8c 2f       	mov	r24, r28
 46c:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 470:	0e 94 ac 04 	call	0x958	; 0x958 <spi_deselect>
 474:	df 91       	pop	r29
 476:	cf 91       	pop	r28
 478:	08 95       	ret

0000047a <mcp2515_request_to_send>:
 47a:	cf 93       	push	r28
 47c:	c8 2f       	mov	r28, r24
 47e:	0e 94 aa 04 	call	0x954	; 0x954 <spi_select>
 482:	8c 2f       	mov	r24, r28
 484:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 488:	0e 94 ac 04 	call	0x958	; 0x958 <spi_deselect>
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <mcp2515_bit_modify>:
 490:	1f 93       	push	r17
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	18 2f       	mov	r17, r24
 498:	d6 2f       	mov	r29, r22
 49a:	c4 2f       	mov	r28, r20
 49c:	0e 94 aa 04 	call	0x954	; 0x954 <spi_select>
 4a0:	85 e0       	ldi	r24, 0x05	; 5
 4a2:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4a6:	81 2f       	mov	r24, r17
 4a8:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4ac:	8d 2f       	mov	r24, r29
 4ae:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4b2:	8c 2f       	mov	r24, r28
 4b4:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4b8:	0e 94 ac 04 	call	0x958	; 0x958 <spi_deselect>
 4bc:	df 91       	pop	r29
 4be:	cf 91       	pop	r28
 4c0:	1f 91       	pop	r17
 4c2:	08 95       	ret

000004c4 <mcp2515_reset>:
 4c4:	0e 94 aa 04 	call	0x954	; 0x954 <spi_select>
 4c8:	80 ec       	ldi	r24, 0xC0	; 192
 4ca:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4ce:	0e 94 ac 04 	call	0x958	; 0x958 <spi_deselect>
 4d2:	08 95       	ret

000004d4 <mcp2515_read_status>:
 4d4:	cf 93       	push	r28
 4d6:	0e 94 aa 04 	call	0x954	; 0x954 <spi_select>
 4da:	83 e0       	ldi	r24, 0x03	; 3
 4dc:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4e0:	8e e0       	ldi	r24, 0x0E	; 14
 4e2:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 4e6:	0e 94 b2 04 	call	0x964	; 0x964 <spi_receive>
 4ea:	c8 2f       	mov	r28, r24
 4ec:	0e 94 ac 04 	call	0x958	; 0x958 <spi_deselect>
 4f0:	8c 2f       	mov	r24, r28
 4f2:	cf 91       	pop	r28
 4f4:	08 95       	ret

000004f6 <mcp2515_init>:
 4f6:	0e 94 b7 04 	call	0x96e	; 0x96e <spi_init>
 4fa:	0e 94 62 02 	call	0x4c4	; 0x4c4 <mcp2515_reset>
 4fe:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <mcp2515_read_status>
 502:	80 7e       	andi	r24, 0xE0	; 224
 504:	80 38       	cpi	r24, 0x80	; 128
 506:	21 f0       	breq	.+8      	; 0x510 <__stack+0x11>
 508:	82 ee       	ldi	r24, 0xE2	; 226
 50a:	91 e0       	ldi	r25, 0x01	; 1
 50c:	0e 94 45 05 	call	0xa8a	; 0xa8a <puts>
 510:	08 95       	ret

00000512 <joy_calibrate>:
char x_ref = 0;
char y_ref = 0;



void joy_calibrate(){
 512:	ef 92       	push	r14
 514:	ff 92       	push	r15
 516:	0f 93       	push	r16
 518:	1f 93       	push	r17
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	ca e0       	ldi	r28, 0x0A	; 10
 520:	d0 e0       	ldi	r29, 0x00	; 0
	int sum_x=0;
	int sum_y=0;
 522:	00 e0       	ldi	r16, 0x00	; 0
 524:	10 e0       	ldi	r17, 0x00	; 0
char y_ref = 0;



void joy_calibrate(){
	int sum_x=0;
 526:	e1 2c       	mov	r14, r1
 528:	f1 2c       	mov	r15, r1
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
		sum_x += ADC_read(1);
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 532:	e8 0e       	add	r14, r24
 534:	f1 1c       	adc	r15, r1
		sum_y += ADC_read(0);
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 53e:	08 0f       	add	r16, r24
 540:	11 1d       	adc	r17, r1
 542:	21 97       	sbiw	r28, 0x01	; 1

void joy_calibrate(){
	int sum_x=0;
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
 544:	20 97       	sbiw	r28, 0x00	; 0
 546:	89 f7       	brne	.-30     	; 0x52a <joy_calibrate+0x18>
		sum_x += ADC_read(1);
		sum_y += ADC_read(0);
	}
	x_ref = sum_x/10;
 548:	2a e0       	ldi	r18, 0x0A	; 10
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	c7 01       	movw	r24, r14
 54e:	b9 01       	movw	r22, r18
 550:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__divmodhi4>
 554:	60 93 07 02 	sts	0x0207, r22
	y_ref = sum_y/10;
 558:	c8 01       	movw	r24, r16
 55a:	b9 01       	movw	r22, r18
 55c:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__divmodhi4>
 560:	60 93 06 02 	sts	0x0206, r22
	
}
 564:	df 91       	pop	r29
 566:	cf 91       	pop	r28
 568:	1f 91       	pop	r17
 56a:	0f 91       	pop	r16
 56c:	ff 90       	pop	r15
 56e:	ef 90       	pop	r14
 570:	08 95       	ret

00000572 <joy_init>:

void joy_init(){
	joy_calibrate();
 572:	0e 94 89 02 	call	0x512	; 0x512 <joy_calibrate>
 576:	08 95       	ret

00000578 <get_position>:
	
}

joy_position_t get_position(){
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
	joy_position_t position;
	position.x_pos = (ADC_read(1) - x_ref)*100/128;
 57c:	81 e0       	ldi	r24, 0x01	; 1
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	20 91 07 02 	lds	r18, 0x0207
 58a:	82 1b       	sub	r24, r18
 58c:	91 09       	sbc	r25, r1
 58e:	44 e6       	ldi	r20, 0x64	; 100
 590:	48 9f       	mul	r20, r24
 592:	90 01       	movw	r18, r0
 594:	49 9f       	mul	r20, r25
 596:	30 0d       	add	r19, r0
 598:	11 24       	eor	r1, r1
 59a:	33 23       	and	r19, r19
 59c:	14 f4       	brge	.+4      	; 0x5a2 <get_position+0x2a>
 59e:	21 58       	subi	r18, 0x81	; 129
 5a0:	3f 4f       	sbci	r19, 0xFF	; 255
 5a2:	e9 01       	movw	r28, r18
 5a4:	cc 0f       	add	r28, r28
 5a6:	cd 2f       	mov	r28, r29
 5a8:	cc 1f       	adc	r28, r28
 5aa:	dd 0b       	sbc	r29, r29
	position.y_pos = (ADC_read(0) - y_ref)*100/128;
 5ac:	80 e0       	ldi	r24, 0x00	; 0
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	20 91 06 02 	lds	r18, 0x0206
 5ba:	82 1b       	sub	r24, r18
 5bc:	91 09       	sbc	r25, r1
 5be:	44 e6       	ldi	r20, 0x64	; 100
 5c0:	48 9f       	mul	r20, r24
 5c2:	90 01       	movw	r18, r0
 5c4:	49 9f       	mul	r20, r25
 5c6:	30 0d       	add	r19, r0
 5c8:	11 24       	eor	r1, r1
 5ca:	33 23       	and	r19, r19
 5cc:	14 f4       	brge	.+4      	; 0x5d2 <get_position+0x5a>
 5ce:	21 58       	subi	r18, 0x81	; 129
 5d0:	3f 4f       	sbci	r19, 0xFF	; 255
	return position;
 5d2:	be 01       	movw	r22, r28
 5d4:	c9 01       	movw	r24, r18
 5d6:	88 0f       	add	r24, r24
 5d8:	89 2f       	mov	r24, r25
 5da:	88 1f       	adc	r24, r24
 5dc:	99 0b       	sbc	r25, r25
}
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	08 95       	ret

000005e4 <get_direction>:


direction get_direction(){
	
	joy_position_t position = get_position();
 5e4:	0e 94 bc 02 	call	0x578	; 0x578 <get_position>
	
	if (position.x_pos > 70)
 5e8:	67 34       	cpi	r22, 0x47	; 71
 5ea:	71 05       	cpc	r23, r1
 5ec:	64 f4       	brge	.+24     	; 0x606 <get_direction+0x22>
		{

			return RIGHT;
		}
	else if (position.x_pos < -70)
 5ee:	6a 3b       	cpi	r22, 0xBA	; 186
 5f0:	4f ef       	ldi	r20, 0xFF	; 255
 5f2:	74 07       	cpc	r23, r20
 5f4:	54 f0       	brlt	.+20     	; 0x60a <get_direction+0x26>
		{

			return LEFT;
		}
	else if (position.y_pos > 70)
 5f6:	87 34       	cpi	r24, 0x47	; 71
 5f8:	91 05       	cpc	r25, r1
 5fa:	4c f4       	brge	.+18     	; 0x60e <get_direction+0x2a>
		{

			return UP;
		}
	else if (position.y_pos < -70)
 5fc:	8a 3b       	cpi	r24, 0xBA	; 186
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	44 f4       	brge	.+16     	; 0x612 <get_direction+0x2e>
		{

			return DOWN;
 602:	83 e0       	ldi	r24, 0x03	; 3
 604:	08 95       	ret
	joy_position_t position = get_position();
	
	if (position.x_pos > 70)
		{

			return RIGHT;
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	08 95       	ret
		}
	else if (position.x_pos < -70)
		{

			return LEFT;
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	08 95       	ret
		}
	else if (position.y_pos > 70)
		{

			return UP;
 60e:	82 e0       	ldi	r24, 0x02	; 2
 610:	08 95       	ret
			return DOWN;
		}
	else
		{

			return NEUTRAL;
 612:	84 e0       	ldi	r24, 0x04	; 4
		}
	
}
 614:	08 95       	ret

00000616 <update_next>:
	*last_dir = *curr_dir;
}


void update_next(direction dir){
	if (dir == DOWN) {
 616:	83 30       	cpi	r24, 0x03	; 3
 618:	41 f5       	brne	.+80     	; 0x66a <update_next+0x54>
		if (next+1 <= current->number_children){
 61a:	80 91 0a 02 	lds	r24, 0x020A
 61e:	90 91 0b 02 	lds	r25, 0x020B
 622:	ac 01       	movw	r20, r24
 624:	4f 5f       	subi	r20, 0xFF	; 255
 626:	5f 4f       	sbci	r21, 0xFF	; 255
 628:	e0 91 08 02 	lds	r30, 0x0208
 62c:	f0 91 09 02 	lds	r31, 0x0209
 630:	27 85       	ldd	r18, Z+15	; 0x0f
 632:	30 89       	ldd	r19, Z+16	; 0x10
 634:	24 17       	cp	r18, r20
 636:	35 07       	cpc	r19, r21
 638:	b4 f1       	brlt	.+108    	; 0x6a6 <update_next+0x90>
			oled_goto(next,0);
 63a:	60 e0       	ldi	r22, 0x00	; 0
 63c:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
			oled_print(" ");
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	92 e0       	ldi	r25, 0x02	; 2
 644:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
			next++;
 648:	80 91 0a 02 	lds	r24, 0x020A
 64c:	90 91 0b 02 	lds	r25, 0x020B
 650:	01 96       	adiw	r24, 0x01	; 1
 652:	90 93 0b 02 	sts	0x020B, r25
 656:	80 93 0a 02 	sts	0x020A, r24
			oled_goto(next,0);
 65a:	60 e0       	ldi	r22, 0x00	; 0
 65c:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
			oled_print("-");
 660:	83 e0       	ldi	r24, 0x03	; 3
 662:	92 e0       	ldi	r25, 0x02	; 2
 664:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
 668:	08 95       	ret
		}
		
	}
	else{
		if (next > 1){
 66a:	80 91 0a 02 	lds	r24, 0x020A
 66e:	90 91 0b 02 	lds	r25, 0x020B
 672:	82 30       	cpi	r24, 0x02	; 2
 674:	91 05       	cpc	r25, r1
 676:	bc f0       	brlt	.+46     	; 0x6a6 <update_next+0x90>
			oled_goto(next,0);
 678:	60 e0       	ldi	r22, 0x00	; 0
 67a:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
			oled_print(" ");
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	92 e0       	ldi	r25, 0x02	; 2
 682:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
			next--;
 686:	80 91 0a 02 	lds	r24, 0x020A
 68a:	90 91 0b 02 	lds	r25, 0x020B
 68e:	01 97       	sbiw	r24, 0x01	; 1
 690:	90 93 0b 02 	sts	0x020B, r25
 694:	80 93 0a 02 	sts	0x020A, r24
			oled_goto(next,0);
 698:	60 e0       	ldi	r22, 0x00	; 0
 69a:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
			oled_print("-");
 69e:	83 e0       	ldi	r24, 0x03	; 3
 6a0:	92 e0       	ldi	r25, 0x02	; 2
 6a2:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
 6a6:	08 95       	ret

000006a8 <menu_print>:
		}
	}
}

void menu_print(menu_t* object){
 6a8:	ef 92       	push	r14
 6aa:	ff 92       	push	r15
 6ac:	0f 93       	push	r16
 6ae:	1f 93       	push	r17
 6b0:	cf 93       	push	r28
 6b2:	df 93       	push	r29
 6b4:	7c 01       	movw	r14, r24
	oled_clear_all();
 6b6:	0e 94 9d 04 	call	0x93a	; 0x93a <oled_clear_all>
	oled_goto(0,0);
 6ba:	60 e0       	ldi	r22, 0x00	; 0
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
	oled_print(object->name);
 6c2:	c7 01       	movw	r24, r14
 6c4:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
	oled_goto(next,0);
 6c8:	60 e0       	ldi	r22, 0x00	; 0
 6ca:	80 91 0a 02 	lds	r24, 0x020A
 6ce:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
	oled_print("-");
 6d2:	83 e0       	ldi	r24, 0x03	; 3
 6d4:	92 e0       	ldi	r25, 0x02	; 2
 6d6:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
	
	int i;
	for (i=1;i<object->number_children+1;i++)
 6da:	f7 01       	movw	r30, r14
 6dc:	87 85       	ldd	r24, Z+15	; 0x0f
 6de:	90 89       	ldd	r25, Z+16	; 0x10
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	02 97       	sbiw	r24, 0x02	; 2
 6e4:	c4 f0       	brlt	.+48     	; 0x716 <menu_print+0x6e>
 6e6:	87 01       	movw	r16, r14
 6e8:	0b 5e       	subi	r16, 0xEB	; 235
 6ea:	1f 4f       	sbci	r17, 0xFF	; 255
 6ec:	c1 e0       	ldi	r28, 0x01	; 1
 6ee:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i,8);
 6f0:	68 e0       	ldi	r22, 0x08	; 8
 6f2:	8c 2f       	mov	r24, r28
 6f4:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
		oled_print((object->children[i-1])->name);
 6f8:	f8 01       	movw	r30, r16
 6fa:	81 91       	ld	r24, Z+
 6fc:	91 91       	ld	r25, Z+
 6fe:	8f 01       	movw	r16, r30
 700:	0e 94 50 04 	call	0x8a0	; 0x8a0 <oled_print>
	oled_print(object->name);
	oled_goto(next,0);
	oled_print("-");
	
	int i;
	for (i=1;i<object->number_children+1;i++)
 704:	21 96       	adiw	r28, 0x01	; 1
 706:	f7 01       	movw	r30, r14
 708:	27 85       	ldd	r18, Z+15	; 0x0f
 70a:	30 89       	ldd	r19, Z+16	; 0x10
 70c:	2f 5f       	subi	r18, 0xFF	; 255
 70e:	3f 4f       	sbci	r19, 0xFF	; 255
 710:	c2 17       	cp	r28, r18
 712:	d3 07       	cpc	r29, r19
 714:	6c f3       	brlt	.-38     	; 0x6f0 <menu_print+0x48>
	{
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}
 716:	df 91       	pop	r29
 718:	cf 91       	pop	r28
 71a:	1f 91       	pop	r17
 71c:	0f 91       	pop	r16
 71e:	ff 90       	pop	r15
 720:	ef 90       	pop	r14
 722:	08 95       	ret

00000724 <menu_handler>:
}



void menu_handler(direction* curr_dir, direction* last_dir)
{
 724:	0f 93       	push	r16
 726:	1f 93       	push	r17
 728:	cf 93       	push	r28
 72a:	df 93       	push	r29
 72c:	8c 01       	movw	r16, r24
 72e:	eb 01       	movw	r28, r22
	
	*curr_dir = get_direction();
 730:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <get_direction>
 734:	f8 01       	movw	r30, r16
 736:	80 83       	st	Z, r24
	if (*curr_dir != *last_dir)
 738:	98 81       	ld	r25, Y
 73a:	89 17       	cp	r24, r25
 73c:	e9 f1       	breq	.+122    	; 0x7b8 <menu_handler+0x94>
	{
		switch (*curr_dir){
 73e:	81 30       	cpi	r24, 0x01	; 1
 740:	31 f0       	breq	.+12     	; 0x74e <menu_handler+0x2a>
 742:	f0 f0       	brcs	.+60     	; 0x780 <menu_handler+0x5c>
 744:	82 30       	cpi	r24, 0x02	; 2
 746:	89 f1       	breq	.+98     	; 0x7aa <menu_handler+0x86>
 748:	83 30       	cpi	r24, 0x03	; 3
 74a:	99 f1       	breq	.+102    	; 0x7b2 <menu_handler+0x8e>
 74c:	35 c0       	rjmp	.+106    	; 0x7b8 <menu_handler+0x94>
			case RIGHT:
			//if (current->children[next]->number_children == 0){
			//current->children[next]->fnc_pointer();
			//}
			
			if (next == 3)
 74e:	80 91 0a 02 	lds	r24, 0x020A
 752:	90 91 0b 02 	lds	r25, 0x020B
 756:	03 97       	sbiw	r24, 0x03	; 3
 758:	79 f5       	brne	.+94     	; 0x7b8 <menu_handler+0x94>
			{
				current = current->children[next-1];
 75a:	e0 91 08 02 	lds	r30, 0x0208
 75e:	f0 91 09 02 	lds	r31, 0x0209
 762:	81 8d       	ldd	r24, Z+25	; 0x19
 764:	92 8d       	ldd	r25, Z+26	; 0x1a
 766:	90 93 09 02 	sts	0x0209, r25
 76a:	80 93 08 02 	sts	0x0208, r24
				next = 1;
 76e:	21 e0       	ldi	r18, 0x01	; 1
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	30 93 0b 02 	sts	0x020B, r19
 776:	20 93 0a 02 	sts	0x020A, r18
				menu_print(current);
 77a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <menu_print>
 77e:	1c c0       	rjmp	.+56     	; 0x7b8 <menu_handler+0x94>
			}

			break;
			case LEFT:
			if (current->parent != NULL){
 780:	e0 91 08 02 	lds	r30, 0x0208
 784:	f0 91 09 02 	lds	r31, 0x0209
 788:	83 89       	ldd	r24, Z+19	; 0x13
 78a:	94 89       	ldd	r25, Z+20	; 0x14
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	a1 f0       	breq	.+40     	; 0x7b8 <menu_handler+0x94>
				current = current->parent;
 790:	90 93 09 02 	sts	0x0209, r25
 794:	80 93 08 02 	sts	0x0208, r24
				next = 1;
 798:	21 e0       	ldi	r18, 0x01	; 1
 79a:	30 e0       	ldi	r19, 0x00	; 0
 79c:	30 93 0b 02 	sts	0x020B, r19
 7a0:	20 93 0a 02 	sts	0x020A, r18
				menu_print(current);
 7a4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <menu_print>
 7a8:	07 c0       	rjmp	.+14     	; 0x7b8 <menu_handler+0x94>
			}
			break;
			case UP:
			
			update_next(*curr_dir);
 7aa:	82 e0       	ldi	r24, 0x02	; 2
 7ac:	0e 94 0b 03 	call	0x616	; 0x616 <update_next>
			break;
 7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <menu_handler+0x94>
			case DOWN:
			
			update_next(*curr_dir);
 7b2:	83 e0       	ldi	r24, 0x03	; 3
 7b4:	0e 94 0b 03 	call	0x616	; 0x616 <update_next>
			break;
			default:
			break;
		}
	}
	*last_dir = *curr_dir;
 7b8:	f8 01       	movw	r30, r16
 7ba:	80 81       	ld	r24, Z
 7bc:	88 83       	st	Y, r24
}
 7be:	df 91       	pop	r29
 7c0:	cf 91       	pop	r28
 7c2:	1f 91       	pop	r17
 7c4:	0f 91       	pop	r16
 7c6:	08 95       	ret

000007c8 <menu_fsm>:
	menu_fsm();
	
}


void menu_fsm(){
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	cd b7       	in	r28, 0x3d	; 61
 7ce:	de b7       	in	r29, 0x3e	; 62
 7d0:	2c 97       	sbiw	r28, 0x0c	; 12
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
	direction curr_dir;
	direction last_dir = NEUTRAL;
 7dc:	84 e0       	ldi	r24, 0x04	; 4
 7de:	8a 83       	std	Y+2, r24	; 0x02
	joy_position_t joystick;
	
	// Testing
	can_message_t message = {'j',1,"joystick"};
 7e0:	8a e0       	ldi	r24, 0x0A	; 10
 7e2:	e8 ed       	ldi	r30, 0xD8	; 216
 7e4:	f1 e0       	ldi	r31, 0x01	; 1
 7e6:	de 01       	movw	r26, r28
 7e8:	13 96       	adiw	r26, 0x03	; 3
 7ea:	01 90       	ld	r0, Z+
 7ec:	0d 92       	st	X+, r0
 7ee:	8a 95       	dec	r24
 7f0:	e1 f7       	brne	.-8      	; 0x7ea <menu_fsm+0x22>
	//can_message_send(&message);
	
	while(1)
	{
		menu_handler(&curr_dir, &last_dir);
 7f2:	be 01       	movw	r22, r28
 7f4:	6e 5f       	subi	r22, 0xFE	; 254
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	ce 01       	movw	r24, r28
 7fa:	01 96       	adiw	r24, 0x01	; 1
 7fc:	0e 94 92 03 	call	0x724	; 0x724 <menu_handler>
		
		/*        TESTING     */
		joystick = get_position();
 800:	0e 94 bc 02 	call	0x578	; 0x578 <get_position>
		message.data[0] = joystick.x_pos;
 804:	6d 83       	std	Y+5, r22	; 0x05
		//message.data[1] = joystick.y_pos;
		can_message_send(&message);
 806:	ce 01       	movw	r24, r28
 808:	03 96       	adiw	r24, 0x03	; 3
 80a:	0e 94 01 02 	call	0x402	; 0x402 <can_message_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 80e:	8f ef       	ldi	r24, 0xFF	; 255
 810:	9f e2       	ldi	r25, 0x2F	; 47
 812:	01 97       	sbiw	r24, 0x01	; 1
 814:	f1 f7       	brne	.-4      	; 0x812 <menu_fsm+0x4a>
 816:	00 c0       	rjmp	.+0      	; 0x818 <menu_fsm+0x50>
 818:	00 00       	nop
 81a:	eb cf       	rjmp	.-42     	; 0x7f2 <menu_fsm+0x2a>

0000081c <menu_init>:
menu_t sub4 = {"Debug",0,NULL ,NULL,{}};
menu_t menu = {"Main Menu",4,NULL,NULL,{&sub1,&sub2,&sub3,&sub4}};

void menu_init(){

	sub3sub1.parent= &sub3;
 81c:	8c e4       	ldi	r24, 0x4C	; 76
 81e:	91 e0       	ldi	r25, 0x01	; 1
 820:	90 93 c9 01 	sts	0x01C9, r25
 824:	80 93 c8 01 	sts	0x01C8, r24
	sub1.parent = &menu;	
 828:	86 e0       	ldi	r24, 0x06	; 6
 82a:	91 e0       	ldi	r25, 0x01	; 1
 82c:	90 93 a6 01 	sts	0x01A6, r25
 830:	80 93 a5 01 	sts	0x01A5, r24
	sub2.parent = &menu;
 834:	90 93 83 01 	sts	0x0183, r25
 838:	80 93 82 01 	sts	0x0182, r24
	sub3.parent = &menu;
 83c:	90 93 60 01 	sts	0x0160, r25
 840:	80 93 5f 01 	sts	0x015F, r24
	
	
	
	current = &menu;
 844:	90 93 09 02 	sts	0x0209, r25
 848:	80 93 08 02 	sts	0x0208, r24
	next = 1;
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	90 93 0b 02 	sts	0x020B, r25
 854:	80 93 0a 02 	sts	0x020A, r24
	
	
	menu_print(current);
 858:	86 e0       	ldi	r24, 0x06	; 6
 85a:	91 e0       	ldi	r25, 0x01	; 1
 85c:	0e 94 54 03 	call	0x6a8	; 0x6a8 <menu_print>
	menu_fsm();
 860:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <menu_fsm>

00000864 <oled_print_char>:
 864:	cf 93       	push	r28
 866:	df 93       	push	r29
 868:	ec 01       	movw	r28, r24
 86a:	20 e0       	ldi	r18, 0x00	; 0
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	a0 e0       	ldi	r26, 0x00	; 0
 870:	b2 e1       	ldi	r27, 0x12	; 18
 872:	e8 81       	ld	r30, Y
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	b0 97       	sbiw	r30, 0x20	; 32
 878:	ee 0f       	add	r30, r30
 87a:	ff 1f       	adc	r31, r31
 87c:	ee 0f       	add	r30, r30
 87e:	ff 1f       	adc	r31, r31
 880:	ee 0f       	add	r30, r30
 882:	ff 1f       	adc	r31, r31
 884:	e2 0f       	add	r30, r18
 886:	f3 1f       	adc	r31, r19
 888:	e0 59       	subi	r30, 0x90	; 144
 88a:	ff 4f       	sbci	r31, 0xFF	; 255
 88c:	e4 91       	lpm	r30, Z
 88e:	ec 93       	st	X, r30
 890:	2f 5f       	subi	r18, 0xFF	; 255
 892:	3f 4f       	sbci	r19, 0xFF	; 255
 894:	28 30       	cpi	r18, 0x08	; 8
 896:	31 05       	cpc	r19, r1
 898:	61 f7       	brne	.-40     	; 0x872 <oled_print_char+0xe>
 89a:	df 91       	pop	r29
 89c:	cf 91       	pop	r28
 89e:	08 95       	ret

000008a0 <oled_print>:
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	fc 01       	movw	r30, r24
 8a6:	20 81       	ld	r18, Z
 8a8:	22 23       	and	r18, r18
 8aa:	51 f0       	breq	.+20     	; 0x8c0 <oled_print+0x20>
 8ac:	ec 01       	movw	r28, r24
 8ae:	21 96       	adiw	r28, 0x01	; 1
 8b0:	0e 94 32 04 	call	0x864	; 0x864 <oled_print_char>
 8b4:	ce 01       	movw	r24, r28
 8b6:	21 96       	adiw	r28, 0x01	; 1
 8b8:	fc 01       	movw	r30, r24
 8ba:	20 81       	ld	r18, Z
 8bc:	21 11       	cpse	r18, r1
 8be:	f8 cf       	rjmp	.-16     	; 0x8b0 <oled_print+0x10>
 8c0:	df 91       	pop	r29
 8c2:	cf 91       	pop	r28
 8c4:	08 95       	ret

000008c6 <oled_init>:
 8c6:	e0 e0       	ldi	r30, 0x00	; 0
 8c8:	f0 e1       	ldi	r31, 0x10	; 16
 8ca:	8e ea       	ldi	r24, 0xAE	; 174
 8cc:	80 83       	st	Z, r24
 8ce:	81 ea       	ldi	r24, 0xA1	; 161
 8d0:	80 83       	st	Z, r24
 8d2:	8a ed       	ldi	r24, 0xDA	; 218
 8d4:	80 83       	st	Z, r24
 8d6:	82 e1       	ldi	r24, 0x12	; 18
 8d8:	80 83       	st	Z, r24
 8da:	88 ec       	ldi	r24, 0xC8	; 200
 8dc:	80 83       	st	Z, r24
 8de:	88 ea       	ldi	r24, 0xA8	; 168
 8e0:	80 83       	st	Z, r24
 8e2:	8f e3       	ldi	r24, 0x3F	; 63
 8e4:	80 83       	st	Z, r24
 8e6:	85 ed       	ldi	r24, 0xD5	; 213
 8e8:	80 83       	st	Z, r24
 8ea:	80 e8       	ldi	r24, 0x80	; 128
 8ec:	80 83       	st	Z, r24
 8ee:	81 e8       	ldi	r24, 0x81	; 129
 8f0:	80 83       	st	Z, r24
 8f2:	80 e5       	ldi	r24, 0x50	; 80
 8f4:	80 83       	st	Z, r24
 8f6:	89 ed       	ldi	r24, 0xD9	; 217
 8f8:	80 83       	st	Z, r24
 8fa:	81 e2       	ldi	r24, 0x21	; 33
 8fc:	80 83       	st	Z, r24
 8fe:	80 e2       	ldi	r24, 0x20	; 32
 900:	80 83       	st	Z, r24
 902:	10 82       	st	Z, r1
 904:	8b ed       	ldi	r24, 0xDB	; 219
 906:	80 83       	st	Z, r24
 908:	80 e3       	ldi	r24, 0x30	; 48
 90a:	80 83       	st	Z, r24
 90c:	8d ea       	ldi	r24, 0xAD	; 173
 90e:	80 83       	st	Z, r24
 910:	10 82       	st	Z, r1
 912:	84 ea       	ldi	r24, 0xA4	; 164
 914:	80 83       	st	Z, r24
 916:	86 ea       	ldi	r24, 0xA6	; 166
 918:	80 83       	st	Z, r24
 91a:	8f ea       	ldi	r24, 0xAF	; 175
 91c:	80 83       	st	Z, r24
 91e:	08 95       	ret

00000920 <oled_goto>:
 920:	e0 e0       	ldi	r30, 0x00	; 0
 922:	f0 e1       	ldi	r31, 0x10	; 16
 924:	91 e2       	ldi	r25, 0x21	; 33
 926:	90 83       	st	Z, r25
 928:	60 83       	st	Z, r22
 92a:	9f e7       	ldi	r25, 0x7F	; 127
 92c:	90 83       	st	Z, r25
 92e:	92 e2       	ldi	r25, 0x22	; 34
 930:	90 83       	st	Z, r25
 932:	80 83       	st	Z, r24
 934:	87 e0       	ldi	r24, 0x07	; 7
 936:	80 83       	st	Z, r24
 938:	08 95       	ret

0000093a <oled_clear_all>:
 93a:	60 e0       	ldi	r22, 0x00	; 0
 93c:	80 e0       	ldi	r24, 0x00	; 0
 93e:	0e 94 90 04 	call	0x920	; 0x920 <oled_goto>
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	94 e0       	ldi	r25, 0x04	; 4
 946:	e0 e0       	ldi	r30, 0x00	; 0
 948:	f2 e1       	ldi	r31, 0x12	; 18
 94a:	10 82       	st	Z, r1
 94c:	01 97       	sbiw	r24, 0x01	; 1
 94e:	00 97       	sbiw	r24, 0x00	; 0
 950:	e1 f7       	brne	.-8      	; 0x94a <oled_clear_all+0x10>
 952:	08 95       	ret

00000954 <spi_select>:
 954:	c4 98       	cbi	0x18, 4	; 24
 956:	08 95       	ret

00000958 <spi_deselect>:
 958:	c4 9a       	sbi	0x18, 4	; 24
 95a:	08 95       	ret

0000095c <spi_transmit>:
 95c:	8f b9       	out	0x0f, r24	; 15
 95e:	77 9b       	sbis	0x0e, 7	; 14
 960:	fe cf       	rjmp	.-4      	; 0x95e <spi_transmit+0x2>
 962:	08 95       	ret

00000964 <spi_receive>:
 964:	80 e0       	ldi	r24, 0x00	; 0
 966:	0e 94 ae 04 	call	0x95c	; 0x95c <spi_transmit>
 96a:	8f b1       	in	r24, 0x0f	; 15
 96c:	08 95       	ret

0000096e <spi_init>:
 96e:	87 b3       	in	r24, 0x17	; 23
 970:	80 6b       	ori	r24, 0xB0	; 176
 972:	87 bb       	out	0x17, r24	; 23
 974:	81 e5       	ldi	r24, 0x51	; 81
 976:	8d b9       	out	0x0d, r24	; 13
 978:	08 95       	ret

0000097a <USART_transmit>:
	fdevopen(USART_transmit,USART_receive);
}

void USART_transmit(unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)))
 97a:	5d 9b       	sbis	0x0b, 5	; 11
 97c:	fe cf       	rjmp	.-4      	; 0x97a <USART_transmit>
		;
	UDR0 = data;
 97e:	8c b9       	out	0x0c, r24	; 12
 980:	08 95       	ret

00000982 <USART_receive>:
	
}

unsigned char USART_receive (void){
	
	while( !(UCSR0A & (1<<RXC0)))
 982:	5f 9b       	sbis	0x0b, 7	; 11
 984:	fe cf       	rjmp	.-4      	; 0x982 <USART_receive>
		;
	return UDR0;
 986:	8c b1       	in	r24, 0x0c	; 12
	
 988:	08 95       	ret

0000098a <USART_init>:
#include "USART_driver.h"

void USART_init(unsigned int ubrr){

	UBRR0H = (unsigned char)(ubrr>>8);
 98a:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;	
 98c:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 98e:	88 e1       	ldi	r24, 0x18	; 24
 990:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 992:	8e e8       	ldi	r24, 0x8E	; 142
 994:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_transmit,USART_receive);
 996:	61 ec       	ldi	r22, 0xC1	; 193
 998:	74 e0       	ldi	r23, 0x04	; 4
 99a:	8d eb       	ldi	r24, 0xBD	; 189
 99c:	94 e0       	ldi	r25, 0x04	; 4
 99e:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <fdevopen>
 9a2:	08 95       	ret

000009a4 <__divmodhi4>:
 9a4:	97 fb       	bst	r25, 7
 9a6:	07 2e       	mov	r0, r23
 9a8:	16 f4       	brtc	.+4      	; 0x9ae <__divmodhi4+0xa>
 9aa:	00 94       	com	r0
 9ac:	07 d0       	rcall	.+14     	; 0x9bc <__divmodhi4_neg1>
 9ae:	77 fd       	sbrc	r23, 7
 9b0:	09 d0       	rcall	.+18     	; 0x9c4 <__divmodhi4_neg2>
 9b2:	0e 94 e6 04 	call	0x9cc	; 0x9cc <__udivmodhi4>
 9b6:	07 fc       	sbrc	r0, 7
 9b8:	05 d0       	rcall	.+10     	; 0x9c4 <__divmodhi4_neg2>
 9ba:	3e f4       	brtc	.+14     	; 0x9ca <__divmodhi4_exit>

000009bc <__divmodhi4_neg1>:
 9bc:	90 95       	com	r25
 9be:	81 95       	neg	r24
 9c0:	9f 4f       	sbci	r25, 0xFF	; 255
 9c2:	08 95       	ret

000009c4 <__divmodhi4_neg2>:
 9c4:	70 95       	com	r23
 9c6:	61 95       	neg	r22
 9c8:	7f 4f       	sbci	r23, 0xFF	; 255

000009ca <__divmodhi4_exit>:
 9ca:	08 95       	ret

000009cc <__udivmodhi4>:
 9cc:	aa 1b       	sub	r26, r26
 9ce:	bb 1b       	sub	r27, r27
 9d0:	51 e1       	ldi	r21, 0x11	; 17
 9d2:	07 c0       	rjmp	.+14     	; 0x9e2 <__udivmodhi4_ep>

000009d4 <__udivmodhi4_loop>:
 9d4:	aa 1f       	adc	r26, r26
 9d6:	bb 1f       	adc	r27, r27
 9d8:	a6 17       	cp	r26, r22
 9da:	b7 07       	cpc	r27, r23
 9dc:	10 f0       	brcs	.+4      	; 0x9e2 <__udivmodhi4_ep>
 9de:	a6 1b       	sub	r26, r22
 9e0:	b7 0b       	sbc	r27, r23

000009e2 <__udivmodhi4_ep>:
 9e2:	88 1f       	adc	r24, r24
 9e4:	99 1f       	adc	r25, r25
 9e6:	5a 95       	dec	r21
 9e8:	a9 f7       	brne	.-22     	; 0x9d4 <__udivmodhi4_loop>
 9ea:	80 95       	com	r24
 9ec:	90 95       	com	r25
 9ee:	bc 01       	movw	r22, r24
 9f0:	cd 01       	movw	r24, r26
 9f2:	08 95       	ret

000009f4 <fdevopen>:
 9f4:	0f 93       	push	r16
 9f6:	1f 93       	push	r17
 9f8:	cf 93       	push	r28
 9fa:	df 93       	push	r29
 9fc:	ec 01       	movw	r28, r24
 9fe:	8b 01       	movw	r16, r22
 a00:	00 97       	sbiw	r24, 0x00	; 0
 a02:	31 f4       	brne	.+12     	; 0xa10 <fdevopen+0x1c>
 a04:	61 15       	cp	r22, r1
 a06:	71 05       	cpc	r23, r1
 a08:	19 f4       	brne	.+6      	; 0xa10 <fdevopen+0x1c>
 a0a:	80 e0       	ldi	r24, 0x00	; 0
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	38 c0       	rjmp	.+112    	; 0xa80 <fdevopen+0x8c>
 a10:	6e e0       	ldi	r22, 0x0E	; 14
 a12:	70 e0       	ldi	r23, 0x00	; 0
 a14:	81 e0       	ldi	r24, 0x01	; 1
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	0e 94 72 05 	call	0xae4	; 0xae4 <calloc>
 a1c:	fc 01       	movw	r30, r24
 a1e:	00 97       	sbiw	r24, 0x00	; 0
 a20:	a1 f3       	breq	.-24     	; 0xa0a <fdevopen+0x16>
 a22:	80 e8       	ldi	r24, 0x80	; 128
 a24:	83 83       	std	Z+3, r24	; 0x03
 a26:	01 15       	cp	r16, r1
 a28:	11 05       	cpc	r17, r1
 a2a:	71 f0       	breq	.+28     	; 0xa48 <fdevopen+0x54>
 a2c:	13 87       	std	Z+11, r17	; 0x0b
 a2e:	02 87       	std	Z+10, r16	; 0x0a
 a30:	81 e8       	ldi	r24, 0x81	; 129
 a32:	83 83       	std	Z+3, r24	; 0x03
 a34:	80 91 0c 02 	lds	r24, 0x020C
 a38:	90 91 0d 02 	lds	r25, 0x020D
 a3c:	89 2b       	or	r24, r25
 a3e:	21 f4       	brne	.+8      	; 0xa48 <fdevopen+0x54>
 a40:	f0 93 0d 02 	sts	0x020D, r31
 a44:	e0 93 0c 02 	sts	0x020C, r30
 a48:	20 97       	sbiw	r28, 0x00	; 0
 a4a:	c9 f0       	breq	.+50     	; 0xa7e <fdevopen+0x8a>
 a4c:	d1 87       	std	Z+9, r29	; 0x09
 a4e:	c0 87       	std	Z+8, r28	; 0x08
 a50:	83 81       	ldd	r24, Z+3	; 0x03
 a52:	82 60       	ori	r24, 0x02	; 2
 a54:	83 83       	std	Z+3, r24	; 0x03
 a56:	80 91 0e 02 	lds	r24, 0x020E
 a5a:	90 91 0f 02 	lds	r25, 0x020F
 a5e:	89 2b       	or	r24, r25
 a60:	71 f4       	brne	.+28     	; 0xa7e <fdevopen+0x8a>
 a62:	f0 93 0f 02 	sts	0x020F, r31
 a66:	e0 93 0e 02 	sts	0x020E, r30
 a6a:	80 91 10 02 	lds	r24, 0x0210
 a6e:	90 91 11 02 	lds	r25, 0x0211
 a72:	89 2b       	or	r24, r25
 a74:	21 f4       	brne	.+8      	; 0xa7e <fdevopen+0x8a>
 a76:	f0 93 11 02 	sts	0x0211, r31
 a7a:	e0 93 10 02 	sts	0x0210, r30
 a7e:	cf 01       	movw	r24, r30
 a80:	df 91       	pop	r29
 a82:	cf 91       	pop	r28
 a84:	1f 91       	pop	r17
 a86:	0f 91       	pop	r16
 a88:	08 95       	ret

00000a8a <puts>:
 a8a:	0f 93       	push	r16
 a8c:	1f 93       	push	r17
 a8e:	cf 93       	push	r28
 a90:	df 93       	push	r29
 a92:	e0 91 0e 02 	lds	r30, 0x020E
 a96:	f0 91 0f 02 	lds	r31, 0x020F
 a9a:	23 81       	ldd	r18, Z+3	; 0x03
 a9c:	21 ff       	sbrs	r18, 1
 a9e:	1b c0       	rjmp	.+54     	; 0xad6 <puts+0x4c>
 aa0:	ec 01       	movw	r28, r24
 aa2:	00 e0       	ldi	r16, 0x00	; 0
 aa4:	10 e0       	ldi	r17, 0x00	; 0
 aa6:	89 91       	ld	r24, Y+
 aa8:	60 91 0e 02 	lds	r22, 0x020E
 aac:	70 91 0f 02 	lds	r23, 0x020F
 ab0:	db 01       	movw	r26, r22
 ab2:	18 96       	adiw	r26, 0x08	; 8
 ab4:	ed 91       	ld	r30, X+
 ab6:	fc 91       	ld	r31, X
 ab8:	19 97       	sbiw	r26, 0x09	; 9
 aba:	88 23       	and	r24, r24
 abc:	31 f0       	breq	.+12     	; 0xaca <puts+0x40>
 abe:	09 95       	icall
 ac0:	89 2b       	or	r24, r25
 ac2:	89 f3       	breq	.-30     	; 0xaa6 <puts+0x1c>
 ac4:	0f ef       	ldi	r16, 0xFF	; 255
 ac6:	1f ef       	ldi	r17, 0xFF	; 255
 ac8:	ee cf       	rjmp	.-36     	; 0xaa6 <puts+0x1c>
 aca:	8a e0       	ldi	r24, 0x0A	; 10
 acc:	09 95       	icall
 ace:	89 2b       	or	r24, r25
 ad0:	11 f4       	brne	.+4      	; 0xad6 <puts+0x4c>
 ad2:	c8 01       	movw	r24, r16
 ad4:	02 c0       	rjmp	.+4      	; 0xada <puts+0x50>
 ad6:	8f ef       	ldi	r24, 0xFF	; 255
 ad8:	9f ef       	ldi	r25, 0xFF	; 255
 ada:	df 91       	pop	r29
 adc:	cf 91       	pop	r28
 ade:	1f 91       	pop	r17
 ae0:	0f 91       	pop	r16
 ae2:	08 95       	ret

00000ae4 <calloc>:
 ae4:	0f 93       	push	r16
 ae6:	1f 93       	push	r17
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	86 9f       	mul	r24, r22
 aee:	80 01       	movw	r16, r0
 af0:	87 9f       	mul	r24, r23
 af2:	10 0d       	add	r17, r0
 af4:	96 9f       	mul	r25, r22
 af6:	10 0d       	add	r17, r0
 af8:	11 24       	eor	r1, r1
 afa:	c8 01       	movw	r24, r16
 afc:	0e 94 8e 05 	call	0xb1c	; 0xb1c <malloc>
 b00:	ec 01       	movw	r28, r24
 b02:	00 97       	sbiw	r24, 0x00	; 0
 b04:	29 f0       	breq	.+10     	; 0xb10 <calloc+0x2c>
 b06:	a8 01       	movw	r20, r16
 b08:	60 e0       	ldi	r22, 0x00	; 0
 b0a:	70 e0       	ldi	r23, 0x00	; 0
 b0c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <memset>
 b10:	ce 01       	movw	r24, r28
 b12:	df 91       	pop	r29
 b14:	cf 91       	pop	r28
 b16:	1f 91       	pop	r17
 b18:	0f 91       	pop	r16
 b1a:	08 95       	ret

00000b1c <malloc>:
 b1c:	cf 93       	push	r28
 b1e:	df 93       	push	r29
 b20:	82 30       	cpi	r24, 0x02	; 2
 b22:	91 05       	cpc	r25, r1
 b24:	10 f4       	brcc	.+4      	; 0xb2a <malloc+0xe>
 b26:	82 e0       	ldi	r24, 0x02	; 2
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	e0 91 14 02 	lds	r30, 0x0214
 b2e:	f0 91 15 02 	lds	r31, 0x0215
 b32:	20 e0       	ldi	r18, 0x00	; 0
 b34:	30 e0       	ldi	r19, 0x00	; 0
 b36:	a0 e0       	ldi	r26, 0x00	; 0
 b38:	b0 e0       	ldi	r27, 0x00	; 0
 b3a:	30 97       	sbiw	r30, 0x00	; 0
 b3c:	39 f1       	breq	.+78     	; 0xb8c <malloc+0x70>
 b3e:	40 81       	ld	r20, Z
 b40:	51 81       	ldd	r21, Z+1	; 0x01
 b42:	48 17       	cp	r20, r24
 b44:	59 07       	cpc	r21, r25
 b46:	b8 f0       	brcs	.+46     	; 0xb76 <malloc+0x5a>
 b48:	48 17       	cp	r20, r24
 b4a:	59 07       	cpc	r21, r25
 b4c:	71 f4       	brne	.+28     	; 0xb6a <malloc+0x4e>
 b4e:	82 81       	ldd	r24, Z+2	; 0x02
 b50:	93 81       	ldd	r25, Z+3	; 0x03
 b52:	10 97       	sbiw	r26, 0x00	; 0
 b54:	29 f0       	breq	.+10     	; 0xb60 <malloc+0x44>
 b56:	13 96       	adiw	r26, 0x03	; 3
 b58:	9c 93       	st	X, r25
 b5a:	8e 93       	st	-X, r24
 b5c:	12 97       	sbiw	r26, 0x02	; 2
 b5e:	2c c0       	rjmp	.+88     	; 0xbb8 <malloc+0x9c>
 b60:	90 93 15 02 	sts	0x0215, r25
 b64:	80 93 14 02 	sts	0x0214, r24
 b68:	27 c0       	rjmp	.+78     	; 0xbb8 <malloc+0x9c>
 b6a:	21 15       	cp	r18, r1
 b6c:	31 05       	cpc	r19, r1
 b6e:	31 f0       	breq	.+12     	; 0xb7c <malloc+0x60>
 b70:	42 17       	cp	r20, r18
 b72:	53 07       	cpc	r21, r19
 b74:	18 f0       	brcs	.+6      	; 0xb7c <malloc+0x60>
 b76:	a9 01       	movw	r20, r18
 b78:	db 01       	movw	r26, r22
 b7a:	01 c0       	rjmp	.+2      	; 0xb7e <malloc+0x62>
 b7c:	ef 01       	movw	r28, r30
 b7e:	9a 01       	movw	r18, r20
 b80:	bd 01       	movw	r22, r26
 b82:	df 01       	movw	r26, r30
 b84:	02 80       	ldd	r0, Z+2	; 0x02
 b86:	f3 81       	ldd	r31, Z+3	; 0x03
 b88:	e0 2d       	mov	r30, r0
 b8a:	d7 cf       	rjmp	.-82     	; 0xb3a <malloc+0x1e>
 b8c:	21 15       	cp	r18, r1
 b8e:	31 05       	cpc	r19, r1
 b90:	f9 f0       	breq	.+62     	; 0xbd0 <malloc+0xb4>
 b92:	28 1b       	sub	r18, r24
 b94:	39 0b       	sbc	r19, r25
 b96:	24 30       	cpi	r18, 0x04	; 4
 b98:	31 05       	cpc	r19, r1
 b9a:	80 f4       	brcc	.+32     	; 0xbbc <malloc+0xa0>
 b9c:	8a 81       	ldd	r24, Y+2	; 0x02
 b9e:	9b 81       	ldd	r25, Y+3	; 0x03
 ba0:	61 15       	cp	r22, r1
 ba2:	71 05       	cpc	r23, r1
 ba4:	21 f0       	breq	.+8      	; 0xbae <malloc+0x92>
 ba6:	fb 01       	movw	r30, r22
 ba8:	93 83       	std	Z+3, r25	; 0x03
 baa:	82 83       	std	Z+2, r24	; 0x02
 bac:	04 c0       	rjmp	.+8      	; 0xbb6 <malloc+0x9a>
 bae:	90 93 15 02 	sts	0x0215, r25
 bb2:	80 93 14 02 	sts	0x0214, r24
 bb6:	fe 01       	movw	r30, r28
 bb8:	32 96       	adiw	r30, 0x02	; 2
 bba:	44 c0       	rjmp	.+136    	; 0xc44 <malloc+0x128>
 bbc:	fe 01       	movw	r30, r28
 bbe:	e2 0f       	add	r30, r18
 bc0:	f3 1f       	adc	r31, r19
 bc2:	81 93       	st	Z+, r24
 bc4:	91 93       	st	Z+, r25
 bc6:	22 50       	subi	r18, 0x02	; 2
 bc8:	31 09       	sbc	r19, r1
 bca:	39 83       	std	Y+1, r19	; 0x01
 bcc:	28 83       	st	Y, r18
 bce:	3a c0       	rjmp	.+116    	; 0xc44 <malloc+0x128>
 bd0:	20 91 12 02 	lds	r18, 0x0212
 bd4:	30 91 13 02 	lds	r19, 0x0213
 bd8:	23 2b       	or	r18, r19
 bda:	41 f4       	brne	.+16     	; 0xbec <malloc+0xd0>
 bdc:	20 91 02 01 	lds	r18, 0x0102
 be0:	30 91 03 01 	lds	r19, 0x0103
 be4:	30 93 13 02 	sts	0x0213, r19
 be8:	20 93 12 02 	sts	0x0212, r18
 bec:	20 91 00 01 	lds	r18, 0x0100
 bf0:	30 91 01 01 	lds	r19, 0x0101
 bf4:	21 15       	cp	r18, r1
 bf6:	31 05       	cpc	r19, r1
 bf8:	41 f4       	brne	.+16     	; 0xc0a <malloc+0xee>
 bfa:	2d b7       	in	r18, 0x3d	; 61
 bfc:	3e b7       	in	r19, 0x3e	; 62
 bfe:	40 91 04 01 	lds	r20, 0x0104
 c02:	50 91 05 01 	lds	r21, 0x0105
 c06:	24 1b       	sub	r18, r20
 c08:	35 0b       	sbc	r19, r21
 c0a:	e0 91 12 02 	lds	r30, 0x0212
 c0e:	f0 91 13 02 	lds	r31, 0x0213
 c12:	e2 17       	cp	r30, r18
 c14:	f3 07       	cpc	r31, r19
 c16:	a0 f4       	brcc	.+40     	; 0xc40 <malloc+0x124>
 c18:	2e 1b       	sub	r18, r30
 c1a:	3f 0b       	sbc	r19, r31
 c1c:	28 17       	cp	r18, r24
 c1e:	39 07       	cpc	r19, r25
 c20:	78 f0       	brcs	.+30     	; 0xc40 <malloc+0x124>
 c22:	ac 01       	movw	r20, r24
 c24:	4e 5f       	subi	r20, 0xFE	; 254
 c26:	5f 4f       	sbci	r21, 0xFF	; 255
 c28:	24 17       	cp	r18, r20
 c2a:	35 07       	cpc	r19, r21
 c2c:	48 f0       	brcs	.+18     	; 0xc40 <malloc+0x124>
 c2e:	4e 0f       	add	r20, r30
 c30:	5f 1f       	adc	r21, r31
 c32:	50 93 13 02 	sts	0x0213, r21
 c36:	40 93 12 02 	sts	0x0212, r20
 c3a:	81 93       	st	Z+, r24
 c3c:	91 93       	st	Z+, r25
 c3e:	02 c0       	rjmp	.+4      	; 0xc44 <malloc+0x128>
 c40:	e0 e0       	ldi	r30, 0x00	; 0
 c42:	f0 e0       	ldi	r31, 0x00	; 0
 c44:	cf 01       	movw	r24, r30
 c46:	df 91       	pop	r29
 c48:	cf 91       	pop	r28
 c4a:	08 95       	ret

00000c4c <free>:
 c4c:	cf 93       	push	r28
 c4e:	df 93       	push	r29
 c50:	00 97       	sbiw	r24, 0x00	; 0
 c52:	09 f4       	brne	.+2      	; 0xc56 <free+0xa>
 c54:	87 c0       	rjmp	.+270    	; 0xd64 <free+0x118>
 c56:	fc 01       	movw	r30, r24
 c58:	32 97       	sbiw	r30, 0x02	; 2
 c5a:	13 82       	std	Z+3, r1	; 0x03
 c5c:	12 82       	std	Z+2, r1	; 0x02
 c5e:	c0 91 14 02 	lds	r28, 0x0214
 c62:	d0 91 15 02 	lds	r29, 0x0215
 c66:	20 97       	sbiw	r28, 0x00	; 0
 c68:	81 f4       	brne	.+32     	; 0xc8a <free+0x3e>
 c6a:	20 81       	ld	r18, Z
 c6c:	31 81       	ldd	r19, Z+1	; 0x01
 c6e:	28 0f       	add	r18, r24
 c70:	39 1f       	adc	r19, r25
 c72:	80 91 12 02 	lds	r24, 0x0212
 c76:	90 91 13 02 	lds	r25, 0x0213
 c7a:	82 17       	cp	r24, r18
 c7c:	93 07       	cpc	r25, r19
 c7e:	79 f5       	brne	.+94     	; 0xcde <free+0x92>
 c80:	f0 93 13 02 	sts	0x0213, r31
 c84:	e0 93 12 02 	sts	0x0212, r30
 c88:	6d c0       	rjmp	.+218    	; 0xd64 <free+0x118>
 c8a:	de 01       	movw	r26, r28
 c8c:	20 e0       	ldi	r18, 0x00	; 0
 c8e:	30 e0       	ldi	r19, 0x00	; 0
 c90:	ae 17       	cp	r26, r30
 c92:	bf 07       	cpc	r27, r31
 c94:	50 f4       	brcc	.+20     	; 0xcaa <free+0x5e>
 c96:	12 96       	adiw	r26, 0x02	; 2
 c98:	4d 91       	ld	r20, X+
 c9a:	5c 91       	ld	r21, X
 c9c:	13 97       	sbiw	r26, 0x03	; 3
 c9e:	9d 01       	movw	r18, r26
 ca0:	41 15       	cp	r20, r1
 ca2:	51 05       	cpc	r21, r1
 ca4:	09 f1       	breq	.+66     	; 0xce8 <free+0x9c>
 ca6:	da 01       	movw	r26, r20
 ca8:	f3 cf       	rjmp	.-26     	; 0xc90 <free+0x44>
 caa:	b3 83       	std	Z+3, r27	; 0x03
 cac:	a2 83       	std	Z+2, r26	; 0x02
 cae:	40 81       	ld	r20, Z
 cb0:	51 81       	ldd	r21, Z+1	; 0x01
 cb2:	84 0f       	add	r24, r20
 cb4:	95 1f       	adc	r25, r21
 cb6:	8a 17       	cp	r24, r26
 cb8:	9b 07       	cpc	r25, r27
 cba:	71 f4       	brne	.+28     	; 0xcd8 <free+0x8c>
 cbc:	8d 91       	ld	r24, X+
 cbe:	9c 91       	ld	r25, X
 cc0:	11 97       	sbiw	r26, 0x01	; 1
 cc2:	84 0f       	add	r24, r20
 cc4:	95 1f       	adc	r25, r21
 cc6:	02 96       	adiw	r24, 0x02	; 2
 cc8:	91 83       	std	Z+1, r25	; 0x01
 cca:	80 83       	st	Z, r24
 ccc:	12 96       	adiw	r26, 0x02	; 2
 cce:	8d 91       	ld	r24, X+
 cd0:	9c 91       	ld	r25, X
 cd2:	13 97       	sbiw	r26, 0x03	; 3
 cd4:	93 83       	std	Z+3, r25	; 0x03
 cd6:	82 83       	std	Z+2, r24	; 0x02
 cd8:	21 15       	cp	r18, r1
 cda:	31 05       	cpc	r19, r1
 cdc:	29 f4       	brne	.+10     	; 0xce8 <free+0x9c>
 cde:	f0 93 15 02 	sts	0x0215, r31
 ce2:	e0 93 14 02 	sts	0x0214, r30
 ce6:	3e c0       	rjmp	.+124    	; 0xd64 <free+0x118>
 ce8:	d9 01       	movw	r26, r18
 cea:	13 96       	adiw	r26, 0x03	; 3
 cec:	fc 93       	st	X, r31
 cee:	ee 93       	st	-X, r30
 cf0:	12 97       	sbiw	r26, 0x02	; 2
 cf2:	4d 91       	ld	r20, X+
 cf4:	5d 91       	ld	r21, X+
 cf6:	a4 0f       	add	r26, r20
 cf8:	b5 1f       	adc	r27, r21
 cfa:	ea 17       	cp	r30, r26
 cfc:	fb 07       	cpc	r31, r27
 cfe:	79 f4       	brne	.+30     	; 0xd1e <free+0xd2>
 d00:	80 81       	ld	r24, Z
 d02:	91 81       	ldd	r25, Z+1	; 0x01
 d04:	84 0f       	add	r24, r20
 d06:	95 1f       	adc	r25, r21
 d08:	02 96       	adiw	r24, 0x02	; 2
 d0a:	d9 01       	movw	r26, r18
 d0c:	11 96       	adiw	r26, 0x01	; 1
 d0e:	9c 93       	st	X, r25
 d10:	8e 93       	st	-X, r24
 d12:	82 81       	ldd	r24, Z+2	; 0x02
 d14:	93 81       	ldd	r25, Z+3	; 0x03
 d16:	13 96       	adiw	r26, 0x03	; 3
 d18:	9c 93       	st	X, r25
 d1a:	8e 93       	st	-X, r24
 d1c:	12 97       	sbiw	r26, 0x02	; 2
 d1e:	e0 e0       	ldi	r30, 0x00	; 0
 d20:	f0 e0       	ldi	r31, 0x00	; 0
 d22:	8a 81       	ldd	r24, Y+2	; 0x02
 d24:	9b 81       	ldd	r25, Y+3	; 0x03
 d26:	00 97       	sbiw	r24, 0x00	; 0
 d28:	19 f0       	breq	.+6      	; 0xd30 <free+0xe4>
 d2a:	fe 01       	movw	r30, r28
 d2c:	ec 01       	movw	r28, r24
 d2e:	f9 cf       	rjmp	.-14     	; 0xd22 <free+0xd6>
 d30:	ce 01       	movw	r24, r28
 d32:	02 96       	adiw	r24, 0x02	; 2
 d34:	28 81       	ld	r18, Y
 d36:	39 81       	ldd	r19, Y+1	; 0x01
 d38:	82 0f       	add	r24, r18
 d3a:	93 1f       	adc	r25, r19
 d3c:	20 91 12 02 	lds	r18, 0x0212
 d40:	30 91 13 02 	lds	r19, 0x0213
 d44:	28 17       	cp	r18, r24
 d46:	39 07       	cpc	r19, r25
 d48:	69 f4       	brne	.+26     	; 0xd64 <free+0x118>
 d4a:	30 97       	sbiw	r30, 0x00	; 0
 d4c:	29 f4       	brne	.+10     	; 0xd58 <free+0x10c>
 d4e:	10 92 15 02 	sts	0x0215, r1
 d52:	10 92 14 02 	sts	0x0214, r1
 d56:	02 c0       	rjmp	.+4      	; 0xd5c <free+0x110>
 d58:	13 82       	std	Z+3, r1	; 0x03
 d5a:	12 82       	std	Z+2, r1	; 0x02
 d5c:	d0 93 13 02 	sts	0x0213, r29
 d60:	c0 93 12 02 	sts	0x0212, r28
 d64:	df 91       	pop	r29
 d66:	cf 91       	pop	r28
 d68:	08 95       	ret

00000d6a <memset>:
 d6a:	dc 01       	movw	r26, r24
 d6c:	01 c0       	rjmp	.+2      	; 0xd70 <memset+0x6>
 d6e:	6d 93       	st	X+, r22
 d70:	41 50       	subi	r20, 0x01	; 1
 d72:	50 40       	sbci	r21, 0x00	; 0
 d74:	e0 f7       	brcc	.-8      	; 0xd6e <memset+0x4>
 d76:	08 95       	ret

00000d78 <_exit>:
 d78:	f8 94       	cli

00000d7a <__stop_program>:
 d7a:	ff cf       	rjmp	.-2      	; 0xd7a <__stop_program>
