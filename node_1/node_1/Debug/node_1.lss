
node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018a  00800100  000017e2  00001876  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080028a  0080028a  00001a00  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a00  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000258  00000000  00000000  00001a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002128  00000000  00000000  00001cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d8e  00000000  00000000  00003ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c25  00000000  00000000  00004b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000056c  00000000  00000000  00005790  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000069a  00000000  00000000  00005cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f32  00000000  00000000  00006396  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d0  00000000  00000000  000072c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <menu_handler+0xe>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 ee       	ldi	r30, 0xE2	; 226
     37c:	f7 e1       	ldi	r31, 0x17	; 23
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	aa 38       	cpi	r26, 0x8A	; 138
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	aa e8       	ldi	r26, 0x8A	; 138
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ac 39       	cpi	r26, 0x9C	; 156
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 83 03 	call	0x706	; 0x706 <main>
     39e:	0c 94 ef 0b 	jmp	0x17de	; 0x17de <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
     3a6:	8c 5f       	subi	r24, 0xFC	; 252
     3a8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	8a 95       	dec	r24
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <ADC_read+0x8>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <ADC_read+0xe>
     3b4:	80 91 00 14 	lds	r24, 0x1400
     3b8:	08 95       	ret

000003ba <check_and_report_shot>:
void check_and_report_shot( void )
{
	
	static int recent_shot = 0;
	
	if (recent_shot == 0)
     3ba:	80 91 8a 02 	lds	r24, 0x028A
     3be:	90 91 8b 02 	lds	r25, 0x028B
     3c2:	89 2b       	or	r24, r25
     3c4:	89 f4       	brne	.+34     	; 0x3e8 <check_and_report_shot+0x2e>
	{
		if(ADC_read(3) > 100)
     3c6:	83 e0       	ldi	r24, 0x03	; 3
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     3ce:	85 36       	cpi	r24, 0x65	; 101
     3d0:	a8 f0       	brcs	.+42     	; 0x3fc <check_and_report_shot+0x42>
		{
			can_message_send(&shot_msg);
     3d2:	80 e1       	ldi	r24, 0x10	; 16
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	0e 94 a7 03 	call	0x74e	; 0x74e <can_message_send>
			recent_shot = 1;
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	90 93 8b 02 	sts	0x028B, r25
     3e2:	80 93 8a 02 	sts	0x028A, r24
     3e6:	08 95       	ret
		}
	}
	else
	{
		if (ADC_read(3) < 100){
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     3f0:	84 36       	cpi	r24, 0x64	; 100
     3f2:	20 f4       	brcc	.+8      	; 0x3fc <check_and_report_shot+0x42>
			recent_shot = 0;
     3f4:	10 92 8b 02 	sts	0x028B, r1
     3f8:	10 92 8a 02 	sts	0x028A, r1
     3fc:	08 95       	ret

000003fe <print_highscore>:
		}
	}
}

void print_highscore( void )
{
     3fe:	ef 92       	push	r14
     400:	ff 92       	push	r15
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29

	
	int i;
	char* temp = "00000000000000000";

	oled_clear_all();
     40a:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_clear_all>
	oled_goto(0,0);
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
	oled_print("Highscores");
     416:	85 e2       	ldi	r24, 0x25	; 37
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	for (i=0; i<3 ;i++)
     41e:	c0 e0       	ldi	r28, 0x00	; 0
     420:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i+2,8);
		sprintf(temp,"%d. %d",i+1,eeprom_read_word((uint16_t*)(i*2)));
     422:	0f 2e       	mov	r0, r31
     424:	f0 e3       	ldi	r31, 0x30	; 48
     426:	ef 2e       	mov	r14, r31
     428:	f2 e0       	ldi	r31, 0x02	; 2
     42a:	ff 2e       	mov	r15, r31
     42c:	f0 2d       	mov	r31, r0
     42e:	07 e3       	ldi	r16, 0x37	; 55
     430:	12 e0       	ldi	r17, 0x02	; 2
	oled_clear_all();
	oled_goto(0,0);
	oled_print("Highscores");
	for (i=0; i<3 ;i++)
	{
		oled_goto(i+2,8);
     432:	68 e0       	ldi	r22, 0x08	; 8
     434:	8c 2f       	mov	r24, r28
     436:	8e 5f       	subi	r24, 0xFE	; 254
     438:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
		sprintf(temp,"%d. %d",i+1,eeprom_read_word((uint16_t*)(i*2)));
     43c:	ce 01       	movw	r24, r28
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	0e 94 a0 09 	call	0x1340	; 0x1340 <__eerd_word_m162>
     446:	21 96       	adiw	r28, 0x01	; 1
     448:	9f 93       	push	r25
     44a:	8f 93       	push	r24
     44c:	df 93       	push	r29
     44e:	cf 93       	push	r28
     450:	ff 92       	push	r15
     452:	ef 92       	push	r14
     454:	1f 93       	push	r17
     456:	0f 93       	push	r16
     458:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		oled_print(temp);
     45c:	c8 01       	movw	r24, r16
     45e:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	char* temp = "00000000000000000";

	oled_clear_all();
	oled_goto(0,0);
	oled_print("Highscores");
	for (i=0; i<3 ;i++)
     462:	8d b7       	in	r24, 0x3d	; 61
     464:	9e b7       	in	r25, 0x3e	; 62
     466:	08 96       	adiw	r24, 0x08	; 8
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	f8 94       	cli
     46c:	9e bf       	out	0x3e, r25	; 62
     46e:	0f be       	out	0x3f, r0	; 63
     470:	8d bf       	out	0x3d, r24	; 61
     472:	c3 30       	cpi	r28, 0x03	; 3
     474:	d1 05       	cpc	r29, r1
     476:	e9 f6       	brne	.-70     	; 0x432 <print_highscore+0x34>
		oled_print(temp);
	}

	
	return;
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	08 95       	ret

00000486 <update_eeprom>:

void update_eeprom( int score, uint16_t* highscore )
{
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	08 2f       	mov	r16, r24
     490:	19 2f       	mov	r17, r25
     492:	eb 01       	movw	r28, r22
	if (score > highscore[0])
     494:	28 2f       	mov	r18, r24
     496:	39 2f       	mov	r19, r25
     498:	48 81       	ld	r20, Y
     49a:	59 81       	ldd	r21, Y+1	; 0x01
     49c:	42 17       	cp	r20, r18
     49e:	53 07       	cpc	r21, r19
     4a0:	98 f4       	brcc	.+38     	; 0x4c8 <update_eeprom+0x42>
	{
		eeprom_write_word((uint16_t*)4, highscore[1]);
     4a2:	6a 81       	ldd	r22, Y+2	; 0x02
     4a4:	7b 81       	ldd	r23, Y+3	; 0x03
     4a6:	84 e0       	ldi	r24, 0x04	; 4
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
		eeprom_write_word((uint16_t*)2, highscore[0]);
     4ae:	68 81       	ld	r22, Y
     4b0:	79 81       	ldd	r23, Y+1	; 0x01
     4b2:	82 e0       	ldi	r24, 0x02	; 2
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
		eeprom_write_word((uint16_t*)0, score );
     4ba:	60 2f       	mov	r22, r16
     4bc:	71 2f       	mov	r23, r17
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
     4c6:	1b c0       	rjmp	.+54     	; 0x4fe <update_eeprom+0x78>
	}
	else if(score > highscore[1])
     4c8:	6a 81       	ldd	r22, Y+2	; 0x02
     4ca:	7b 81       	ldd	r23, Y+3	; 0x03
     4cc:	62 17       	cp	r22, r18
     4ce:	73 07       	cpc	r23, r19
     4d0:	58 f4       	brcc	.+22     	; 0x4e8 <update_eeprom+0x62>
	{
		eeprom_write_word((uint16_t*)4, highscore[1]);
     4d2:	84 e0       	ldi	r24, 0x04	; 4
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
		eeprom_write_word((uint16_t*)2, score );
     4da:	60 2f       	mov	r22, r16
     4dc:	71 2f       	mov	r23, r17
     4de:	82 e0       	ldi	r24, 0x02	; 2
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
     4e6:	0b c0       	rjmp	.+22     	; 0x4fe <update_eeprom+0x78>
	}
	else if(score > highscore[2])
     4e8:	4c 81       	ldd	r20, Y+4	; 0x04
     4ea:	5d 81       	ldd	r21, Y+5	; 0x05
     4ec:	42 17       	cp	r20, r18
     4ee:	53 07       	cpc	r21, r19
     4f0:	30 f4       	brcc	.+12     	; 0x4fe <update_eeprom+0x78>
	{
		eeprom_write_word((uint16_t*)4, score );
     4f2:	68 2f       	mov	r22, r24
     4f4:	79 2f       	mov	r23, r25
     4f6:	84 e0       	ldi	r24, 0x04	; 4
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
	}
}
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	1f 91       	pop	r17
     504:	0f 91       	pop	r16
     506:	08 95       	ret

00000508 <play_game>:
	
void check_and_report_shot( void );
void update_eeprom( int score, uint16_t* highscore );

void play_game( void )
{
     508:	4f 92       	push	r4
     50a:	5f 92       	push	r5
     50c:	6f 92       	push	r6
     50e:	7f 92       	push	r7
     510:	8f 92       	push	r8
     512:	9f 92       	push	r9
     514:	af 92       	push	r10
     516:	bf 92       	push	r11
     518:	cf 92       	push	r12
     51a:	df 92       	push	r13
     51c:	ef 92       	push	r14
     51e:	ff 92       	push	r15
     520:	0f 93       	push	r16
     522:	1f 93       	push	r17
     524:	cf 93       	push	r28
     526:	df 93       	push	r29
     528:	cd b7       	in	r28, 0x3d	; 61
     52a:	de b7       	in	r29, 0x3e	; 62
     52c:	60 97       	sbiw	r28, 0x10	; 16
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
	int i;
	int score = 0;
	int score_sub = 0;
	char* score_print = "0000000000";
	
	can_message_t message = {'m',1,"00"};
     538:	8a e0       	ldi	r24, 0x0A	; 10
     53a:	eb e1       	ldi	r30, 0x1B	; 27
     53c:	f2 e0       	ldi	r31, 0x02	; 2
     53e:	de 01       	movw	r26, r28
     540:	17 96       	adiw	r26, 0x07	; 7
     542:	01 90       	ld	r0, Z+
     544:	0d 92       	st	X+, r0
     546:	8a 95       	dec	r24
     548:	e1 f7       	brne	.-8      	; 0x542 <play_game+0x3a>
	joy_position_t joystick;
	
	// Get highscores
	for(i=0; i<5; i+=2)
	{
		highscore[i/2] = eeprom_read_word((uint16_t*)(i));
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	0e 94 a0 09 	call	0x1340	; 0x1340 <__eerd_word_m162>
     552:	9a 83       	std	Y+2, r25	; 0x02
     554:	89 83       	std	Y+1, r24	; 0x01
     556:	82 e0       	ldi	r24, 0x02	; 2
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	0e 94 a0 09 	call	0x1340	; 0x1340 <__eerd_word_m162>
     55e:	9c 83       	std	Y+4, r25	; 0x04
     560:	8b 83       	std	Y+3, r24	; 0x03
     562:	84 e0       	ldi	r24, 0x04	; 4
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 a0 09 	call	0x1340	; 0x1340 <__eerd_word_m162>
     56a:	9e 83       	std	Y+6, r25	; 0x06
     56c:	8d 83       	std	Y+5, r24	; 0x05
	}
	
	// Sending mode to node 2
	message.data[0] = TOUCH_JOY_MODE;
     56e:	80 91 24 01 	lds	r24, 0x0124
     572:	89 87       	std	Y+9, r24	; 0x09
	can_message_send(&message);
     574:	ce 01       	movw	r24, r28
     576:	07 96       	adiw	r24, 0x07	; 7
     578:	0e 94 a7 03 	call	0x74e	; 0x74e <can_message_send>
	
	//Print Screen
	oled_clear_all();
     57c:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_clear_all>
	oled_goto(0,0);
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
	oled_print("     GAME");
     588:	89 e4       	ldi	r24, 0x49	; 73
     58a:	92 e0       	ldi	r25, 0x02	; 2
     58c:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	oled_goto(3,0);
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	83 e0       	ldi	r24, 0x03	; 3
     594:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
	oled_print("    Score: ");
     598:	83 e5       	ldi	r24, 0x53	; 83
     59a:	92 e0       	ldi	r25, 0x02	; 2
     59c:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
void play_game( void )
{
	uint16_t highscore[3];
	int i;
	int score = 0;
	int score_sub = 0;
     5a0:	c1 2c       	mov	r12, r1
     5a2:	d1 2c       	mov	r13, r1

void play_game( void )
{
	uint16_t highscore[3];
	int i;
	int score = 0;
     5a4:	00 e0       	ldi	r16, 0x00	; 0
     5a6:	10 e0       	ldi	r17, 0x00	; 0
	
	while(1)
	{
		//Joystick
		joystick =  get_position();
		joystick_msg.data[0] = joystick.x_pos;
     5a8:	0f 2e       	mov	r0, r31
     5aa:	fc e1       	ldi	r31, 0x1C	; 28
     5ac:	8f 2e       	mov	r8, r31
     5ae:	f1 e0       	ldi	r31, 0x01	; 1
     5b0:	9f 2e       	mov	r9, r31
     5b2:	f0 2d       	mov	r31, r0
		joystick_msg.data[1] = joystick.y_pos;
     5b4:	0f 2e       	mov	r0, r31
     5b6:	fd e1       	ldi	r31, 0x1D	; 29
     5b8:	6f 2e       	mov	r6, r31
     5ba:	f1 e0       	ldi	r31, 0x01	; 1
     5bc:	7f 2e       	mov	r7, r31
     5be:	f0 2d       	mov	r31, r0
		can_message_send(&joystick_msg);
		
		if (TOUCH_JOY_MODE == 1){
			touch_msg.data[0] = ADC_read(2);
     5c0:	0f 2e       	mov	r0, r31
     5c2:	f8 e0       	ldi	r31, 0x08	; 8
     5c4:	4f 2e       	mov	r4, r31
     5c6:	f1 e0       	ldi	r31, 0x01	; 1
     5c8:	5f 2e       	mov	r5, r31
     5ca:	f0 2d       	mov	r31, r0
		// Check for quit
		if ( (ADC_read(2) > 180 && TOUCH_JOY_MODE == 0) || (ADC_read(0) > 200 && TOUCH_JOY_MODE == 1) ) break;
		
		// Print Score
		oled_goto(4, 0);
		sprintf(score_print,"       %d",score);
     5cc:	0f 2e       	mov	r0, r31
     5ce:	ff e5       	ldi	r31, 0x5F	; 95
     5d0:	af 2e       	mov	r10, r31
     5d2:	f2 e0       	ldi	r31, 0x02	; 2
     5d4:	bf 2e       	mov	r11, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	0f 2e       	mov	r0, r31
     5da:	fe e3       	ldi	r31, 0x3E	; 62
     5dc:	ef 2e       	mov	r14, r31
     5de:	f2 e0       	ldi	r31, 0x02	; 2
     5e0:	ff 2e       	mov	r15, r31
     5e2:	f0 2d       	mov	r31, r0
     5e4:	03 c0       	rjmp	.+6      	; 0x5ec <play_game+0xe4>
		oled_print(score_print);
		
		// Add score
		if(score_sub++ > 700)
     5e6:	8f ef       	ldi	r24, 0xFF	; 255
     5e8:	c8 1a       	sub	r12, r24
     5ea:	d8 0a       	sbc	r13, r24
	oled_print("    Score: ");
	
	while(1)
	{
		//Joystick
		joystick =  get_position();
     5ec:	0e 94 be 04 	call	0x97c	; 0x97c <get_position>
		joystick_msg.data[0] = joystick.x_pos;
     5f0:	f4 01       	movw	r30, r8
     5f2:	60 83       	st	Z, r22
		joystick_msg.data[1] = joystick.y_pos;
     5f4:	f3 01       	movw	r30, r6
     5f6:	80 83       	st	Z, r24
		can_message_send(&joystick_msg);
     5f8:	8a e1       	ldi	r24, 0x1A	; 26
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	0e 94 a7 03 	call	0x74e	; 0x74e <can_message_send>
		
		if (TOUCH_JOY_MODE == 1){
     600:	80 91 24 01 	lds	r24, 0x0124
     604:	90 91 25 01 	lds	r25, 0x0125
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	51 f4       	brne	.+20     	; 0x620 <play_game+0x118>
			touch_msg.data[0] = ADC_read(2);
     60c:	82 e0       	ldi	r24, 0x02	; 2
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     614:	f2 01       	movw	r30, r4
     616:	80 83       	st	Z, r24
			can_message_send(&touch_msg);	
     618:	86 e0       	ldi	r24, 0x06	; 6
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	0e 94 a7 03 	call	0x74e	; 0x74e <can_message_send>
		}
		
		// Handle potential goals
		if (can_get_message(&message) == 1)
     620:	ce 01       	movw	r24, r28
     622:	07 96       	adiw	r24, 0x07	; 7
     624:	0e 94 ff 03 	call	0x7fe	; 0x7fe <can_get_message>
     628:	01 97       	sbiw	r24, 0x01	; 1
     62a:	19 f4       	brne	.+6      	; 0x632 <play_game+0x12a>
		{
			if(message.id == 'g')	// Goal
     62c:	8f 81       	ldd	r24, Y+7	; 0x07
     62e:	87 36       	cpi	r24, 0x67	; 103
     630:	d1 f1       	breq	.+116    	; 0x6a6 <play_game+0x19e>
				break;
			}
		}
		
		// Check for shot button
		check_and_report_shot();
     632:	0e 94 dd 01 	call	0x3ba	; 0x3ba <check_and_report_shot>
		
		// Check for quit
		if ( (ADC_read(2) > 180 && TOUCH_JOY_MODE == 0) || (ADC_read(0) > 200 && TOUCH_JOY_MODE == 1) ) break;
     636:	82 e0       	ldi	r24, 0x02	; 2
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     63e:	85 3b       	cpi	r24, 0xB5	; 181
     640:	30 f0       	brcs	.+12     	; 0x64e <play_game+0x146>
     642:	80 91 24 01 	lds	r24, 0x0124
     646:	90 91 25 01 	lds	r25, 0x0125
     64a:	89 2b       	or	r24, r25
     64c:	61 f1       	breq	.+88     	; 0x6a6 <play_game+0x19e>
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     656:	89 3c       	cpi	r24, 0xC9	; 201
     658:	30 f0       	brcs	.+12     	; 0x666 <play_game+0x15e>
     65a:	80 91 24 01 	lds	r24, 0x0124
     65e:	90 91 25 01 	lds	r25, 0x0125
     662:	01 97       	sbiw	r24, 0x01	; 1
     664:	01 f1       	breq	.+64     	; 0x6a6 <play_game+0x19e>
		
		// Print Score
		oled_goto(4, 0);
     666:	60 e0       	ldi	r22, 0x00	; 0
     668:	84 e0       	ldi	r24, 0x04	; 4
     66a:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
		sprintf(score_print,"       %d",score);
     66e:	1f 93       	push	r17
     670:	0f 93       	push	r16
     672:	bf 92       	push	r11
     674:	af 92       	push	r10
     676:	ff 92       	push	r15
     678:	ef 92       	push	r14
     67a:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		oled_print(score_print);
     67e:	c7 01       	movw	r24, r14
     680:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
		
		// Add score
		if(score_sub++ > 700)
     684:	0f 90       	pop	r0
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	fd eb       	ldi	r31, 0xBD	; 189
     692:	cf 16       	cp	r12, r31
     694:	f2 e0       	ldi	r31, 0x02	; 2
     696:	df 06       	cpc	r13, r31
     698:	0c f4       	brge	.+2      	; 0x69c <play_game+0x194>
     69a:	a5 cf       	rjmp	.-182    	; 0x5e6 <play_game+0xde>
		{
			score_sub = 0;
			score++;
     69c:	0f 5f       	subi	r16, 0xFF	; 255
     69e:	1f 4f       	sbci	r17, 0xFF	; 255
		oled_print(score_print);
		
		// Add score
		if(score_sub++ > 700)
		{
			score_sub = 0;
     6a0:	c1 2c       	mov	r12, r1
     6a2:	d1 2c       	mov	r13, r1
     6a4:	a3 cf       	rjmp	.-186    	; 0x5ec <play_game+0xe4>
			score++;
		}
	}
	update_eeprom(score,highscore);
     6a6:	be 01       	movw	r22, r28
     6a8:	6f 5f       	subi	r22, 0xFF	; 255
     6aa:	7f 4f       	sbci	r23, 0xFF	; 255
     6ac:	c8 01       	movw	r24, r16
     6ae:	0e 94 43 02 	call	0x486	; 0x486 <update_eeprom>
	return;
}
     6b2:	60 96       	adiw	r28, 0x10	; 16
     6b4:	0f b6       	in	r0, 0x3f	; 63
     6b6:	f8 94       	cli
     6b8:	de bf       	out	0x3e, r29	; 62
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	cd bf       	out	0x3d, r28	; 61
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	df 90       	pop	r13
     6cc:	cf 90       	pop	r12
     6ce:	bf 90       	pop	r11
     6d0:	af 90       	pop	r10
     6d2:	9f 90       	pop	r9
     6d4:	8f 90       	pop	r8
     6d6:	7f 90       	pop	r7
     6d8:	6f 90       	pop	r6
     6da:	5f 90       	pop	r5
     6dc:	4f 90       	pop	r4
     6de:	08 95       	ret

000006e0 <reset_eeprom>:
	}
}

void reset_eeprom ( void )
{
	eeprom_write_word((uint16_t*)0, 0 );	//	Reset the highscores
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
	eeprom_write_word((uint16_t*)2, 0 );
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	70 e0       	ldi	r23, 0x00	; 0
     6f0:	82 e0       	ldi	r24, 0x02	; 2
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
	eeprom_write_word((uint16_t*)4, 0 );
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	84 e0       	ldi	r24, 0x04	; 4
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 a6 09 	call	0x134c	; 0x134c <__eewr_word_m162>
     704:	08 95       	ret

00000706 <main>:


int main(void)
{

	USART_init(MYUBRR);
     706:	8f e1       	ldi	r24, 0x1F	; 31
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	0e 94 ff 06 	call	0xdfe	; 0xdfe <USART_init>
	// Activate external memory
	MCUCR |= (1 << SRE);
     70e:	85 b7       	in	r24, 0x35	; 53
     710:	80 68       	ori	r24, 0x80	; 128
     712:	85 bf       	out	0x35, r24	; 53
		
	// Initialize	
	joy_init();
     714:	0e 94 bb 04 	call	0x976	; 0x976 <joy_init>
	oled_init();
     718:	0e 94 9d 06 	call	0xd3a	; 0xd3a <oled_init>
	can_init();
     71c:	0e 94 95 03 	call	0x72a	; 0x72a <can_init>
	
	
	
	// Starts the FSM
	menu_init();
     720:	0e 94 44 06 	call	0xc88	; 0xc88 <menu_init>
	
}
     724:	80 e0       	ldi	r24, 0x00	; 0
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	08 95       	ret

0000072a <can_init>:
#include "MCP2515.h"

void can_init()
{
	
	mcp2515_init();
     72a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <mcp2515_init>
	
	mcp2515_bit_modify(MCP_RXF0SIDH, 0xff , 0x00);
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	6f ef       	ldi	r22, 0xFF	; 255
     732:	80 e0       	ldi	r24, 0x00	; 0
     734:	0e 94 4a 04 	call	0x894	; 0x894 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXF0SIDL, 0xE0 , 0x00);
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	60 ee       	ldi	r22, 0xE0	; 224
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	0e 94 4a 04 	call	0x894	; 0x894 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_CANCTRL, 0xE0 , MODE_NORMAL);
     742:	40 e0       	ldi	r20, 0x00	; 0
     744:	60 ee       	ldi	r22, 0xE0	; 224
     746:	8f e0       	ldi	r24, 0x0F	; 15
     748:	0e 94 4a 04 	call	0x894	; 0x894 <mcp2515_bit_modify>
     74c:	08 95       	ret

0000074e <can_message_send>:
	
}


void can_message_send(can_message_t *message)
{
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	ec 01       	movw	r28, r24
	char i;
	
	// ID
	mcp2515_write(MCP_TXB0CTRL + 1,message->id);
     756:	68 81       	ld	r22, Y
     758:	81 e3       	ldi	r24, 0x31	; 49
     75a:	0e 94 2b 04 	call	0x856	; 0x856 <mcp2515_write>
	mcp2515_write(0x32,0x00);
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	82 e3       	ldi	r24, 0x32	; 50
     762:	0e 94 2b 04 	call	0x856	; 0x856 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
     766:	69 81       	ldd	r22, Y+1	; 0x01
     768:	85 e3       	ldi	r24, 0x35	; 53
     76a:	0e 94 2b 04 	call	0x856	; 0x856 <mcp2515_write>
	
	// Data
	for (i = 0; i< message->length; i++){
     76e:	89 81       	ldd	r24, Y+1	; 0x01
     770:	88 23       	and	r24, r24
     772:	69 f0       	breq	.+26     	; 0x78e <can_message_send+0x40>
     774:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
     776:	fe 01       	movw	r30, r28
     778:	e1 0f       	add	r30, r17
     77a:	f1 1d       	adc	r31, r1
     77c:	62 81       	ldd	r22, Z+2	; 0x02
     77e:	86 e3       	ldi	r24, 0x36	; 54
     780:	81 0f       	add	r24, r17
     782:	0e 94 2b 04 	call	0x856	; 0x856 <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
	
	// Data
	for (i = 0; i< message->length; i++){
     786:	1f 5f       	subi	r17, 0xFF	; 255
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	18 17       	cp	r17, r24
     78c:	a0 f3       	brcs	.-24     	; 0x776 <can_message_send+0x28>
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
	}
	
	mcp2515_request_to_send(MCP_RTS_TX0);
     78e:	81 e8       	ldi	r24, 0x81	; 129
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	0e 94 3f 04 	call	0x87e	; 0x87e <mcp2515_request_to_send>
}
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	1f 91       	pop	r17
     79c:	08 95       	ret

0000079e <can_message_receive>:

void can_message_receive(can_message_t* message, int buffer)
{
     79e:	ef 92       	push	r14
     7a0:	ff 92       	push	r15
     7a2:	0f 93       	push	r16
     7a4:	1f 93       	push	r17
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	8c 01       	movw	r16, r24
     7ac:	e6 2e       	mov	r14, r22
	char i;
	
	// ID
	message->id = mcp2515_read(MCP_RXB0CTRL+buffer + 1);
     7ae:	81 e6       	ldi	r24, 0x61	; 97
     7b0:	86 0f       	add	r24, r22
     7b2:	0e 94 19 04 	call	0x832	; 0x832 <mcp2515_read>
     7b6:	f8 01       	movw	r30, r16
     7b8:	80 83       	st	Z, r24
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
     7ba:	85 e6       	ldi	r24, 0x65	; 101
     7bc:	8e 0d       	add	r24, r14
     7be:	0e 94 19 04 	call	0x832	; 0x832 <mcp2515_read>
     7c2:	f8 01       	movw	r30, r16
     7c4:	81 83       	std	Z+1, r24	; 0x01
	
	// Data
	for(i=0;i<message->length;i++)
     7c6:	88 23       	and	r24, r24
     7c8:	99 f0       	breq	.+38     	; 0x7f0 <can_message_receive+0x52>
     7ca:	c0 e0       	ldi	r28, 0x00	; 0
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
     7ce:	f6 e6       	ldi	r31, 0x66	; 102
     7d0:	ef 0e       	add	r14, r31
     7d2:	fc 2e       	mov	r15, r28
     7d4:	8c 2f       	mov	r24, r28
     7d6:	8e 0d       	add	r24, r14
     7d8:	0e 94 19 04 	call	0x832	; 0x832 <mcp2515_read>
     7dc:	f8 01       	movw	r30, r16
     7de:	ec 0f       	add	r30, r28
     7e0:	f1 1d       	adc	r31, r1
     7e2:	82 83       	std	Z+2, r24	; 0x02
     7e4:	f3 94       	inc	r15
     7e6:	21 96       	adiw	r28, 0x01	; 1
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL+buffer + 5);
	
	// Data
	for(i=0;i<message->length;i++)
     7e8:	f8 01       	movw	r30, r16
     7ea:	81 81       	ldd	r24, Z+1	; 0x01
     7ec:	f8 16       	cp	r15, r24
     7ee:	88 f3       	brcs	.-30     	; 0x7d2 <can_message_receive+0x34>
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL+buffer + 6 + i );
	}
	
}
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	0f 91       	pop	r16
     7f8:	ff 90       	pop	r15
     7fa:	ef 90       	pop	r14
     7fc:	08 95       	ret

000007fe <can_get_message>:

int can_get_message(can_message_t* message)
{
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	ec 01       	movw	r28, r24
	
	if ((mcp2515_read(MCP_CANINTF) & 0x01) == 0x01)
     804:	8c e2       	ldi	r24, 0x2C	; 44
     806:	0e 94 19 04 	call	0x832	; 0x832 <mcp2515_read>
     80a:	80 ff       	sbrs	r24, 0
     80c:	0d c0       	rjmp	.+26     	; 0x828 <can_get_message+0x2a>
	{
		can_message_receive(message,0);
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	ce 01       	movw	r24, r28
     814:	0e 94 cf 03 	call	0x79e	; 0x79e <can_message_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     818:	40 e0       	ldi	r20, 0x00	; 0
     81a:	61 e0       	ldi	r22, 0x01	; 1
     81c:	8c e2       	ldi	r24, 0x2C	; 44
     81e:	0e 94 4a 04 	call	0x894	; 0x894 <mcp2515_bit_modify>
		return 1;
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	02 c0       	rjmp	.+4      	; 0x82c <can_get_message+0x2e>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
		return 1;
	}*/
	else
	{
		return 0;
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	08 95       	ret

00000832 <mcp2515_read>:
     832:	cf 93       	push	r28
     834:	c8 2f       	mov	r28, r24
     836:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     83a:	83 e0       	ldi	r24, 0x03	; 3
     83c:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     840:	8c 2f       	mov	r24, r28
     842:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     846:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <spi_receive>
     84a:	c8 2f       	mov	r28, r24
     84c:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     850:	8c 2f       	mov	r24, r28
     852:	cf 91       	pop	r28
     854:	08 95       	ret

00000856 <mcp2515_write>:
     856:	cf 93       	push	r28
     858:	df 93       	push	r29
     85a:	d8 2f       	mov	r29, r24
     85c:	c6 2f       	mov	r28, r22
     85e:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     862:	82 e0       	ldi	r24, 0x02	; 2
     864:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     868:	8d 2f       	mov	r24, r29
     86a:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     86e:	8c 2f       	mov	r24, r28
     870:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     874:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	08 95       	ret

0000087e <mcp2515_request_to_send>:
     87e:	cf 93       	push	r28
     880:	c8 2f       	mov	r28, r24
     882:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     886:	8c 2f       	mov	r24, r28
     888:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     88c:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     890:	cf 91       	pop	r28
     892:	08 95       	ret

00000894 <mcp2515_bit_modify>:
     894:	1f 93       	push	r17
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	18 2f       	mov	r17, r24
     89c:	d6 2f       	mov	r29, r22
     89e:	c4 2f       	mov	r28, r20
     8a0:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     8a4:	85 e0       	ldi	r24, 0x05	; 5
     8a6:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8aa:	81 2f       	mov	r24, r17
     8ac:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8b0:	8d 2f       	mov	r24, r29
     8b2:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8b6:	8c 2f       	mov	r24, r28
     8b8:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8bc:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     8c0:	df 91       	pop	r29
     8c2:	cf 91       	pop	r28
     8c4:	1f 91       	pop	r17
     8c6:	08 95       	ret

000008c8 <mcp2515_reset>:
     8c8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     8cc:	80 ec       	ldi	r24, 0xC0	; 192
     8ce:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8d2:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     8d6:	08 95       	ret

000008d8 <mcp2515_read_status>:
     8d8:	cf 93       	push	r28
     8da:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <spi_select>
     8de:	83 e0       	ldi	r24, 0x03	; 3
     8e0:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8e4:	8e e0       	ldi	r24, 0x0E	; 14
     8e6:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     8ea:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <spi_receive>
     8ee:	c8 2f       	mov	r28, r24
     8f0:	0e 94 e6 06 	call	0xdcc	; 0xdcc <spi_deselect>
     8f4:	8c 2f       	mov	r24, r28
     8f6:	cf 91       	pop	r28
     8f8:	08 95       	ret

000008fa <mcp2515_init>:
     8fa:	0e 94 f1 06 	call	0xde2	; 0xde2 <spi_init>
     8fe:	0e 94 64 04 	call	0x8c8	; 0x8c8 <mcp2515_reset>
     902:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <mcp2515_read_status>
     906:	80 7e       	andi	r24, 0xE0	; 224
     908:	80 38       	cpi	r24, 0x80	; 128
     90a:	21 f0       	breq	.+8      	; 0x914 <mcp2515_init+0x1a>
     90c:	89 e6       	ldi	r24, 0x69	; 105
     90e:	92 e0       	ldi	r25, 0x02	; 2
     910:	0e 94 7f 07 	call	0xefe	; 0xefe <puts>
     914:	08 95       	ret

00000916 <joy_calibrate>:
char x_ref = 0;
char y_ref = 0;



void joy_calibrate(){
     916:	ef 92       	push	r14
     918:	ff 92       	push	r15
     91a:	0f 93       	push	r16
     91c:	1f 93       	push	r17
     91e:	cf 93       	push	r28
     920:	df 93       	push	r29
     922:	ca e0       	ldi	r28, 0x0A	; 10
     924:	d0 e0       	ldi	r29, 0x00	; 0
	int sum_x=0;
	int sum_y=0;
     926:	00 e0       	ldi	r16, 0x00	; 0
     928:	10 e0       	ldi	r17, 0x00	; 0
char y_ref = 0;



void joy_calibrate(){
	int sum_x=0;
     92a:	e1 2c       	mov	r14, r1
     92c:	f1 2c       	mov	r15, r1
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
		sum_x += ADC_read(1);
     92e:	81 e0       	ldi	r24, 0x01	; 1
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     936:	e8 0e       	add	r14, r24
     938:	f1 1c       	adc	r15, r1
		sum_y += ADC_read(0);
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     942:	08 0f       	add	r16, r24
     944:	11 1d       	adc	r17, r1
     946:	21 97       	sbiw	r28, 0x01	; 1

void joy_calibrate(){
	int sum_x=0;
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
     948:	20 97       	sbiw	r28, 0x00	; 0
     94a:	89 f7       	brne	.-30     	; 0x92e <joy_calibrate+0x18>
		sum_x += ADC_read(1);
		sum_y += ADC_read(0);
	}
	x_ref = sum_x/10;
     94c:	2a e0       	ldi	r18, 0x0A	; 10
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	c7 01       	movw	r24, r14
     952:	b9 01       	movw	r22, r18
     954:	0e 94 0c 07 	call	0xe18	; 0xe18 <__divmodhi4>
     958:	60 93 8d 02 	sts	0x028D, r22
	y_ref = sum_y/10;
     95c:	c8 01       	movw	r24, r16
     95e:	b9 01       	movw	r22, r18
     960:	0e 94 0c 07 	call	0xe18	; 0xe18 <__divmodhi4>
     964:	60 93 8c 02 	sts	0x028C, r22
	
}
     968:	df 91       	pop	r29
     96a:	cf 91       	pop	r28
     96c:	1f 91       	pop	r17
     96e:	0f 91       	pop	r16
     970:	ff 90       	pop	r15
     972:	ef 90       	pop	r14
     974:	08 95       	ret

00000976 <joy_init>:

void joy_init(){
	joy_calibrate();
     976:	0e 94 8b 04 	call	0x916	; 0x916 <joy_calibrate>
     97a:	08 95       	ret

0000097c <get_position>:
	
}

joy_position_t get_position(){
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
	joy_position_t position;
	position.x_pos = (ADC_read(1) - x_ref)*100/128;
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	20 91 8d 02 	lds	r18, 0x028D
     98e:	82 1b       	sub	r24, r18
     990:	91 09       	sbc	r25, r1
     992:	44 e6       	ldi	r20, 0x64	; 100
     994:	48 9f       	mul	r20, r24
     996:	90 01       	movw	r18, r0
     998:	49 9f       	mul	r20, r25
     99a:	30 0d       	add	r19, r0
     99c:	11 24       	eor	r1, r1
     99e:	33 23       	and	r19, r19
     9a0:	14 f4       	brge	.+4      	; 0x9a6 <get_position+0x2a>
     9a2:	21 58       	subi	r18, 0x81	; 129
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	e9 01       	movw	r28, r18
     9a8:	cc 0f       	add	r28, r28
     9aa:	cd 2f       	mov	r28, r29
     9ac:	cc 1f       	adc	r28, r28
     9ae:	dd 0b       	sbc	r29, r29
	position.y_pos = (ADC_read(0) - y_ref)*100/128;
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	20 91 8c 02 	lds	r18, 0x028C
     9be:	82 1b       	sub	r24, r18
     9c0:	91 09       	sbc	r25, r1
     9c2:	44 e6       	ldi	r20, 0x64	; 100
     9c4:	48 9f       	mul	r20, r24
     9c6:	90 01       	movw	r18, r0
     9c8:	49 9f       	mul	r20, r25
     9ca:	30 0d       	add	r19, r0
     9cc:	11 24       	eor	r1, r1
     9ce:	33 23       	and	r19, r19
     9d0:	14 f4       	brge	.+4      	; 0x9d6 <get_position+0x5a>
     9d2:	21 58       	subi	r18, 0x81	; 129
     9d4:	3f 4f       	sbci	r19, 0xFF	; 255
	return position;
     9d6:	be 01       	movw	r22, r28
     9d8:	c9 01       	movw	r24, r18
     9da:	88 0f       	add	r24, r24
     9dc:	89 2f       	mov	r24, r25
     9de:	88 1f       	adc	r24, r24
     9e0:	99 0b       	sbc	r25, r25
}
     9e2:	df 91       	pop	r29
     9e4:	cf 91       	pop	r28
     9e6:	08 95       	ret

000009e8 <get_direction>:


direction get_direction(){
	
	joy_position_t position = get_position();
     9e8:	0e 94 be 04 	call	0x97c	; 0x97c <get_position>
	
	if (position.x_pos > 70)
     9ec:	67 34       	cpi	r22, 0x47	; 71
     9ee:	71 05       	cpc	r23, r1
     9f0:	64 f4       	brge	.+24     	; 0xa0a <get_direction+0x22>
		{

			return RIGHT;
		}
	else if (position.x_pos < -70)
     9f2:	6a 3b       	cpi	r22, 0xBA	; 186
     9f4:	4f ef       	ldi	r20, 0xFF	; 255
     9f6:	74 07       	cpc	r23, r20
     9f8:	54 f0       	brlt	.+20     	; 0xa0e <get_direction+0x26>
		{

			return LEFT;
		}
	else if (position.y_pos > 70)
     9fa:	87 34       	cpi	r24, 0x47	; 71
     9fc:	91 05       	cpc	r25, r1
     9fe:	4c f4       	brge	.+18     	; 0xa12 <get_direction+0x2a>
		{

			return UP;
		}
	else if (position.y_pos < -70)
     a00:	8a 3b       	cpi	r24, 0xBA	; 186
     a02:	9f 4f       	sbci	r25, 0xFF	; 255
     a04:	44 f4       	brge	.+16     	; 0xa16 <get_direction+0x2e>
		{

			return DOWN;
     a06:	83 e0       	ldi	r24, 0x03	; 3
     a08:	08 95       	ret
	joy_position_t position = get_position();
	
	if (position.x_pos > 70)
		{

			return RIGHT;
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	08 95       	ret
		}
	else if (position.x_pos < -70)
		{

			return LEFT;
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	08 95       	ret
		}
	else if (position.y_pos > 70)
		{

			return UP;
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	08 95       	ret
			return DOWN;
		}
	else
		{

			return NEUTRAL;
     a16:	84 e0       	ldi	r24, 0x04	; 4
		}
	
}
     a18:	08 95       	ret

00000a1a <update_next>:
	*last_dir = *curr_dir;
}


void update_next(direction dir){
	if (dir == DOWN) {
     a1a:	83 30       	cpi	r24, 0x03	; 3
     a1c:	41 f5       	brne	.+80     	; 0xa6e <update_next+0x54>
		if (next+1 <= current->number_children){
     a1e:	80 91 90 02 	lds	r24, 0x0290
     a22:	90 91 91 02 	lds	r25, 0x0291
     a26:	ac 01       	movw	r20, r24
     a28:	4f 5f       	subi	r20, 0xFF	; 255
     a2a:	5f 4f       	sbci	r21, 0xFF	; 255
     a2c:	e0 91 8e 02 	lds	r30, 0x028E
     a30:	f0 91 8f 02 	lds	r31, 0x028F
     a34:	27 85       	ldd	r18, Z+15	; 0x0f
     a36:	30 89       	ldd	r19, Z+16	; 0x10
     a38:	24 17       	cp	r18, r20
     a3a:	35 07       	cpc	r19, r21
     a3c:	b4 f1       	brlt	.+108    	; 0xaaa <update_next+0x90>
			oled_goto(next,0);
     a3e:	60 e0       	ldi	r22, 0x00	; 0
     a40:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
			oled_print(" ");
     a44:	8d e5       	ldi	r24, 0x5D	; 93
     a46:	92 e0       	ldi	r25, 0x02	; 2
     a48:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
			next++;
     a4c:	80 91 90 02 	lds	r24, 0x0290
     a50:	90 91 91 02 	lds	r25, 0x0291
     a54:	01 96       	adiw	r24, 0x01	; 1
     a56:	90 93 91 02 	sts	0x0291, r25
     a5a:	80 93 90 02 	sts	0x0290, r24
			oled_goto(next,0);
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
			oled_print("-");
     a64:	88 e8       	ldi	r24, 0x88	; 136
     a66:	92 e0       	ldi	r25, 0x02	; 2
     a68:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
     a6c:	08 95       	ret
		}
		
	}
	else{
		if (next > 1){
     a6e:	80 91 90 02 	lds	r24, 0x0290
     a72:	90 91 91 02 	lds	r25, 0x0291
     a76:	82 30       	cpi	r24, 0x02	; 2
     a78:	91 05       	cpc	r25, r1
     a7a:	bc f0       	brlt	.+46     	; 0xaaa <update_next+0x90>
			oled_goto(next,0);
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
			oled_print(" ");
     a82:	8d e5       	ldi	r24, 0x5D	; 93
     a84:	92 e0       	ldi	r25, 0x02	; 2
     a86:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
			next--;
     a8a:	80 91 90 02 	lds	r24, 0x0290
     a8e:	90 91 91 02 	lds	r25, 0x0291
     a92:	01 97       	sbiw	r24, 0x01	; 1
     a94:	90 93 91 02 	sts	0x0291, r25
     a98:	80 93 90 02 	sts	0x0290, r24
			oled_goto(next,0);
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
			oled_print("-");
     aa2:	88 e8       	ldi	r24, 0x88	; 136
     aa4:	92 e0       	ldi	r25, 0x02	; 2
     aa6:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
     aaa:	08 95       	ret

00000aac <menu_print>:
		}
	}
}

void menu_print(menu_t* object){
     aac:	ef 92       	push	r14
     aae:	ff 92       	push	r15
     ab0:	0f 93       	push	r16
     ab2:	1f 93       	push	r17
     ab4:	cf 93       	push	r28
     ab6:	df 93       	push	r29
     ab8:	7c 01       	movw	r14, r24
	next = 1;
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	90 93 91 02 	sts	0x0291, r25
     ac2:	80 93 90 02 	sts	0x0290, r24
	oled_clear_all();
     ac6:	0e 94 d7 06 	call	0xdae	; 0xdae <oled_clear_all>
	oled_goto(0,0);
     aca:	60 e0       	ldi	r22, 0x00	; 0
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
	oled_print(object->name);
     ad2:	c7 01       	movw	r24, r14
     ad4:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	oled_goto(next,0);
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	80 91 90 02 	lds	r24, 0x0290
     ade:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
	oled_print("-");
     ae2:	88 e8       	ldi	r24, 0x88	; 136
     ae4:	92 e0       	ldi	r25, 0x02	; 2
     ae6:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     aea:	f7 01       	movw	r30, r14
     aec:	87 85       	ldd	r24, Z+15	; 0x0f
     aee:	90 89       	ldd	r25, Z+16	; 0x10
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	02 97       	sbiw	r24, 0x02	; 2
     af4:	c4 f0       	brlt	.+48     	; 0xb26 <menu_print+0x7a>
     af6:	87 01       	movw	r16, r14
     af8:	0b 5e       	subi	r16, 0xEB	; 235
     afa:	1f 4f       	sbci	r17, 0xFF	; 255
     afc:	c1 e0       	ldi	r28, 0x01	; 1
     afe:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i,8);
     b00:	68 e0       	ldi	r22, 0x08	; 8
     b02:	8c 2f       	mov	r24, r28
     b04:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
		oled_print((object->children[i-1])->name);
     b08:	f8 01       	movw	r30, r16
     b0a:	81 91       	ld	r24, Z+
     b0c:	91 91       	ld	r25, Z+
     b0e:	8f 01       	movw	r16, r30
     b10:	0e 94 8a 06 	call	0xd14	; 0xd14 <oled_print>
	oled_print(object->name);
	oled_goto(next,0);
	oled_print("-");
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     b14:	21 96       	adiw	r28, 0x01	; 1
     b16:	f7 01       	movw	r30, r14
     b18:	27 85       	ldd	r18, Z+15	; 0x0f
     b1a:	30 89       	ldd	r19, Z+16	; 0x10
     b1c:	2f 5f       	subi	r18, 0xFF	; 255
     b1e:	3f 4f       	sbci	r19, 0xFF	; 255
     b20:	c2 17       	cp	r28, r18
     b22:	d3 07       	cpc	r29, r19
     b24:	6c f3       	brlt	.-38     	; 0xb00 <menu_print+0x54>
	{
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	0f 91       	pop	r16
     b2e:	ff 90       	pop	r15
     b30:	ef 90       	pop	r14
     b32:	08 95       	ret

00000b34 <menu_handler>:
}



void menu_handler(direction* curr_dir, direction* last_dir)
{
     b34:	0f 93       	push	r16
     b36:	1f 93       	push	r17
     b38:	cf 93       	push	r28
     b3a:	df 93       	push	r29
     b3c:	8c 01       	movw	r16, r24
     b3e:	eb 01       	movw	r28, r22
	*curr_dir = get_direction();
     b40:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <get_direction>
     b44:	f8 01       	movw	r30, r16
     b46:	80 83       	st	Z, r24
	if (*curr_dir != *last_dir)
     b48:	98 81       	ld	r25, Y
     b4a:	89 17       	cp	r24, r25
     b4c:	09 f4       	brne	.+2      	; 0xb50 <menu_handler+0x1c>
     b4e:	7f c0       	rjmp	.+254    	; 0xc4e <menu_handler+0x11a>
	{
		switch (*curr_dir){
     b50:	81 30       	cpi	r24, 0x01	; 1
     b52:	49 f0       	breq	.+18     	; 0xb66 <menu_handler+0x32>
     b54:	08 f4       	brcc	.+2      	; 0xb58 <menu_handler+0x24>
     b56:	65 c0       	rjmp	.+202    	; 0xc22 <menu_handler+0xee>
     b58:	82 30       	cpi	r24, 0x02	; 2
     b5a:	09 f4       	brne	.+2      	; 0xb5e <menu_handler+0x2a>
     b5c:	71 c0       	rjmp	.+226    	; 0xc40 <menu_handler+0x10c>
     b5e:	83 30       	cpi	r24, 0x03	; 3
     b60:	09 f4       	brne	.+2      	; 0xb64 <menu_handler+0x30>
     b62:	72 c0       	rjmp	.+228    	; 0xc48 <menu_handler+0x114>
     b64:	74 c0       	rjmp	.+232    	; 0xc4e <menu_handler+0x11a>
			case RIGHT:
			
			
				switch(current->children[next-1]->name[0]){
     b66:	80 91 8e 02 	lds	r24, 0x028E
     b6a:	90 91 8f 02 	lds	r25, 0x028F
     b6e:	e0 91 90 02 	lds	r30, 0x0290
     b72:	f0 91 91 02 	lds	r31, 0x0291
     b76:	31 97       	sbiw	r30, 0x01	; 1
     b78:	ee 0f       	add	r30, r30
     b7a:	ff 1f       	adc	r31, r31
     b7c:	e8 0f       	add	r30, r24
     b7e:	f9 1f       	adc	r31, r25
     b80:	05 88       	ldd	r0, Z+21	; 0x15
     b82:	f6 89       	ldd	r31, Z+22	; 0x16
     b84:	e0 2d       	mov	r30, r0
     b86:	80 81       	ld	r24, Z
     b88:	80 35       	cpi	r24, 0x50	; 80
     b8a:	59 f0       	breq	.+22     	; 0xba2 <menu_handler+0x6e>
     b8c:	28 f4       	brcc	.+10     	; 0xb98 <menu_handler+0x64>
     b8e:	83 34       	cpi	r24, 0x43	; 67
     b90:	c9 f1       	breq	.+114    	; 0xc04 <menu_handler+0xd0>
     b92:	88 34       	cpi	r24, 0x48	; 72
     b94:	c9 f0       	breq	.+50     	; 0xbc8 <menu_handler+0x94>
     b96:	5b c0       	rjmp	.+182    	; 0xc4e <menu_handler+0x11a>
     b98:	82 35       	cpi	r24, 0x52	; 82
     b9a:	29 f1       	breq	.+74     	; 0xbe6 <menu_handler+0xb2>
     b9c:	83 35       	cpi	r24, 0x53	; 83
     b9e:	d9 f0       	breq	.+54     	; 0xbd6 <menu_handler+0xa2>
     ba0:	56 c0       	rjmp	.+172    	; 0xc4e <menu_handler+0x11a>
					
					case 'P':
						current = current->children[next-1];
     ba2:	f0 93 8f 02 	sts	0x028F, r31
     ba6:	e0 93 8e 02 	sts	0x028E, r30
						play_game();
     baa:	0e 94 84 02 	call	0x508	; 0x508 <play_game>
						// Handle highscore
						current = current->parent;
     bae:	e0 91 8e 02 	lds	r30, 0x028E
     bb2:	f0 91 8f 02 	lds	r31, 0x028F
     bb6:	83 89       	ldd	r24, Z+19	; 0x13
     bb8:	94 89       	ldd	r25, Z+20	; 0x14
     bba:	90 93 8f 02 	sts	0x028F, r25
     bbe:	80 93 8e 02 	sts	0x028E, r24
						menu_print(current);
     bc2:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
						
						break;
     bc6:	43 c0       	rjmp	.+134    	; 0xc4e <menu_handler+0x11a>
					case 'H':
						current = current->children[next-1];
     bc8:	f0 93 8f 02 	sts	0x028F, r31
     bcc:	e0 93 8e 02 	sts	0x028E, r30
						print_highscore();
     bd0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <print_highscore>
						break;
     bd4:	3c c0       	rjmp	.+120    	; 0xc4e <menu_handler+0x11a>
					case 'S':
						current = current->children[next-1];
     bd6:	f0 93 8f 02 	sts	0x028F, r31
     bda:	e0 93 8e 02 	sts	0x028E, r30
						menu_print(current);
     bde:	cf 01       	movw	r24, r30
     be0:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
						break;
     be4:	34 c0       	rjmp	.+104    	; 0xc4e <menu_handler+0x11a>
					case 'R' :
						reset_eeprom();
     be6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <reset_eeprom>
						current = current->parent;
     bea:	e0 91 8e 02 	lds	r30, 0x028E
     bee:	f0 91 8f 02 	lds	r31, 0x028F
     bf2:	83 89       	ldd	r24, Z+19	; 0x13
     bf4:	94 89       	ldd	r25, Z+20	; 0x14
     bf6:	90 93 8f 02 	sts	0x028F, r25
     bfa:	80 93 8e 02 	sts	0x028E, r24
						menu_print(current);
     bfe:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
						break;
     c02:	25 c0       	rjmp	.+74     	; 0xc4e <menu_handler+0x11a>
					case 'C' :
						joy_calibrate();
     c04:	0e 94 8b 04 	call	0x916	; 0x916 <joy_calibrate>
						current = current->parent;
     c08:	e0 91 8e 02 	lds	r30, 0x028E
     c0c:	f0 91 8f 02 	lds	r31, 0x028F
     c10:	83 89       	ldd	r24, Z+19	; 0x13
     c12:	94 89       	ldd	r25, Z+20	; 0x14
     c14:	90 93 8f 02 	sts	0x028F, r25
     c18:	80 93 8e 02 	sts	0x028E, r24
						menu_print(current);
     c1c:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
					break;
     c20:	16 c0       	rjmp	.+44     	; 0xc4e <menu_handler+0x11a>
				}
			
			
			break;
			case LEFT:
			if (current->parent != NULL){
     c22:	e0 91 8e 02 	lds	r30, 0x028E
     c26:	f0 91 8f 02 	lds	r31, 0x028F
     c2a:	83 89       	ldd	r24, Z+19	; 0x13
     c2c:	94 89       	ldd	r25, Z+20	; 0x14
     c2e:	00 97       	sbiw	r24, 0x00	; 0
     c30:	71 f0       	breq	.+28     	; 0xc4e <menu_handler+0x11a>
				current = current->parent;
     c32:	90 93 8f 02 	sts	0x028F, r25
     c36:	80 93 8e 02 	sts	0x028E, r24
				menu_print(current);
     c3a:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
     c3e:	07 c0       	rjmp	.+14     	; 0xc4e <menu_handler+0x11a>
			}
			break;
			case UP:
			
			update_next(*curr_dir);
     c40:	82 e0       	ldi	r24, 0x02	; 2
     c42:	0e 94 0d 05 	call	0xa1a	; 0xa1a <update_next>
			break;
     c46:	03 c0       	rjmp	.+6      	; 0xc4e <menu_handler+0x11a>
			case DOWN:
			
			update_next(*curr_dir);
     c48:	83 e0       	ldi	r24, 0x03	; 3
     c4a:	0e 94 0d 05 	call	0xa1a	; 0xa1a <update_next>
			break;
			default:
			break;
		}
	}
	*last_dir = *curr_dir;
     c4e:	f8 01       	movw	r30, r16
     c50:	80 81       	ld	r24, Z
     c52:	88 83       	st	Y, r24
}
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	08 95       	ret

00000c5e <menu_fsm>:
	menu_fsm();
	
}


void menu_fsm(){
     c5e:	cf 93       	push	r28
     c60:	df 93       	push	r29
     c62:	00 d0       	rcall	.+0      	; 0xc64 <menu_fsm+0x6>
     c64:	cd b7       	in	r28, 0x3d	; 61
     c66:	de b7       	in	r29, 0x3e	; 62
	direction curr_dir;
	direction last_dir = NEUTRAL;
     c68:	84 e0       	ldi	r24, 0x04	; 4
     c6a:	8a 83       	std	Y+2, r24	; 0x02
	
	while(1)
	{
		// Menu
		menu_handler(&curr_dir, &last_dir);
     c6c:	be 01       	movw	r22, r28
     c6e:	6e 5f       	subi	r22, 0xFE	; 254
     c70:	7f 4f       	sbci	r23, 0xFF	; 255
     c72:	ce 01       	movw	r24, r28
     c74:	01 96       	adiw	r24, 0x01	; 1
     c76:	0e 94 9a 05 	call	0xb34	; 0xb34 <menu_handler>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c7a:	8f ef       	ldi	r24, 0xFF	; 255
     c7c:	9f e2       	ldi	r25, 0x2F	; 47
     c7e:	01 97       	sbiw	r24, 0x01	; 1
     c80:	f1 f7       	brne	.-4      	; 0xc7e <menu_fsm+0x20>
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <menu_fsm+0x26>
     c84:	00 00       	nop
     c86:	f2 cf       	rjmp	.-28     	; 0xc6c <menu_fsm+0xe>

00000c88 <menu_init>:
menu_t sub4 = {"Debug",0,NULL ,NULL,{}};
menu_t menu = {"Main Menu",4,NULL,NULL,{&sub1,&sub2,&sub3,&sub4}};

void menu_init(){

	sub3sub1.parent= &sub3;
     c88:	8c e6       	ldi	r24, 0x6C	; 108
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	90 93 0c 02 	sts	0x020C, r25
     c90:	80 93 0b 02 	sts	0x020B, r24
	sub3sub2.parent= &sub3;
     c94:	90 93 e9 01 	sts	0x01E9, r25
     c98:	80 93 e8 01 	sts	0x01E8, r24
	sub1.parent = &menu;	
     c9c:	86 e2       	ldi	r24, 0x26	; 38
     c9e:	91 e0       	ldi	r25, 0x01	; 1
     ca0:	90 93 c6 01 	sts	0x01C6, r25
     ca4:	80 93 c5 01 	sts	0x01C5, r24
	sub2.parent = &menu;
     ca8:	90 93 a3 01 	sts	0x01A3, r25
     cac:	80 93 a2 01 	sts	0x01A2, r24
	sub3.parent = &menu;
     cb0:	90 93 80 01 	sts	0x0180, r25
     cb4:	80 93 7f 01 	sts	0x017F, r24
	
	current = &menu;
     cb8:	90 93 8f 02 	sts	0x028F, r25
     cbc:	80 93 8e 02 	sts	0x028E, r24
	next = 1;
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	90 93 91 02 	sts	0x0291, r25
     cc8:	80 93 90 02 	sts	0x0290, r24
	
	menu_print(current);
     ccc:	86 e2       	ldi	r24, 0x26	; 38
     cce:	91 e0       	ldi	r25, 0x01	; 1
     cd0:	0e 94 56 05 	call	0xaac	; 0xaac <menu_print>
	menu_fsm();
     cd4:	0e 94 2f 06 	call	0xc5e	; 0xc5e <menu_fsm>

00000cd8 <oled_print_char>:
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	ec 01       	movw	r28, r24
     cde:	20 e0       	ldi	r18, 0x00	; 0
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	a0 e0       	ldi	r26, 0x00	; 0
     ce4:	b2 e1       	ldi	r27, 0x12	; 18
     ce6:	e8 81       	ld	r30, Y
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	b0 97       	sbiw	r30, 0x20	; 32
     cec:	ee 0f       	add	r30, r30
     cee:	ff 1f       	adc	r31, r31
     cf0:	ee 0f       	add	r30, r30
     cf2:	ff 1f       	adc	r31, r31
     cf4:	ee 0f       	add	r30, r30
     cf6:	ff 1f       	adc	r31, r31
     cf8:	e2 0f       	add	r30, r18
     cfa:	f3 1f       	adc	r31, r19
     cfc:	e0 59       	subi	r30, 0x90	; 144
     cfe:	ff 4f       	sbci	r31, 0xFF	; 255
     d00:	e4 91       	lpm	r30, Z
     d02:	ec 93       	st	X, r30
     d04:	2f 5f       	subi	r18, 0xFF	; 255
     d06:	3f 4f       	sbci	r19, 0xFF	; 255
     d08:	28 30       	cpi	r18, 0x08	; 8
     d0a:	31 05       	cpc	r19, r1
     d0c:	61 f7       	brne	.-40     	; 0xce6 <oled_print_char+0xe>
     d0e:	df 91       	pop	r29
     d10:	cf 91       	pop	r28
     d12:	08 95       	ret

00000d14 <oled_print>:
     d14:	cf 93       	push	r28
     d16:	df 93       	push	r29
     d18:	fc 01       	movw	r30, r24
     d1a:	20 81       	ld	r18, Z
     d1c:	22 23       	and	r18, r18
     d1e:	51 f0       	breq	.+20     	; 0xd34 <oled_print+0x20>
     d20:	ec 01       	movw	r28, r24
     d22:	21 96       	adiw	r28, 0x01	; 1
     d24:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <oled_print_char>
     d28:	ce 01       	movw	r24, r28
     d2a:	21 96       	adiw	r28, 0x01	; 1
     d2c:	fc 01       	movw	r30, r24
     d2e:	20 81       	ld	r18, Z
     d30:	21 11       	cpse	r18, r1
     d32:	f8 cf       	rjmp	.-16     	; 0xd24 <oled_print+0x10>
     d34:	df 91       	pop	r29
     d36:	cf 91       	pop	r28
     d38:	08 95       	ret

00000d3a <oled_init>:
     d3a:	e0 e0       	ldi	r30, 0x00	; 0
     d3c:	f0 e1       	ldi	r31, 0x10	; 16
     d3e:	8e ea       	ldi	r24, 0xAE	; 174
     d40:	80 83       	st	Z, r24
     d42:	81 ea       	ldi	r24, 0xA1	; 161
     d44:	80 83       	st	Z, r24
     d46:	8a ed       	ldi	r24, 0xDA	; 218
     d48:	80 83       	st	Z, r24
     d4a:	82 e1       	ldi	r24, 0x12	; 18
     d4c:	80 83       	st	Z, r24
     d4e:	88 ec       	ldi	r24, 0xC8	; 200
     d50:	80 83       	st	Z, r24
     d52:	88 ea       	ldi	r24, 0xA8	; 168
     d54:	80 83       	st	Z, r24
     d56:	8f e3       	ldi	r24, 0x3F	; 63
     d58:	80 83       	st	Z, r24
     d5a:	85 ed       	ldi	r24, 0xD5	; 213
     d5c:	80 83       	st	Z, r24
     d5e:	80 e8       	ldi	r24, 0x80	; 128
     d60:	80 83       	st	Z, r24
     d62:	81 e8       	ldi	r24, 0x81	; 129
     d64:	80 83       	st	Z, r24
     d66:	80 e5       	ldi	r24, 0x50	; 80
     d68:	80 83       	st	Z, r24
     d6a:	89 ed       	ldi	r24, 0xD9	; 217
     d6c:	80 83       	st	Z, r24
     d6e:	81 e2       	ldi	r24, 0x21	; 33
     d70:	80 83       	st	Z, r24
     d72:	80 e2       	ldi	r24, 0x20	; 32
     d74:	80 83       	st	Z, r24
     d76:	10 82       	st	Z, r1
     d78:	8b ed       	ldi	r24, 0xDB	; 219
     d7a:	80 83       	st	Z, r24
     d7c:	80 e3       	ldi	r24, 0x30	; 48
     d7e:	80 83       	st	Z, r24
     d80:	8d ea       	ldi	r24, 0xAD	; 173
     d82:	80 83       	st	Z, r24
     d84:	10 82       	st	Z, r1
     d86:	84 ea       	ldi	r24, 0xA4	; 164
     d88:	80 83       	st	Z, r24
     d8a:	86 ea       	ldi	r24, 0xA6	; 166
     d8c:	80 83       	st	Z, r24
     d8e:	8f ea       	ldi	r24, 0xAF	; 175
     d90:	80 83       	st	Z, r24
     d92:	08 95       	ret

00000d94 <oled_goto>:
     d94:	e0 e0       	ldi	r30, 0x00	; 0
     d96:	f0 e1       	ldi	r31, 0x10	; 16
     d98:	91 e2       	ldi	r25, 0x21	; 33
     d9a:	90 83       	st	Z, r25
     d9c:	60 83       	st	Z, r22
     d9e:	9f e7       	ldi	r25, 0x7F	; 127
     da0:	90 83       	st	Z, r25
     da2:	92 e2       	ldi	r25, 0x22	; 34
     da4:	90 83       	st	Z, r25
     da6:	80 83       	st	Z, r24
     da8:	87 e0       	ldi	r24, 0x07	; 7
     daa:	80 83       	st	Z, r24
     dac:	08 95       	ret

00000dae <oled_clear_all>:
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	0e 94 ca 06 	call	0xd94	; 0xd94 <oled_goto>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	94 e0       	ldi	r25, 0x04	; 4
     dba:	e0 e0       	ldi	r30, 0x00	; 0
     dbc:	f2 e1       	ldi	r31, 0x12	; 18
     dbe:	10 82       	st	Z, r1
     dc0:	01 97       	sbiw	r24, 0x01	; 1
     dc2:	00 97       	sbiw	r24, 0x00	; 0
     dc4:	e1 f7       	brne	.-8      	; 0xdbe <oled_clear_all+0x10>
     dc6:	08 95       	ret

00000dc8 <spi_select>:
     dc8:	c4 98       	cbi	0x18, 4	; 24
     dca:	08 95       	ret

00000dcc <spi_deselect>:
     dcc:	c4 9a       	sbi	0x18, 4	; 24
     dce:	08 95       	ret

00000dd0 <spi_transmit>:
     dd0:	8f b9       	out	0x0f, r24	; 15
     dd2:	77 9b       	sbis	0x0e, 7	; 14
     dd4:	fe cf       	rjmp	.-4      	; 0xdd2 <spi_transmit+0x2>
     dd6:	08 95       	ret

00000dd8 <spi_receive>:
     dd8:	80 e0       	ldi	r24, 0x00	; 0
     dda:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <spi_transmit>
     dde:	8f b1       	in	r24, 0x0f	; 15
     de0:	08 95       	ret

00000de2 <spi_init>:
     de2:	87 b3       	in	r24, 0x17	; 23
     de4:	80 6b       	ori	r24, 0xB0	; 176
     de6:	87 bb       	out	0x17, r24	; 23
     de8:	81 e5       	ldi	r24, 0x51	; 81
     dea:	8d b9       	out	0x0d, r24	; 13
     dec:	08 95       	ret

00000dee <USART_transmit>:
	fdevopen(USART_transmit,USART_receive);
}

void USART_transmit(unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)))
     dee:	5d 9b       	sbis	0x0b, 5	; 11
     df0:	fe cf       	rjmp	.-4      	; 0xdee <USART_transmit>
		;
	UDR0 = data;
     df2:	8c b9       	out	0x0c, r24	; 12
     df4:	08 95       	ret

00000df6 <USART_receive>:
	
}

unsigned char USART_receive (void){
	
	while( !(UCSR0A & (1<<RXC0)))
     df6:	5f 9b       	sbis	0x0b, 7	; 11
     df8:	fe cf       	rjmp	.-4      	; 0xdf6 <USART_receive>
		;
	return UDR0;
     dfa:	8c b1       	in	r24, 0x0c	; 12
	
     dfc:	08 95       	ret

00000dfe <USART_init>:
#include "USART_driver.h"

void USART_init(unsigned int ubrr){

	UBRR0H = (unsigned char)(ubrr>>8);
     dfe:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;	
     e00:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     e02:	88 e1       	ldi	r24, 0x18	; 24
     e04:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     e06:	8e e8       	ldi	r24, 0x8E	; 142
     e08:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_transmit,USART_receive);
     e0a:	6b ef       	ldi	r22, 0xFB	; 251
     e0c:	76 e0       	ldi	r23, 0x06	; 6
     e0e:	87 ef       	ldi	r24, 0xF7	; 247
     e10:	96 e0       	ldi	r25, 0x06	; 6
     e12:	0e 94 34 07 	call	0xe68	; 0xe68 <fdevopen>
     e16:	08 95       	ret

00000e18 <__divmodhi4>:
     e18:	97 fb       	bst	r25, 7
     e1a:	07 2e       	mov	r0, r23
     e1c:	16 f4       	brtc	.+4      	; 0xe22 <__divmodhi4+0xa>
     e1e:	00 94       	com	r0
     e20:	07 d0       	rcall	.+14     	; 0xe30 <__divmodhi4_neg1>
     e22:	77 fd       	sbrc	r23, 7
     e24:	09 d0       	rcall	.+18     	; 0xe38 <__divmodhi4_neg2>
     e26:	0e 94 20 07 	call	0xe40	; 0xe40 <__udivmodhi4>
     e2a:	07 fc       	sbrc	r0, 7
     e2c:	05 d0       	rcall	.+10     	; 0xe38 <__divmodhi4_neg2>
     e2e:	3e f4       	brtc	.+14     	; 0xe3e <__divmodhi4_exit>

00000e30 <__divmodhi4_neg1>:
     e30:	90 95       	com	r25
     e32:	81 95       	neg	r24
     e34:	9f 4f       	sbci	r25, 0xFF	; 255
     e36:	08 95       	ret

00000e38 <__divmodhi4_neg2>:
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255

00000e3e <__divmodhi4_exit>:
     e3e:	08 95       	ret

00000e40 <__udivmodhi4>:
     e40:	aa 1b       	sub	r26, r26
     e42:	bb 1b       	sub	r27, r27
     e44:	51 e1       	ldi	r21, 0x11	; 17
     e46:	07 c0       	rjmp	.+14     	; 0xe56 <__udivmodhi4_ep>

00000e48 <__udivmodhi4_loop>:
     e48:	aa 1f       	adc	r26, r26
     e4a:	bb 1f       	adc	r27, r27
     e4c:	a6 17       	cp	r26, r22
     e4e:	b7 07       	cpc	r27, r23
     e50:	10 f0       	brcs	.+4      	; 0xe56 <__udivmodhi4_ep>
     e52:	a6 1b       	sub	r26, r22
     e54:	b7 0b       	sbc	r27, r23

00000e56 <__udivmodhi4_ep>:
     e56:	88 1f       	adc	r24, r24
     e58:	99 1f       	adc	r25, r25
     e5a:	5a 95       	dec	r21
     e5c:	a9 f7       	brne	.-22     	; 0xe48 <__udivmodhi4_loop>
     e5e:	80 95       	com	r24
     e60:	90 95       	com	r25
     e62:	bc 01       	movw	r22, r24
     e64:	cd 01       	movw	r24, r26
     e66:	08 95       	ret

00000e68 <fdevopen>:
     e68:	0f 93       	push	r16
     e6a:	1f 93       	push	r17
     e6c:	cf 93       	push	r28
     e6e:	df 93       	push	r29
     e70:	ec 01       	movw	r28, r24
     e72:	8b 01       	movw	r16, r22
     e74:	00 97       	sbiw	r24, 0x00	; 0
     e76:	31 f4       	brne	.+12     	; 0xe84 <fdevopen+0x1c>
     e78:	61 15       	cp	r22, r1
     e7a:	71 05       	cpc	r23, r1
     e7c:	19 f4       	brne	.+6      	; 0xe84 <fdevopen+0x1c>
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	38 c0       	rjmp	.+112    	; 0xef4 <fdevopen+0x8c>
     e84:	6e e0       	ldi	r22, 0x0E	; 14
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	0e 94 ab 09 	call	0x1356	; 0x1356 <calloc>
     e90:	fc 01       	movw	r30, r24
     e92:	00 97       	sbiw	r24, 0x00	; 0
     e94:	a1 f3       	breq	.-24     	; 0xe7e <fdevopen+0x16>
     e96:	80 e8       	ldi	r24, 0x80	; 128
     e98:	83 83       	std	Z+3, r24	; 0x03
     e9a:	01 15       	cp	r16, r1
     e9c:	11 05       	cpc	r17, r1
     e9e:	71 f0       	breq	.+28     	; 0xebc <fdevopen+0x54>
     ea0:	13 87       	std	Z+11, r17	; 0x0b
     ea2:	02 87       	std	Z+10, r16	; 0x0a
     ea4:	81 e8       	ldi	r24, 0x81	; 129
     ea6:	83 83       	std	Z+3, r24	; 0x03
     ea8:	80 91 92 02 	lds	r24, 0x0292
     eac:	90 91 93 02 	lds	r25, 0x0293
     eb0:	89 2b       	or	r24, r25
     eb2:	21 f4       	brne	.+8      	; 0xebc <fdevopen+0x54>
     eb4:	f0 93 93 02 	sts	0x0293, r31
     eb8:	e0 93 92 02 	sts	0x0292, r30
     ebc:	20 97       	sbiw	r28, 0x00	; 0
     ebe:	c9 f0       	breq	.+50     	; 0xef2 <fdevopen+0x8a>
     ec0:	d1 87       	std	Z+9, r29	; 0x09
     ec2:	c0 87       	std	Z+8, r28	; 0x08
     ec4:	83 81       	ldd	r24, Z+3	; 0x03
     ec6:	82 60       	ori	r24, 0x02	; 2
     ec8:	83 83       	std	Z+3, r24	; 0x03
     eca:	80 91 94 02 	lds	r24, 0x0294
     ece:	90 91 95 02 	lds	r25, 0x0295
     ed2:	89 2b       	or	r24, r25
     ed4:	71 f4       	brne	.+28     	; 0xef2 <fdevopen+0x8a>
     ed6:	f0 93 95 02 	sts	0x0295, r31
     eda:	e0 93 94 02 	sts	0x0294, r30
     ede:	80 91 96 02 	lds	r24, 0x0296
     ee2:	90 91 97 02 	lds	r25, 0x0297
     ee6:	89 2b       	or	r24, r25
     ee8:	21 f4       	brne	.+8      	; 0xef2 <fdevopen+0x8a>
     eea:	f0 93 97 02 	sts	0x0297, r31
     eee:	e0 93 96 02 	sts	0x0296, r30
     ef2:	cf 01       	movw	r24, r30
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	1f 91       	pop	r17
     efa:	0f 91       	pop	r16
     efc:	08 95       	ret

00000efe <puts>:
     efe:	0f 93       	push	r16
     f00:	1f 93       	push	r17
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	e0 91 94 02 	lds	r30, 0x0294
     f0a:	f0 91 95 02 	lds	r31, 0x0295
     f0e:	23 81       	ldd	r18, Z+3	; 0x03
     f10:	21 ff       	sbrs	r18, 1
     f12:	1b c0       	rjmp	.+54     	; 0xf4a <puts+0x4c>
     f14:	ec 01       	movw	r28, r24
     f16:	00 e0       	ldi	r16, 0x00	; 0
     f18:	10 e0       	ldi	r17, 0x00	; 0
     f1a:	89 91       	ld	r24, Y+
     f1c:	60 91 94 02 	lds	r22, 0x0294
     f20:	70 91 95 02 	lds	r23, 0x0295
     f24:	db 01       	movw	r26, r22
     f26:	18 96       	adiw	r26, 0x08	; 8
     f28:	ed 91       	ld	r30, X+
     f2a:	fc 91       	ld	r31, X
     f2c:	19 97       	sbiw	r26, 0x09	; 9
     f2e:	88 23       	and	r24, r24
     f30:	31 f0       	breq	.+12     	; 0xf3e <puts+0x40>
     f32:	09 95       	icall
     f34:	89 2b       	or	r24, r25
     f36:	89 f3       	breq	.-30     	; 0xf1a <puts+0x1c>
     f38:	0f ef       	ldi	r16, 0xFF	; 255
     f3a:	1f ef       	ldi	r17, 0xFF	; 255
     f3c:	ee cf       	rjmp	.-36     	; 0xf1a <puts+0x1c>
     f3e:	8a e0       	ldi	r24, 0x0A	; 10
     f40:	09 95       	icall
     f42:	89 2b       	or	r24, r25
     f44:	11 f4       	brne	.+4      	; 0xf4a <puts+0x4c>
     f46:	c8 01       	movw	r24, r16
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <puts+0x50>
     f4a:	8f ef       	ldi	r24, 0xFF	; 255
     f4c:	9f ef       	ldi	r25, 0xFF	; 255
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	1f 91       	pop	r17
     f54:	0f 91       	pop	r16
     f56:	08 95       	ret

00000f58 <sprintf>:
     f58:	ae e0       	ldi	r26, 0x0E	; 14
     f5a:	b0 e0       	ldi	r27, 0x00	; 0
     f5c:	e2 eb       	ldi	r30, 0xB2	; 178
     f5e:	f7 e0       	ldi	r31, 0x07	; 7
     f60:	0c 94 c6 0b 	jmp	0x178c	; 0x178c <__prologue_saves__+0x1c>
     f64:	0d 89       	ldd	r16, Y+21	; 0x15
     f66:	1e 89       	ldd	r17, Y+22	; 0x16
     f68:	86 e0       	ldi	r24, 0x06	; 6
     f6a:	8c 83       	std	Y+4, r24	; 0x04
     f6c:	1a 83       	std	Y+2, r17	; 0x02
     f6e:	09 83       	std	Y+1, r16	; 0x01
     f70:	8f ef       	ldi	r24, 0xFF	; 255
     f72:	9f e7       	ldi	r25, 0x7F	; 127
     f74:	9e 83       	std	Y+6, r25	; 0x06
     f76:	8d 83       	std	Y+5, r24	; 0x05
     f78:	ae 01       	movw	r20, r28
     f7a:	47 5e       	subi	r20, 0xE7	; 231
     f7c:	5f 4f       	sbci	r21, 0xFF	; 255
     f7e:	6f 89       	ldd	r22, Y+23	; 0x17
     f80:	78 8d       	ldd	r23, Y+24	; 0x18
     f82:	ce 01       	movw	r24, r28
     f84:	01 96       	adiw	r24, 0x01	; 1
     f86:	0e 94 ce 07 	call	0xf9c	; 0xf9c <vfprintf>
     f8a:	ef 81       	ldd	r30, Y+7	; 0x07
     f8c:	f8 85       	ldd	r31, Y+8	; 0x08
     f8e:	e0 0f       	add	r30, r16
     f90:	f1 1f       	adc	r31, r17
     f92:	10 82       	st	Z, r1
     f94:	2e 96       	adiw	r28, 0x0e	; 14
     f96:	e4 e0       	ldi	r30, 0x04	; 4
     f98:	0c 94 e2 0b 	jmp	0x17c4	; 0x17c4 <__epilogue_restores__+0x1c>

00000f9c <vfprintf>:
     f9c:	ac e0       	ldi	r26, 0x0C	; 12
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__prologue_saves__>
     fa8:	7c 01       	movw	r14, r24
     faa:	6b 01       	movw	r12, r22
     fac:	8a 01       	movw	r16, r20
     fae:	fc 01       	movw	r30, r24
     fb0:	17 82       	std	Z+7, r1	; 0x07
     fb2:	16 82       	std	Z+6, r1	; 0x06
     fb4:	83 81       	ldd	r24, Z+3	; 0x03
     fb6:	81 ff       	sbrs	r24, 1
     fb8:	bd c1       	rjmp	.+890    	; 0x1334 <vfprintf+0x398>
     fba:	ce 01       	movw	r24, r28
     fbc:	01 96       	adiw	r24, 0x01	; 1
     fbe:	4c 01       	movw	r8, r24
     fc0:	f7 01       	movw	r30, r14
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	f6 01       	movw	r30, r12
     fc6:	93 fd       	sbrc	r25, 3
     fc8:	85 91       	lpm	r24, Z+
     fca:	93 ff       	sbrs	r25, 3
     fcc:	81 91       	ld	r24, Z+
     fce:	6f 01       	movw	r12, r30
     fd0:	88 23       	and	r24, r24
     fd2:	09 f4       	brne	.+2      	; 0xfd6 <vfprintf+0x3a>
     fd4:	ab c1       	rjmp	.+854    	; 0x132c <vfprintf+0x390>
     fd6:	85 32       	cpi	r24, 0x25	; 37
     fd8:	39 f4       	brne	.+14     	; 0xfe8 <vfprintf+0x4c>
     fda:	93 fd       	sbrc	r25, 3
     fdc:	85 91       	lpm	r24, Z+
     fde:	93 ff       	sbrs	r25, 3
     fe0:	81 91       	ld	r24, Z+
     fe2:	6f 01       	movw	r12, r30
     fe4:	85 32       	cpi	r24, 0x25	; 37
     fe6:	29 f4       	brne	.+10     	; 0xff2 <vfprintf+0x56>
     fe8:	b7 01       	movw	r22, r14
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
     ff0:	e7 cf       	rjmp	.-50     	; 0xfc0 <vfprintf+0x24>
     ff2:	51 2c       	mov	r5, r1
     ff4:	31 2c       	mov	r3, r1
     ff6:	20 e0       	ldi	r18, 0x00	; 0
     ff8:	20 32       	cpi	r18, 0x20	; 32
     ffa:	a0 f4       	brcc	.+40     	; 0x1024 <vfprintf+0x88>
     ffc:	8b 32       	cpi	r24, 0x2B	; 43
     ffe:	69 f0       	breq	.+26     	; 0x101a <vfprintf+0x7e>
    1000:	30 f4       	brcc	.+12     	; 0x100e <vfprintf+0x72>
    1002:	80 32       	cpi	r24, 0x20	; 32
    1004:	59 f0       	breq	.+22     	; 0x101c <vfprintf+0x80>
    1006:	83 32       	cpi	r24, 0x23	; 35
    1008:	69 f4       	brne	.+26     	; 0x1024 <vfprintf+0x88>
    100a:	20 61       	ori	r18, 0x10	; 16
    100c:	2c c0       	rjmp	.+88     	; 0x1066 <vfprintf+0xca>
    100e:	8d 32       	cpi	r24, 0x2D	; 45
    1010:	39 f0       	breq	.+14     	; 0x1020 <vfprintf+0x84>
    1012:	80 33       	cpi	r24, 0x30	; 48
    1014:	39 f4       	brne	.+14     	; 0x1024 <vfprintf+0x88>
    1016:	21 60       	ori	r18, 0x01	; 1
    1018:	26 c0       	rjmp	.+76     	; 0x1066 <vfprintf+0xca>
    101a:	22 60       	ori	r18, 0x02	; 2
    101c:	24 60       	ori	r18, 0x04	; 4
    101e:	23 c0       	rjmp	.+70     	; 0x1066 <vfprintf+0xca>
    1020:	28 60       	ori	r18, 0x08	; 8
    1022:	21 c0       	rjmp	.+66     	; 0x1066 <vfprintf+0xca>
    1024:	27 fd       	sbrc	r18, 7
    1026:	27 c0       	rjmp	.+78     	; 0x1076 <vfprintf+0xda>
    1028:	30 ed       	ldi	r19, 0xD0	; 208
    102a:	38 0f       	add	r19, r24
    102c:	3a 30       	cpi	r19, 0x0A	; 10
    102e:	78 f4       	brcc	.+30     	; 0x104e <vfprintf+0xb2>
    1030:	26 ff       	sbrs	r18, 6
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <vfprintf+0xa4>
    1034:	fa e0       	ldi	r31, 0x0A	; 10
    1036:	5f 9e       	mul	r5, r31
    1038:	30 0d       	add	r19, r0
    103a:	11 24       	eor	r1, r1
    103c:	53 2e       	mov	r5, r19
    103e:	13 c0       	rjmp	.+38     	; 0x1066 <vfprintf+0xca>
    1040:	8a e0       	ldi	r24, 0x0A	; 10
    1042:	38 9e       	mul	r3, r24
    1044:	30 0d       	add	r19, r0
    1046:	11 24       	eor	r1, r1
    1048:	33 2e       	mov	r3, r19
    104a:	20 62       	ori	r18, 0x20	; 32
    104c:	0c c0       	rjmp	.+24     	; 0x1066 <vfprintf+0xca>
    104e:	8e 32       	cpi	r24, 0x2E	; 46
    1050:	21 f4       	brne	.+8      	; 0x105a <vfprintf+0xbe>
    1052:	26 fd       	sbrc	r18, 6
    1054:	6b c1       	rjmp	.+726    	; 0x132c <vfprintf+0x390>
    1056:	20 64       	ori	r18, 0x40	; 64
    1058:	06 c0       	rjmp	.+12     	; 0x1066 <vfprintf+0xca>
    105a:	8c 36       	cpi	r24, 0x6C	; 108
    105c:	11 f4       	brne	.+4      	; 0x1062 <vfprintf+0xc6>
    105e:	20 68       	ori	r18, 0x80	; 128
    1060:	02 c0       	rjmp	.+4      	; 0x1066 <vfprintf+0xca>
    1062:	88 36       	cpi	r24, 0x68	; 104
    1064:	41 f4       	brne	.+16     	; 0x1076 <vfprintf+0xda>
    1066:	f6 01       	movw	r30, r12
    1068:	93 fd       	sbrc	r25, 3
    106a:	85 91       	lpm	r24, Z+
    106c:	93 ff       	sbrs	r25, 3
    106e:	81 91       	ld	r24, Z+
    1070:	6f 01       	movw	r12, r30
    1072:	81 11       	cpse	r24, r1
    1074:	c1 cf       	rjmp	.-126    	; 0xff8 <vfprintf+0x5c>
    1076:	98 2f       	mov	r25, r24
    1078:	9f 7d       	andi	r25, 0xDF	; 223
    107a:	95 54       	subi	r25, 0x45	; 69
    107c:	93 30       	cpi	r25, 0x03	; 3
    107e:	28 f4       	brcc	.+10     	; 0x108a <vfprintf+0xee>
    1080:	0c 5f       	subi	r16, 0xFC	; 252
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	ff e3       	ldi	r31, 0x3F	; 63
    1086:	f9 83       	std	Y+1, r31	; 0x01
    1088:	0d c0       	rjmp	.+26     	; 0x10a4 <vfprintf+0x108>
    108a:	83 36       	cpi	r24, 0x63	; 99
    108c:	31 f0       	breq	.+12     	; 0x109a <vfprintf+0xfe>
    108e:	83 37       	cpi	r24, 0x73	; 115
    1090:	71 f0       	breq	.+28     	; 0x10ae <vfprintf+0x112>
    1092:	83 35       	cpi	r24, 0x53	; 83
    1094:	09 f0       	breq	.+2      	; 0x1098 <vfprintf+0xfc>
    1096:	5b c0       	rjmp	.+182    	; 0x114e <vfprintf+0x1b2>
    1098:	22 c0       	rjmp	.+68     	; 0x10de <vfprintf+0x142>
    109a:	f8 01       	movw	r30, r16
    109c:	80 81       	ld	r24, Z
    109e:	89 83       	std	Y+1, r24	; 0x01
    10a0:	0e 5f       	subi	r16, 0xFE	; 254
    10a2:	1f 4f       	sbci	r17, 0xFF	; 255
    10a4:	44 24       	eor	r4, r4
    10a6:	43 94       	inc	r4
    10a8:	51 2c       	mov	r5, r1
    10aa:	54 01       	movw	r10, r8
    10ac:	15 c0       	rjmp	.+42     	; 0x10d8 <vfprintf+0x13c>
    10ae:	38 01       	movw	r6, r16
    10b0:	f2 e0       	ldi	r31, 0x02	; 2
    10b2:	6f 0e       	add	r6, r31
    10b4:	71 1c       	adc	r7, r1
    10b6:	f8 01       	movw	r30, r16
    10b8:	a0 80       	ld	r10, Z
    10ba:	b1 80       	ldd	r11, Z+1	; 0x01
    10bc:	26 ff       	sbrs	r18, 6
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <vfprintf+0x12a>
    10c0:	65 2d       	mov	r22, r5
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <vfprintf+0x12e>
    10c6:	6f ef       	ldi	r22, 0xFF	; 255
    10c8:	7f ef       	ldi	r23, 0xFF	; 255
    10ca:	c5 01       	movw	r24, r10
    10cc:	2c 87       	std	Y+12, r18	; 0x0c
    10ce:	0e 94 00 0b 	call	0x1600	; 0x1600 <strnlen>
    10d2:	2c 01       	movw	r4, r24
    10d4:	83 01       	movw	r16, r6
    10d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    10d8:	2f 77       	andi	r18, 0x7F	; 127
    10da:	22 2e       	mov	r2, r18
    10dc:	17 c0       	rjmp	.+46     	; 0x110c <vfprintf+0x170>
    10de:	38 01       	movw	r6, r16
    10e0:	f2 e0       	ldi	r31, 0x02	; 2
    10e2:	6f 0e       	add	r6, r31
    10e4:	71 1c       	adc	r7, r1
    10e6:	f8 01       	movw	r30, r16
    10e8:	a0 80       	ld	r10, Z
    10ea:	b1 80       	ldd	r11, Z+1	; 0x01
    10ec:	26 ff       	sbrs	r18, 6
    10ee:	03 c0       	rjmp	.+6      	; 0x10f6 <vfprintf+0x15a>
    10f0:	65 2d       	mov	r22, r5
    10f2:	70 e0       	ldi	r23, 0x00	; 0
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <vfprintf+0x15e>
    10f6:	6f ef       	ldi	r22, 0xFF	; 255
    10f8:	7f ef       	ldi	r23, 0xFF	; 255
    10fa:	c5 01       	movw	r24, r10
    10fc:	2c 87       	std	Y+12, r18	; 0x0c
    10fe:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <strnlen_P>
    1102:	2c 01       	movw	r4, r24
    1104:	2c 85       	ldd	r18, Y+12	; 0x0c
    1106:	20 68       	ori	r18, 0x80	; 128
    1108:	22 2e       	mov	r2, r18
    110a:	83 01       	movw	r16, r6
    110c:	23 fc       	sbrc	r2, 3
    110e:	1b c0       	rjmp	.+54     	; 0x1146 <vfprintf+0x1aa>
    1110:	83 2d       	mov	r24, r3
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	48 16       	cp	r4, r24
    1116:	59 06       	cpc	r5, r25
    1118:	b0 f4       	brcc	.+44     	; 0x1146 <vfprintf+0x1aa>
    111a:	b7 01       	movw	r22, r14
    111c:	80 e2       	ldi	r24, 0x20	; 32
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    1124:	3a 94       	dec	r3
    1126:	f4 cf       	rjmp	.-24     	; 0x1110 <vfprintf+0x174>
    1128:	f5 01       	movw	r30, r10
    112a:	27 fc       	sbrc	r2, 7
    112c:	85 91       	lpm	r24, Z+
    112e:	27 fe       	sbrs	r2, 7
    1130:	81 91       	ld	r24, Z+
    1132:	5f 01       	movw	r10, r30
    1134:	b7 01       	movw	r22, r14
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    113c:	31 10       	cpse	r3, r1
    113e:	3a 94       	dec	r3
    1140:	f1 e0       	ldi	r31, 0x01	; 1
    1142:	4f 1a       	sub	r4, r31
    1144:	51 08       	sbc	r5, r1
    1146:	41 14       	cp	r4, r1
    1148:	51 04       	cpc	r5, r1
    114a:	71 f7       	brne	.-36     	; 0x1128 <vfprintf+0x18c>
    114c:	e5 c0       	rjmp	.+458    	; 0x1318 <vfprintf+0x37c>
    114e:	84 36       	cpi	r24, 0x64	; 100
    1150:	11 f0       	breq	.+4      	; 0x1156 <vfprintf+0x1ba>
    1152:	89 36       	cpi	r24, 0x69	; 105
    1154:	39 f5       	brne	.+78     	; 0x11a4 <vfprintf+0x208>
    1156:	f8 01       	movw	r30, r16
    1158:	27 ff       	sbrs	r18, 7
    115a:	07 c0       	rjmp	.+14     	; 0x116a <vfprintf+0x1ce>
    115c:	60 81       	ld	r22, Z
    115e:	71 81       	ldd	r23, Z+1	; 0x01
    1160:	82 81       	ldd	r24, Z+2	; 0x02
    1162:	93 81       	ldd	r25, Z+3	; 0x03
    1164:	0c 5f       	subi	r16, 0xFC	; 252
    1166:	1f 4f       	sbci	r17, 0xFF	; 255
    1168:	08 c0       	rjmp	.+16     	; 0x117a <vfprintf+0x1de>
    116a:	60 81       	ld	r22, Z
    116c:	71 81       	ldd	r23, Z+1	; 0x01
    116e:	88 27       	eor	r24, r24
    1170:	77 fd       	sbrc	r23, 7
    1172:	80 95       	com	r24
    1174:	98 2f       	mov	r25, r24
    1176:	0e 5f       	subi	r16, 0xFE	; 254
    1178:	1f 4f       	sbci	r17, 0xFF	; 255
    117a:	2f 76       	andi	r18, 0x6F	; 111
    117c:	b2 2e       	mov	r11, r18
    117e:	97 ff       	sbrs	r25, 7
    1180:	09 c0       	rjmp	.+18     	; 0x1194 <vfprintf+0x1f8>
    1182:	90 95       	com	r25
    1184:	80 95       	com	r24
    1186:	70 95       	com	r23
    1188:	61 95       	neg	r22
    118a:	7f 4f       	sbci	r23, 0xFF	; 255
    118c:	8f 4f       	sbci	r24, 0xFF	; 255
    118e:	9f 4f       	sbci	r25, 0xFF	; 255
    1190:	20 68       	ori	r18, 0x80	; 128
    1192:	b2 2e       	mov	r11, r18
    1194:	2a e0       	ldi	r18, 0x0A	; 10
    1196:	30 e0       	ldi	r19, 0x00	; 0
    1198:	a4 01       	movw	r20, r8
    119a:	0e 94 3d 0b 	call	0x167a	; 0x167a <__ultoa_invert>
    119e:	a8 2e       	mov	r10, r24
    11a0:	a8 18       	sub	r10, r8
    11a2:	44 c0       	rjmp	.+136    	; 0x122c <vfprintf+0x290>
    11a4:	85 37       	cpi	r24, 0x75	; 117
    11a6:	29 f4       	brne	.+10     	; 0x11b2 <vfprintf+0x216>
    11a8:	2f 7e       	andi	r18, 0xEF	; 239
    11aa:	b2 2e       	mov	r11, r18
    11ac:	2a e0       	ldi	r18, 0x0A	; 10
    11ae:	30 e0       	ldi	r19, 0x00	; 0
    11b0:	25 c0       	rjmp	.+74     	; 0x11fc <vfprintf+0x260>
    11b2:	f2 2f       	mov	r31, r18
    11b4:	f9 7f       	andi	r31, 0xF9	; 249
    11b6:	bf 2e       	mov	r11, r31
    11b8:	8f 36       	cpi	r24, 0x6F	; 111
    11ba:	c1 f0       	breq	.+48     	; 0x11ec <vfprintf+0x250>
    11bc:	18 f4       	brcc	.+6      	; 0x11c4 <vfprintf+0x228>
    11be:	88 35       	cpi	r24, 0x58	; 88
    11c0:	79 f0       	breq	.+30     	; 0x11e0 <vfprintf+0x244>
    11c2:	b4 c0       	rjmp	.+360    	; 0x132c <vfprintf+0x390>
    11c4:	80 37       	cpi	r24, 0x70	; 112
    11c6:	19 f0       	breq	.+6      	; 0x11ce <vfprintf+0x232>
    11c8:	88 37       	cpi	r24, 0x78	; 120
    11ca:	21 f0       	breq	.+8      	; 0x11d4 <vfprintf+0x238>
    11cc:	af c0       	rjmp	.+350    	; 0x132c <vfprintf+0x390>
    11ce:	2f 2f       	mov	r18, r31
    11d0:	20 61       	ori	r18, 0x10	; 16
    11d2:	b2 2e       	mov	r11, r18
    11d4:	b4 fe       	sbrs	r11, 4
    11d6:	0d c0       	rjmp	.+26     	; 0x11f2 <vfprintf+0x256>
    11d8:	8b 2d       	mov	r24, r11
    11da:	84 60       	ori	r24, 0x04	; 4
    11dc:	b8 2e       	mov	r11, r24
    11de:	09 c0       	rjmp	.+18     	; 0x11f2 <vfprintf+0x256>
    11e0:	24 ff       	sbrs	r18, 4
    11e2:	0a c0       	rjmp	.+20     	; 0x11f8 <vfprintf+0x25c>
    11e4:	9f 2f       	mov	r25, r31
    11e6:	96 60       	ori	r25, 0x06	; 6
    11e8:	b9 2e       	mov	r11, r25
    11ea:	06 c0       	rjmp	.+12     	; 0x11f8 <vfprintf+0x25c>
    11ec:	28 e0       	ldi	r18, 0x08	; 8
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	05 c0       	rjmp	.+10     	; 0x11fc <vfprintf+0x260>
    11f2:	20 e1       	ldi	r18, 0x10	; 16
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <vfprintf+0x260>
    11f8:	20 e1       	ldi	r18, 0x10	; 16
    11fa:	32 e0       	ldi	r19, 0x02	; 2
    11fc:	f8 01       	movw	r30, r16
    11fe:	b7 fe       	sbrs	r11, 7
    1200:	07 c0       	rjmp	.+14     	; 0x1210 <vfprintf+0x274>
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	82 81       	ldd	r24, Z+2	; 0x02
    1208:	93 81       	ldd	r25, Z+3	; 0x03
    120a:	0c 5f       	subi	r16, 0xFC	; 252
    120c:	1f 4f       	sbci	r17, 0xFF	; 255
    120e:	06 c0       	rjmp	.+12     	; 0x121c <vfprintf+0x280>
    1210:	60 81       	ld	r22, Z
    1212:	71 81       	ldd	r23, Z+1	; 0x01
    1214:	80 e0       	ldi	r24, 0x00	; 0
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	0e 5f       	subi	r16, 0xFE	; 254
    121a:	1f 4f       	sbci	r17, 0xFF	; 255
    121c:	a4 01       	movw	r20, r8
    121e:	0e 94 3d 0b 	call	0x167a	; 0x167a <__ultoa_invert>
    1222:	a8 2e       	mov	r10, r24
    1224:	a8 18       	sub	r10, r8
    1226:	fb 2d       	mov	r31, r11
    1228:	ff 77       	andi	r31, 0x7F	; 127
    122a:	bf 2e       	mov	r11, r31
    122c:	b6 fe       	sbrs	r11, 6
    122e:	0b c0       	rjmp	.+22     	; 0x1246 <vfprintf+0x2aa>
    1230:	2b 2d       	mov	r18, r11
    1232:	2e 7f       	andi	r18, 0xFE	; 254
    1234:	a5 14       	cp	r10, r5
    1236:	50 f4       	brcc	.+20     	; 0x124c <vfprintf+0x2b0>
    1238:	b4 fe       	sbrs	r11, 4
    123a:	0a c0       	rjmp	.+20     	; 0x1250 <vfprintf+0x2b4>
    123c:	b2 fc       	sbrc	r11, 2
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <vfprintf+0x2b4>
    1240:	2b 2d       	mov	r18, r11
    1242:	2e 7e       	andi	r18, 0xEE	; 238
    1244:	05 c0       	rjmp	.+10     	; 0x1250 <vfprintf+0x2b4>
    1246:	7a 2c       	mov	r7, r10
    1248:	2b 2d       	mov	r18, r11
    124a:	03 c0       	rjmp	.+6      	; 0x1252 <vfprintf+0x2b6>
    124c:	7a 2c       	mov	r7, r10
    124e:	01 c0       	rjmp	.+2      	; 0x1252 <vfprintf+0x2b6>
    1250:	75 2c       	mov	r7, r5
    1252:	24 ff       	sbrs	r18, 4
    1254:	0d c0       	rjmp	.+26     	; 0x1270 <vfprintf+0x2d4>
    1256:	fe 01       	movw	r30, r28
    1258:	ea 0d       	add	r30, r10
    125a:	f1 1d       	adc	r31, r1
    125c:	80 81       	ld	r24, Z
    125e:	80 33       	cpi	r24, 0x30	; 48
    1260:	11 f4       	brne	.+4      	; 0x1266 <vfprintf+0x2ca>
    1262:	29 7e       	andi	r18, 0xE9	; 233
    1264:	09 c0       	rjmp	.+18     	; 0x1278 <vfprintf+0x2dc>
    1266:	22 ff       	sbrs	r18, 2
    1268:	06 c0       	rjmp	.+12     	; 0x1276 <vfprintf+0x2da>
    126a:	73 94       	inc	r7
    126c:	73 94       	inc	r7
    126e:	04 c0       	rjmp	.+8      	; 0x1278 <vfprintf+0x2dc>
    1270:	82 2f       	mov	r24, r18
    1272:	86 78       	andi	r24, 0x86	; 134
    1274:	09 f0       	breq	.+2      	; 0x1278 <vfprintf+0x2dc>
    1276:	73 94       	inc	r7
    1278:	23 fd       	sbrc	r18, 3
    127a:	13 c0       	rjmp	.+38     	; 0x12a2 <vfprintf+0x306>
    127c:	20 ff       	sbrs	r18, 0
    127e:	06 c0       	rjmp	.+12     	; 0x128c <vfprintf+0x2f0>
    1280:	5a 2c       	mov	r5, r10
    1282:	73 14       	cp	r7, r3
    1284:	18 f4       	brcc	.+6      	; 0x128c <vfprintf+0x2f0>
    1286:	53 0c       	add	r5, r3
    1288:	57 18       	sub	r5, r7
    128a:	73 2c       	mov	r7, r3
    128c:	73 14       	cp	r7, r3
    128e:	68 f4       	brcc	.+26     	; 0x12aa <vfprintf+0x30e>
    1290:	b7 01       	movw	r22, r14
    1292:	80 e2       	ldi	r24, 0x20	; 32
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	2c 87       	std	Y+12, r18	; 0x0c
    1298:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    129c:	73 94       	inc	r7
    129e:	2c 85       	ldd	r18, Y+12	; 0x0c
    12a0:	f5 cf       	rjmp	.-22     	; 0x128c <vfprintf+0x2f0>
    12a2:	73 14       	cp	r7, r3
    12a4:	10 f4       	brcc	.+4      	; 0x12aa <vfprintf+0x30e>
    12a6:	37 18       	sub	r3, r7
    12a8:	01 c0       	rjmp	.+2      	; 0x12ac <vfprintf+0x310>
    12aa:	31 2c       	mov	r3, r1
    12ac:	24 ff       	sbrs	r18, 4
    12ae:	12 c0       	rjmp	.+36     	; 0x12d4 <vfprintf+0x338>
    12b0:	b7 01       	movw	r22, r14
    12b2:	80 e3       	ldi	r24, 0x30	; 48
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	2c 87       	std	Y+12, r18	; 0x0c
    12b8:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    12bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    12be:	22 ff       	sbrs	r18, 2
    12c0:	17 c0       	rjmp	.+46     	; 0x12f0 <vfprintf+0x354>
    12c2:	21 ff       	sbrs	r18, 1
    12c4:	03 c0       	rjmp	.+6      	; 0x12cc <vfprintf+0x330>
    12c6:	88 e5       	ldi	r24, 0x58	; 88
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	02 c0       	rjmp	.+4      	; 0x12d0 <vfprintf+0x334>
    12cc:	88 e7       	ldi	r24, 0x78	; 120
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	b7 01       	movw	r22, r14
    12d2:	0c c0       	rjmp	.+24     	; 0x12ec <vfprintf+0x350>
    12d4:	82 2f       	mov	r24, r18
    12d6:	86 78       	andi	r24, 0x86	; 134
    12d8:	59 f0       	breq	.+22     	; 0x12f0 <vfprintf+0x354>
    12da:	21 fd       	sbrc	r18, 1
    12dc:	02 c0       	rjmp	.+4      	; 0x12e2 <vfprintf+0x346>
    12de:	80 e2       	ldi	r24, 0x20	; 32
    12e0:	01 c0       	rjmp	.+2      	; 0x12e4 <vfprintf+0x348>
    12e2:	8b e2       	ldi	r24, 0x2B	; 43
    12e4:	27 fd       	sbrc	r18, 7
    12e6:	8d e2       	ldi	r24, 0x2D	; 45
    12e8:	b7 01       	movw	r22, r14
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    12f0:	a5 14       	cp	r10, r5
    12f2:	38 f4       	brcc	.+14     	; 0x1302 <vfprintf+0x366>
    12f4:	b7 01       	movw	r22, r14
    12f6:	80 e3       	ldi	r24, 0x30	; 48
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    12fe:	5a 94       	dec	r5
    1300:	f7 cf       	rjmp	.-18     	; 0x12f0 <vfprintf+0x354>
    1302:	aa 94       	dec	r10
    1304:	f4 01       	movw	r30, r8
    1306:	ea 0d       	add	r30, r10
    1308:	f1 1d       	adc	r31, r1
    130a:	80 81       	ld	r24, Z
    130c:	b7 01       	movw	r22, r14
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    1314:	a1 10       	cpse	r10, r1
    1316:	f5 cf       	rjmp	.-22     	; 0x1302 <vfprintf+0x366>
    1318:	33 20       	and	r3, r3
    131a:	09 f4       	brne	.+2      	; 0x131e <vfprintf+0x382>
    131c:	51 ce       	rjmp	.-862    	; 0xfc0 <vfprintf+0x24>
    131e:	b7 01       	movw	r22, r14
    1320:	80 e2       	ldi	r24, 0x20	; 32
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	0e 94 0b 0b 	call	0x1616	; 0x1616 <fputc>
    1328:	3a 94       	dec	r3
    132a:	f6 cf       	rjmp	.-20     	; 0x1318 <vfprintf+0x37c>
    132c:	f7 01       	movw	r30, r14
    132e:	86 81       	ldd	r24, Z+6	; 0x06
    1330:	97 81       	ldd	r25, Z+7	; 0x07
    1332:	02 c0       	rjmp	.+4      	; 0x1338 <vfprintf+0x39c>
    1334:	8f ef       	ldi	r24, 0xFF	; 255
    1336:	9f ef       	ldi	r25, 0xFF	; 255
    1338:	2c 96       	adiw	r28, 0x0c	; 12
    133a:	e2 e1       	ldi	r30, 0x12	; 18
    133c:	0c 94 d4 0b 	jmp	0x17a8	; 0x17a8 <__epilogue_restores__>

00001340 <__eerd_word_m162>:
    1340:	a8 e1       	ldi	r26, 0x18	; 24
    1342:	b0 e0       	ldi	r27, 0x00	; 0
    1344:	42 e0       	ldi	r20, 0x02	; 2
    1346:	50 e0       	ldi	r21, 0x00	; 0
    1348:	0c 94 9d 0b 	jmp	0x173a	; 0x173a <__eerd_blraw_m162>

0000134c <__eewr_word_m162>:
    134c:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__eewr_byte_m162>
    1350:	27 2f       	mov	r18, r23
    1352:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <__eewr_r18_m162>

00001356 <calloc>:
    1356:	0f 93       	push	r16
    1358:	1f 93       	push	r17
    135a:	cf 93       	push	r28
    135c:	df 93       	push	r29
    135e:	86 9f       	mul	r24, r22
    1360:	80 01       	movw	r16, r0
    1362:	87 9f       	mul	r24, r23
    1364:	10 0d       	add	r17, r0
    1366:	96 9f       	mul	r25, r22
    1368:	10 0d       	add	r17, r0
    136a:	11 24       	eor	r1, r1
    136c:	c8 01       	movw	r24, r16
    136e:	0e 94 c7 09 	call	0x138e	; 0x138e <malloc>
    1372:	ec 01       	movw	r28, r24
    1374:	00 97       	sbiw	r24, 0x00	; 0
    1376:	29 f0       	breq	.+10     	; 0x1382 <calloc+0x2c>
    1378:	a8 01       	movw	r20, r16
    137a:	60 e0       	ldi	r22, 0x00	; 0
    137c:	70 e0       	ldi	r23, 0x00	; 0
    137e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <memset>
    1382:	ce 01       	movw	r24, r28
    1384:	df 91       	pop	r29
    1386:	cf 91       	pop	r28
    1388:	1f 91       	pop	r17
    138a:	0f 91       	pop	r16
    138c:	08 95       	ret

0000138e <malloc>:
    138e:	cf 93       	push	r28
    1390:	df 93       	push	r29
    1392:	82 30       	cpi	r24, 0x02	; 2
    1394:	91 05       	cpc	r25, r1
    1396:	10 f4       	brcc	.+4      	; 0x139c <malloc+0xe>
    1398:	82 e0       	ldi	r24, 0x02	; 2
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	e0 91 9a 02 	lds	r30, 0x029A
    13a0:	f0 91 9b 02 	lds	r31, 0x029B
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	a0 e0       	ldi	r26, 0x00	; 0
    13aa:	b0 e0       	ldi	r27, 0x00	; 0
    13ac:	30 97       	sbiw	r30, 0x00	; 0
    13ae:	39 f1       	breq	.+78     	; 0x13fe <malloc+0x70>
    13b0:	40 81       	ld	r20, Z
    13b2:	51 81       	ldd	r21, Z+1	; 0x01
    13b4:	48 17       	cp	r20, r24
    13b6:	59 07       	cpc	r21, r25
    13b8:	b8 f0       	brcs	.+46     	; 0x13e8 <malloc+0x5a>
    13ba:	48 17       	cp	r20, r24
    13bc:	59 07       	cpc	r21, r25
    13be:	71 f4       	brne	.+28     	; 0x13dc <malloc+0x4e>
    13c0:	82 81       	ldd	r24, Z+2	; 0x02
    13c2:	93 81       	ldd	r25, Z+3	; 0x03
    13c4:	10 97       	sbiw	r26, 0x00	; 0
    13c6:	29 f0       	breq	.+10     	; 0x13d2 <malloc+0x44>
    13c8:	13 96       	adiw	r26, 0x03	; 3
    13ca:	9c 93       	st	X, r25
    13cc:	8e 93       	st	-X, r24
    13ce:	12 97       	sbiw	r26, 0x02	; 2
    13d0:	2c c0       	rjmp	.+88     	; 0x142a <malloc+0x9c>
    13d2:	90 93 9b 02 	sts	0x029B, r25
    13d6:	80 93 9a 02 	sts	0x029A, r24
    13da:	27 c0       	rjmp	.+78     	; 0x142a <malloc+0x9c>
    13dc:	21 15       	cp	r18, r1
    13de:	31 05       	cpc	r19, r1
    13e0:	31 f0       	breq	.+12     	; 0x13ee <malloc+0x60>
    13e2:	42 17       	cp	r20, r18
    13e4:	53 07       	cpc	r21, r19
    13e6:	18 f0       	brcs	.+6      	; 0x13ee <malloc+0x60>
    13e8:	a9 01       	movw	r20, r18
    13ea:	db 01       	movw	r26, r22
    13ec:	01 c0       	rjmp	.+2      	; 0x13f0 <malloc+0x62>
    13ee:	ef 01       	movw	r28, r30
    13f0:	9a 01       	movw	r18, r20
    13f2:	bd 01       	movw	r22, r26
    13f4:	df 01       	movw	r26, r30
    13f6:	02 80       	ldd	r0, Z+2	; 0x02
    13f8:	f3 81       	ldd	r31, Z+3	; 0x03
    13fa:	e0 2d       	mov	r30, r0
    13fc:	d7 cf       	rjmp	.-82     	; 0x13ac <malloc+0x1e>
    13fe:	21 15       	cp	r18, r1
    1400:	31 05       	cpc	r19, r1
    1402:	f9 f0       	breq	.+62     	; 0x1442 <malloc+0xb4>
    1404:	28 1b       	sub	r18, r24
    1406:	39 0b       	sbc	r19, r25
    1408:	24 30       	cpi	r18, 0x04	; 4
    140a:	31 05       	cpc	r19, r1
    140c:	80 f4       	brcc	.+32     	; 0x142e <malloc+0xa0>
    140e:	8a 81       	ldd	r24, Y+2	; 0x02
    1410:	9b 81       	ldd	r25, Y+3	; 0x03
    1412:	61 15       	cp	r22, r1
    1414:	71 05       	cpc	r23, r1
    1416:	21 f0       	breq	.+8      	; 0x1420 <malloc+0x92>
    1418:	fb 01       	movw	r30, r22
    141a:	93 83       	std	Z+3, r25	; 0x03
    141c:	82 83       	std	Z+2, r24	; 0x02
    141e:	04 c0       	rjmp	.+8      	; 0x1428 <malloc+0x9a>
    1420:	90 93 9b 02 	sts	0x029B, r25
    1424:	80 93 9a 02 	sts	0x029A, r24
    1428:	fe 01       	movw	r30, r28
    142a:	32 96       	adiw	r30, 0x02	; 2
    142c:	44 c0       	rjmp	.+136    	; 0x14b6 <malloc+0x128>
    142e:	fe 01       	movw	r30, r28
    1430:	e2 0f       	add	r30, r18
    1432:	f3 1f       	adc	r31, r19
    1434:	81 93       	st	Z+, r24
    1436:	91 93       	st	Z+, r25
    1438:	22 50       	subi	r18, 0x02	; 2
    143a:	31 09       	sbc	r19, r1
    143c:	39 83       	std	Y+1, r19	; 0x01
    143e:	28 83       	st	Y, r18
    1440:	3a c0       	rjmp	.+116    	; 0x14b6 <malloc+0x128>
    1442:	20 91 98 02 	lds	r18, 0x0298
    1446:	30 91 99 02 	lds	r19, 0x0299
    144a:	23 2b       	or	r18, r19
    144c:	41 f4       	brne	.+16     	; 0x145e <malloc+0xd0>
    144e:	20 91 02 01 	lds	r18, 0x0102
    1452:	30 91 03 01 	lds	r19, 0x0103
    1456:	30 93 99 02 	sts	0x0299, r19
    145a:	20 93 98 02 	sts	0x0298, r18
    145e:	20 91 00 01 	lds	r18, 0x0100
    1462:	30 91 01 01 	lds	r19, 0x0101
    1466:	21 15       	cp	r18, r1
    1468:	31 05       	cpc	r19, r1
    146a:	41 f4       	brne	.+16     	; 0x147c <malloc+0xee>
    146c:	2d b7       	in	r18, 0x3d	; 61
    146e:	3e b7       	in	r19, 0x3e	; 62
    1470:	40 91 04 01 	lds	r20, 0x0104
    1474:	50 91 05 01 	lds	r21, 0x0105
    1478:	24 1b       	sub	r18, r20
    147a:	35 0b       	sbc	r19, r21
    147c:	e0 91 98 02 	lds	r30, 0x0298
    1480:	f0 91 99 02 	lds	r31, 0x0299
    1484:	e2 17       	cp	r30, r18
    1486:	f3 07       	cpc	r31, r19
    1488:	a0 f4       	brcc	.+40     	; 0x14b2 <malloc+0x124>
    148a:	2e 1b       	sub	r18, r30
    148c:	3f 0b       	sbc	r19, r31
    148e:	28 17       	cp	r18, r24
    1490:	39 07       	cpc	r19, r25
    1492:	78 f0       	brcs	.+30     	; 0x14b2 <malloc+0x124>
    1494:	ac 01       	movw	r20, r24
    1496:	4e 5f       	subi	r20, 0xFE	; 254
    1498:	5f 4f       	sbci	r21, 0xFF	; 255
    149a:	24 17       	cp	r18, r20
    149c:	35 07       	cpc	r19, r21
    149e:	48 f0       	brcs	.+18     	; 0x14b2 <malloc+0x124>
    14a0:	4e 0f       	add	r20, r30
    14a2:	5f 1f       	adc	r21, r31
    14a4:	50 93 99 02 	sts	0x0299, r21
    14a8:	40 93 98 02 	sts	0x0298, r20
    14ac:	81 93       	st	Z+, r24
    14ae:	91 93       	st	Z+, r25
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <malloc+0x128>
    14b2:	e0 e0       	ldi	r30, 0x00	; 0
    14b4:	f0 e0       	ldi	r31, 0x00	; 0
    14b6:	cf 01       	movw	r24, r30
    14b8:	df 91       	pop	r29
    14ba:	cf 91       	pop	r28
    14bc:	08 95       	ret

000014be <free>:
    14be:	cf 93       	push	r28
    14c0:	df 93       	push	r29
    14c2:	00 97       	sbiw	r24, 0x00	; 0
    14c4:	09 f4       	brne	.+2      	; 0x14c8 <free+0xa>
    14c6:	87 c0       	rjmp	.+270    	; 0x15d6 <free+0x118>
    14c8:	fc 01       	movw	r30, r24
    14ca:	32 97       	sbiw	r30, 0x02	; 2
    14cc:	13 82       	std	Z+3, r1	; 0x03
    14ce:	12 82       	std	Z+2, r1	; 0x02
    14d0:	c0 91 9a 02 	lds	r28, 0x029A
    14d4:	d0 91 9b 02 	lds	r29, 0x029B
    14d8:	20 97       	sbiw	r28, 0x00	; 0
    14da:	81 f4       	brne	.+32     	; 0x14fc <free+0x3e>
    14dc:	20 81       	ld	r18, Z
    14de:	31 81       	ldd	r19, Z+1	; 0x01
    14e0:	28 0f       	add	r18, r24
    14e2:	39 1f       	adc	r19, r25
    14e4:	80 91 98 02 	lds	r24, 0x0298
    14e8:	90 91 99 02 	lds	r25, 0x0299
    14ec:	82 17       	cp	r24, r18
    14ee:	93 07       	cpc	r25, r19
    14f0:	79 f5       	brne	.+94     	; 0x1550 <free+0x92>
    14f2:	f0 93 99 02 	sts	0x0299, r31
    14f6:	e0 93 98 02 	sts	0x0298, r30
    14fa:	6d c0       	rjmp	.+218    	; 0x15d6 <free+0x118>
    14fc:	de 01       	movw	r26, r28
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	ae 17       	cp	r26, r30
    1504:	bf 07       	cpc	r27, r31
    1506:	50 f4       	brcc	.+20     	; 0x151c <free+0x5e>
    1508:	12 96       	adiw	r26, 0x02	; 2
    150a:	4d 91       	ld	r20, X+
    150c:	5c 91       	ld	r21, X
    150e:	13 97       	sbiw	r26, 0x03	; 3
    1510:	9d 01       	movw	r18, r26
    1512:	41 15       	cp	r20, r1
    1514:	51 05       	cpc	r21, r1
    1516:	09 f1       	breq	.+66     	; 0x155a <free+0x9c>
    1518:	da 01       	movw	r26, r20
    151a:	f3 cf       	rjmp	.-26     	; 0x1502 <free+0x44>
    151c:	b3 83       	std	Z+3, r27	; 0x03
    151e:	a2 83       	std	Z+2, r26	; 0x02
    1520:	40 81       	ld	r20, Z
    1522:	51 81       	ldd	r21, Z+1	; 0x01
    1524:	84 0f       	add	r24, r20
    1526:	95 1f       	adc	r25, r21
    1528:	8a 17       	cp	r24, r26
    152a:	9b 07       	cpc	r25, r27
    152c:	71 f4       	brne	.+28     	; 0x154a <free+0x8c>
    152e:	8d 91       	ld	r24, X+
    1530:	9c 91       	ld	r25, X
    1532:	11 97       	sbiw	r26, 0x01	; 1
    1534:	84 0f       	add	r24, r20
    1536:	95 1f       	adc	r25, r21
    1538:	02 96       	adiw	r24, 0x02	; 2
    153a:	91 83       	std	Z+1, r25	; 0x01
    153c:	80 83       	st	Z, r24
    153e:	12 96       	adiw	r26, 0x02	; 2
    1540:	8d 91       	ld	r24, X+
    1542:	9c 91       	ld	r25, X
    1544:	13 97       	sbiw	r26, 0x03	; 3
    1546:	93 83       	std	Z+3, r25	; 0x03
    1548:	82 83       	std	Z+2, r24	; 0x02
    154a:	21 15       	cp	r18, r1
    154c:	31 05       	cpc	r19, r1
    154e:	29 f4       	brne	.+10     	; 0x155a <free+0x9c>
    1550:	f0 93 9b 02 	sts	0x029B, r31
    1554:	e0 93 9a 02 	sts	0x029A, r30
    1558:	3e c0       	rjmp	.+124    	; 0x15d6 <free+0x118>
    155a:	d9 01       	movw	r26, r18
    155c:	13 96       	adiw	r26, 0x03	; 3
    155e:	fc 93       	st	X, r31
    1560:	ee 93       	st	-X, r30
    1562:	12 97       	sbiw	r26, 0x02	; 2
    1564:	4d 91       	ld	r20, X+
    1566:	5d 91       	ld	r21, X+
    1568:	a4 0f       	add	r26, r20
    156a:	b5 1f       	adc	r27, r21
    156c:	ea 17       	cp	r30, r26
    156e:	fb 07       	cpc	r31, r27
    1570:	79 f4       	brne	.+30     	; 0x1590 <free+0xd2>
    1572:	80 81       	ld	r24, Z
    1574:	91 81       	ldd	r25, Z+1	; 0x01
    1576:	84 0f       	add	r24, r20
    1578:	95 1f       	adc	r25, r21
    157a:	02 96       	adiw	r24, 0x02	; 2
    157c:	d9 01       	movw	r26, r18
    157e:	11 96       	adiw	r26, 0x01	; 1
    1580:	9c 93       	st	X, r25
    1582:	8e 93       	st	-X, r24
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	13 96       	adiw	r26, 0x03	; 3
    158a:	9c 93       	st	X, r25
    158c:	8e 93       	st	-X, r24
    158e:	12 97       	sbiw	r26, 0x02	; 2
    1590:	e0 e0       	ldi	r30, 0x00	; 0
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	8a 81       	ldd	r24, Y+2	; 0x02
    1596:	9b 81       	ldd	r25, Y+3	; 0x03
    1598:	00 97       	sbiw	r24, 0x00	; 0
    159a:	19 f0       	breq	.+6      	; 0x15a2 <free+0xe4>
    159c:	fe 01       	movw	r30, r28
    159e:	ec 01       	movw	r28, r24
    15a0:	f9 cf       	rjmp	.-14     	; 0x1594 <free+0xd6>
    15a2:	ce 01       	movw	r24, r28
    15a4:	02 96       	adiw	r24, 0x02	; 2
    15a6:	28 81       	ld	r18, Y
    15a8:	39 81       	ldd	r19, Y+1	; 0x01
    15aa:	82 0f       	add	r24, r18
    15ac:	93 1f       	adc	r25, r19
    15ae:	20 91 98 02 	lds	r18, 0x0298
    15b2:	30 91 99 02 	lds	r19, 0x0299
    15b6:	28 17       	cp	r18, r24
    15b8:	39 07       	cpc	r19, r25
    15ba:	69 f4       	brne	.+26     	; 0x15d6 <free+0x118>
    15bc:	30 97       	sbiw	r30, 0x00	; 0
    15be:	29 f4       	brne	.+10     	; 0x15ca <free+0x10c>
    15c0:	10 92 9b 02 	sts	0x029B, r1
    15c4:	10 92 9a 02 	sts	0x029A, r1
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <free+0x110>
    15ca:	13 82       	std	Z+3, r1	; 0x03
    15cc:	12 82       	std	Z+2, r1	; 0x02
    15ce:	d0 93 99 02 	sts	0x0299, r29
    15d2:	c0 93 98 02 	sts	0x0298, r28
    15d6:	df 91       	pop	r29
    15d8:	cf 91       	pop	r28
    15da:	08 95       	ret

000015dc <strnlen_P>:
    15dc:	fc 01       	movw	r30, r24
    15de:	05 90       	lpm	r0, Z+
    15e0:	61 50       	subi	r22, 0x01	; 1
    15e2:	70 40       	sbci	r23, 0x00	; 0
    15e4:	01 10       	cpse	r0, r1
    15e6:	d8 f7       	brcc	.-10     	; 0x15de <strnlen_P+0x2>
    15e8:	80 95       	com	r24
    15ea:	90 95       	com	r25
    15ec:	8e 0f       	add	r24, r30
    15ee:	9f 1f       	adc	r25, r31
    15f0:	08 95       	ret

000015f2 <memset>:
    15f2:	dc 01       	movw	r26, r24
    15f4:	01 c0       	rjmp	.+2      	; 0x15f8 <memset+0x6>
    15f6:	6d 93       	st	X+, r22
    15f8:	41 50       	subi	r20, 0x01	; 1
    15fa:	50 40       	sbci	r21, 0x00	; 0
    15fc:	e0 f7       	brcc	.-8      	; 0x15f6 <memset+0x4>
    15fe:	08 95       	ret

00001600 <strnlen>:
    1600:	fc 01       	movw	r30, r24
    1602:	61 50       	subi	r22, 0x01	; 1
    1604:	70 40       	sbci	r23, 0x00	; 0
    1606:	01 90       	ld	r0, Z+
    1608:	01 10       	cpse	r0, r1
    160a:	d8 f7       	brcc	.-10     	; 0x1602 <strnlen+0x2>
    160c:	80 95       	com	r24
    160e:	90 95       	com	r25
    1610:	8e 0f       	add	r24, r30
    1612:	9f 1f       	adc	r25, r31
    1614:	08 95       	ret

00001616 <fputc>:
    1616:	0f 93       	push	r16
    1618:	1f 93       	push	r17
    161a:	cf 93       	push	r28
    161c:	df 93       	push	r29
    161e:	18 2f       	mov	r17, r24
    1620:	09 2f       	mov	r16, r25
    1622:	eb 01       	movw	r28, r22
    1624:	8b 81       	ldd	r24, Y+3	; 0x03
    1626:	81 fd       	sbrc	r24, 1
    1628:	03 c0       	rjmp	.+6      	; 0x1630 <fputc+0x1a>
    162a:	8f ef       	ldi	r24, 0xFF	; 255
    162c:	9f ef       	ldi	r25, 0xFF	; 255
    162e:	20 c0       	rjmp	.+64     	; 0x1670 <fputc+0x5a>
    1630:	82 ff       	sbrs	r24, 2
    1632:	10 c0       	rjmp	.+32     	; 0x1654 <fputc+0x3e>
    1634:	4e 81       	ldd	r20, Y+6	; 0x06
    1636:	5f 81       	ldd	r21, Y+7	; 0x07
    1638:	2c 81       	ldd	r18, Y+4	; 0x04
    163a:	3d 81       	ldd	r19, Y+5	; 0x05
    163c:	42 17       	cp	r20, r18
    163e:	53 07       	cpc	r21, r19
    1640:	7c f4       	brge	.+30     	; 0x1660 <fputc+0x4a>
    1642:	e8 81       	ld	r30, Y
    1644:	f9 81       	ldd	r31, Y+1	; 0x01
    1646:	9f 01       	movw	r18, r30
    1648:	2f 5f       	subi	r18, 0xFF	; 255
    164a:	3f 4f       	sbci	r19, 0xFF	; 255
    164c:	39 83       	std	Y+1, r19	; 0x01
    164e:	28 83       	st	Y, r18
    1650:	10 83       	st	Z, r17
    1652:	06 c0       	rjmp	.+12     	; 0x1660 <fputc+0x4a>
    1654:	e8 85       	ldd	r30, Y+8	; 0x08
    1656:	f9 85       	ldd	r31, Y+9	; 0x09
    1658:	81 2f       	mov	r24, r17
    165a:	09 95       	icall
    165c:	89 2b       	or	r24, r25
    165e:	29 f7       	brne	.-54     	; 0x162a <fputc+0x14>
    1660:	2e 81       	ldd	r18, Y+6	; 0x06
    1662:	3f 81       	ldd	r19, Y+7	; 0x07
    1664:	2f 5f       	subi	r18, 0xFF	; 255
    1666:	3f 4f       	sbci	r19, 0xFF	; 255
    1668:	3f 83       	std	Y+7, r19	; 0x07
    166a:	2e 83       	std	Y+6, r18	; 0x06
    166c:	81 2f       	mov	r24, r17
    166e:	90 2f       	mov	r25, r16
    1670:	df 91       	pop	r29
    1672:	cf 91       	pop	r28
    1674:	1f 91       	pop	r17
    1676:	0f 91       	pop	r16
    1678:	08 95       	ret

0000167a <__ultoa_invert>:
    167a:	fa 01       	movw	r30, r20
    167c:	aa 27       	eor	r26, r26
    167e:	28 30       	cpi	r18, 0x08	; 8
    1680:	51 f1       	breq	.+84     	; 0x16d6 <__ultoa_invert+0x5c>
    1682:	20 31       	cpi	r18, 0x10	; 16
    1684:	81 f1       	breq	.+96     	; 0x16e6 <__ultoa_invert+0x6c>
    1686:	e8 94       	clt
    1688:	6f 93       	push	r22
    168a:	6e 7f       	andi	r22, 0xFE	; 254
    168c:	6e 5f       	subi	r22, 0xFE	; 254
    168e:	7f 4f       	sbci	r23, 0xFF	; 255
    1690:	8f 4f       	sbci	r24, 0xFF	; 255
    1692:	9f 4f       	sbci	r25, 0xFF	; 255
    1694:	af 4f       	sbci	r26, 0xFF	; 255
    1696:	b1 e0       	ldi	r27, 0x01	; 1
    1698:	3e d0       	rcall	.+124    	; 0x1716 <__ultoa_invert+0x9c>
    169a:	b4 e0       	ldi	r27, 0x04	; 4
    169c:	3c d0       	rcall	.+120    	; 0x1716 <__ultoa_invert+0x9c>
    169e:	67 0f       	add	r22, r23
    16a0:	78 1f       	adc	r23, r24
    16a2:	89 1f       	adc	r24, r25
    16a4:	9a 1f       	adc	r25, r26
    16a6:	a1 1d       	adc	r26, r1
    16a8:	68 0f       	add	r22, r24
    16aa:	79 1f       	adc	r23, r25
    16ac:	8a 1f       	adc	r24, r26
    16ae:	91 1d       	adc	r25, r1
    16b0:	a1 1d       	adc	r26, r1
    16b2:	6a 0f       	add	r22, r26
    16b4:	71 1d       	adc	r23, r1
    16b6:	81 1d       	adc	r24, r1
    16b8:	91 1d       	adc	r25, r1
    16ba:	a1 1d       	adc	r26, r1
    16bc:	20 d0       	rcall	.+64     	; 0x16fe <__ultoa_invert+0x84>
    16be:	09 f4       	brne	.+2      	; 0x16c2 <__ultoa_invert+0x48>
    16c0:	68 94       	set
    16c2:	3f 91       	pop	r19
    16c4:	2a e0       	ldi	r18, 0x0A	; 10
    16c6:	26 9f       	mul	r18, r22
    16c8:	11 24       	eor	r1, r1
    16ca:	30 19       	sub	r19, r0
    16cc:	30 5d       	subi	r19, 0xD0	; 208
    16ce:	31 93       	st	Z+, r19
    16d0:	de f6       	brtc	.-74     	; 0x1688 <__ultoa_invert+0xe>
    16d2:	cf 01       	movw	r24, r30
    16d4:	08 95       	ret
    16d6:	46 2f       	mov	r20, r22
    16d8:	47 70       	andi	r20, 0x07	; 7
    16da:	40 5d       	subi	r20, 0xD0	; 208
    16dc:	41 93       	st	Z+, r20
    16de:	b3 e0       	ldi	r27, 0x03	; 3
    16e0:	0f d0       	rcall	.+30     	; 0x1700 <__ultoa_invert+0x86>
    16e2:	c9 f7       	brne	.-14     	; 0x16d6 <__ultoa_invert+0x5c>
    16e4:	f6 cf       	rjmp	.-20     	; 0x16d2 <__ultoa_invert+0x58>
    16e6:	46 2f       	mov	r20, r22
    16e8:	4f 70       	andi	r20, 0x0F	; 15
    16ea:	40 5d       	subi	r20, 0xD0	; 208
    16ec:	4a 33       	cpi	r20, 0x3A	; 58
    16ee:	18 f0       	brcs	.+6      	; 0x16f6 <__ultoa_invert+0x7c>
    16f0:	49 5d       	subi	r20, 0xD9	; 217
    16f2:	31 fd       	sbrc	r19, 1
    16f4:	40 52       	subi	r20, 0x20	; 32
    16f6:	41 93       	st	Z+, r20
    16f8:	02 d0       	rcall	.+4      	; 0x16fe <__ultoa_invert+0x84>
    16fa:	a9 f7       	brne	.-22     	; 0x16e6 <__ultoa_invert+0x6c>
    16fc:	ea cf       	rjmp	.-44     	; 0x16d2 <__ultoa_invert+0x58>
    16fe:	b4 e0       	ldi	r27, 0x04	; 4
    1700:	a6 95       	lsr	r26
    1702:	97 95       	ror	r25
    1704:	87 95       	ror	r24
    1706:	77 95       	ror	r23
    1708:	67 95       	ror	r22
    170a:	ba 95       	dec	r27
    170c:	c9 f7       	brne	.-14     	; 0x1700 <__ultoa_invert+0x86>
    170e:	00 97       	sbiw	r24, 0x00	; 0
    1710:	61 05       	cpc	r22, r1
    1712:	71 05       	cpc	r23, r1
    1714:	08 95       	ret
    1716:	9b 01       	movw	r18, r22
    1718:	ac 01       	movw	r20, r24
    171a:	0a 2e       	mov	r0, r26
    171c:	06 94       	lsr	r0
    171e:	57 95       	ror	r21
    1720:	47 95       	ror	r20
    1722:	37 95       	ror	r19
    1724:	27 95       	ror	r18
    1726:	ba 95       	dec	r27
    1728:	c9 f7       	brne	.-14     	; 0x171c <__ultoa_invert+0xa2>
    172a:	62 0f       	add	r22, r18
    172c:	73 1f       	adc	r23, r19
    172e:	84 1f       	adc	r24, r20
    1730:	95 1f       	adc	r25, r21
    1732:	a0 1d       	adc	r26, r0
    1734:	08 95       	ret

00001736 <__eerd_block_m162>:
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22

0000173a <__eerd_blraw_m162>:
    173a:	fc 01       	movw	r30, r24
    173c:	e1 99       	sbic	0x1c, 1	; 28
    173e:	fe cf       	rjmp	.-4      	; 0x173c <__eerd_blraw_m162+0x2>
    1740:	06 c0       	rjmp	.+12     	; 0x174e <__eerd_blraw_m162+0x14>
    1742:	ff bb       	out	0x1f, r31	; 31
    1744:	ee bb       	out	0x1e, r30	; 30
    1746:	e0 9a       	sbi	0x1c, 0	; 28
    1748:	31 96       	adiw	r30, 0x01	; 1
    174a:	0d b2       	in	r0, 0x1d	; 29
    174c:	0d 92       	st	X+, r0
    174e:	41 50       	subi	r20, 0x01	; 1
    1750:	50 40       	sbci	r21, 0x00	; 0
    1752:	b8 f7       	brcc	.-18     	; 0x1742 <__eerd_blraw_m162+0x8>
    1754:	08 95       	ret

00001756 <__eewr_byte_m162>:
    1756:	26 2f       	mov	r18, r22

00001758 <__eewr_r18_m162>:
    1758:	e1 99       	sbic	0x1c, 1	; 28
    175a:	fe cf       	rjmp	.-4      	; 0x1758 <__eewr_r18_m162>
    175c:	9f bb       	out	0x1f, r25	; 31
    175e:	8e bb       	out	0x1e, r24	; 30
    1760:	2d bb       	out	0x1d, r18	; 29
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	f8 94       	cli
    1766:	e2 9a       	sbi	0x1c, 2	; 28
    1768:	e1 9a       	sbi	0x1c, 1	; 28
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	01 96       	adiw	r24, 0x01	; 1
    176e:	08 95       	ret

00001770 <__prologue_saves__>:
    1770:	2f 92       	push	r2
    1772:	3f 92       	push	r3
    1774:	4f 92       	push	r4
    1776:	5f 92       	push	r5
    1778:	6f 92       	push	r6
    177a:	7f 92       	push	r7
    177c:	8f 92       	push	r8
    177e:	9f 92       	push	r9
    1780:	af 92       	push	r10
    1782:	bf 92       	push	r11
    1784:	cf 92       	push	r12
    1786:	df 92       	push	r13
    1788:	ef 92       	push	r14
    178a:	ff 92       	push	r15
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	cf 93       	push	r28
    1792:	df 93       	push	r29
    1794:	cd b7       	in	r28, 0x3d	; 61
    1796:	de b7       	in	r29, 0x3e	; 62
    1798:	ca 1b       	sub	r28, r26
    179a:	db 0b       	sbc	r29, r27
    179c:	0f b6       	in	r0, 0x3f	; 63
    179e:	f8 94       	cli
    17a0:	de bf       	out	0x3e, r29	; 62
    17a2:	0f be       	out	0x3f, r0	; 63
    17a4:	cd bf       	out	0x3d, r28	; 61
    17a6:	09 94       	ijmp

000017a8 <__epilogue_restores__>:
    17a8:	2a 88       	ldd	r2, Y+18	; 0x12
    17aa:	39 88       	ldd	r3, Y+17	; 0x11
    17ac:	48 88       	ldd	r4, Y+16	; 0x10
    17ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    17b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    17b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    17b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    17b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    17b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    17ba:	b9 84       	ldd	r11, Y+9	; 0x09
    17bc:	c8 84       	ldd	r12, Y+8	; 0x08
    17be:	df 80       	ldd	r13, Y+7	; 0x07
    17c0:	ee 80       	ldd	r14, Y+6	; 0x06
    17c2:	fd 80       	ldd	r15, Y+5	; 0x05
    17c4:	0c 81       	ldd	r16, Y+4	; 0x04
    17c6:	1b 81       	ldd	r17, Y+3	; 0x03
    17c8:	aa 81       	ldd	r26, Y+2	; 0x02
    17ca:	b9 81       	ldd	r27, Y+1	; 0x01
    17cc:	ce 0f       	add	r28, r30
    17ce:	d1 1d       	adc	r29, r1
    17d0:	0f b6       	in	r0, 0x3f	; 63
    17d2:	f8 94       	cli
    17d4:	de bf       	out	0x3e, r29	; 62
    17d6:	0f be       	out	0x3f, r0	; 63
    17d8:	cd bf       	out	0x3d, r28	; 61
    17da:	ed 01       	movw	r28, r26
    17dc:	08 95       	ret

000017de <_exit>:
    17de:	f8 94       	cli

000017e0 <__stop_program>:
    17e0:	ff cf       	rjmp	.-2      	; 0x17e0 <__stop_program>
