
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00001536  000015ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001536  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  008001a0  008001a0  0000166a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000166a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  000016c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001992  00000000  00000000  000018c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b87  00000000  00000000  00003258  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000090b  00000000  00000000  00003ddf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000404  00000000  00000000  000046ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000056a  00000000  00000000  00004af0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a03  00000000  00000000  0000505a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000188  00000000  00000000  00005a5d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_init+0x56>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e6 e3       	ldi	r30, 0x36	; 54
     37c:	f5 e1       	ldi	r31, 0x15	; 21
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a0 3a       	cpi	r26, 0xA0	; 160
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a0 ea       	ldi	r26, 0xA0	; 160
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 3d       	cpi	r26, 0xD3	; 211
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <main>
     39e:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_read>:
     3a6:	8c 5f       	subi	r24, 0xFC	; 252
     3a8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	8a 95       	dec	r24
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <ADC_read+0x8>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <ADC_read+0xe>
     3b4:	80 91 00 14 	lds	r24, 0x1400
     3b8:	08 95       	ret

000003ba <main>:
#include "can_com.h"
#include "MCP2515.h"


int main(void)
{
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	64 97       	sbiw	r28, 0x14	; 20
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61

	USART_init(MYUBRR);
     3ce:	8f e1       	ldi	r24, 0x1F	; 31
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <USART_init>
	// Activate external memory
	MCUCR |= (1 << SRE);
     3d6:	85 b7       	in	r24, 0x35	; 53
     3d8:	80 68       	ori	r24, 0x80	; 128
     3da:	85 bf       	out	0x35, r24	; 53
	
		
	joy_init();
     3dc:	0e 94 2f 03 	call	0x65e	; 0x65e <joy_init>
	
	oled_init();
     3e0:	0e 94 76 05 	call	0xaec	; 0xaec <oled_init>

	

	
	
	can_init();
     3e4:	0e 94 39 02 	call	0x472	; 0x472 <can_init>
	mcp2515_bit_modify(MCP_CANCTRL,0xE0, 0x40);
     3e8:	40 e4       	ldi	r20, 0x40	; 64
     3ea:	60 ee       	ldi	r22, 0xE0	; 224
     3ec:	8f e0       	ldi	r24, 0x0F	; 15
     3ee:	0e 94 be 02 	call	0x57c	; 0x57c <mcp2515_bit_modify>
	can_message_t msg1 = {'f', 0x8, "hallo123"}; 
     3f2:	8a e0       	ldi	r24, 0x0A	; 10
     3f4:	e6 e0       	ldi	r30, 0x06	; 6
     3f6:	f1 e0       	ldi	r31, 0x01	; 1
     3f8:	de 01       	movw	r26, r28
     3fa:	11 96       	adiw	r26, 0x01	; 1
     3fc:	01 90       	ld	r0, Z+
     3fe:	0d 92       	st	X+, r0
     400:	8a 95       	dec	r24
     402:	e1 f7       	brne	.-8      	; 0x3fc <main+0x42>
	can_message_t msg2;
	
	can_message_send(&msg1);
     404:	ce 01       	movw	r24, r28
     406:	01 96       	adiw	r24, 0x01	; 1
     408:	0e 94 46 02 	call	0x48c	; 0x48c <can_message_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     40c:	8f ef       	ldi	r24, 0xFF	; 255
     40e:	9f eb       	ldi	r25, 0xBF	; 191
     410:	01 97       	sbiw	r24, 0x01	; 1
     412:	f1 f7       	brne	.-4      	; 0x410 <main+0x56>
     414:	00 c0       	rjmp	.+0      	; 0x416 <main+0x5c>
     416:	00 00       	nop
	_delay_ms(40);
	can_message_receive(&msg2);
     418:	ce 01       	movw	r24, r28
     41a:	0b 96       	adiw	r24, 0x0b	; 11
     41c:	0e 94 6e 02 	call	0x4dc	; 0x4dc <can_message_receive>
	printf("ID: %d ,Length: %d, ",msg2.id,msg2.length);
     420:	8c 85       	ldd	r24, Y+12	; 0x0c
     422:	1f 92       	push	r1
     424:	8f 93       	push	r24
     426:	8b 85       	ldd	r24, Y+11	; 0x0b
     428:	1f 92       	push	r1
     42a:	8f 93       	push	r24
     42c:	8a e6       	ldi	r24, 0x6A	; 106
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	9f 93       	push	r25
     432:	8f 93       	push	r24
     434:	0e 94 58 06 	call	0xcb0	; 0xcb0 <printf>
     438:	8e 01       	movw	r16, r28
     43a:	03 5f       	subi	r16, 0xF3	; 243
     43c:	1f 4f       	sbci	r17, 0xFF	; 255
     43e:	7e 01       	movw	r14, r28
     440:	95 e1       	ldi	r25, 0x15	; 21
     442:	e9 0e       	add	r14, r25
     444:	f1 1c       	adc	r15, r1
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
     44a:	0f 90       	pop	r0
     44c:	0f 90       	pop	r0
     44e:	0f 90       	pop	r0
     450:	0f 90       	pop	r0
	int i ;
	for (i=0; i<8;i++)
	{
		printf("%c", msg2.data[i]);
     452:	f8 01       	movw	r30, r16
     454:	81 91       	ld	r24, Z+
     456:	8f 01       	movw	r16, r30
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <putchar>
	can_message_send(&msg1);
	_delay_ms(40);
	can_message_receive(&msg2);
	printf("ID: %d ,Length: %d, ",msg2.id,msg2.length);
	int i ;
	for (i=0; i<8;i++)
     45e:	0e 15       	cp	r16, r14
     460:	1f 05       	cpc	r17, r15
     462:	b9 f7       	brne	.-18     	; 0x452 <main+0x98>
	{
		printf("%c", msg2.data[i]);
	}
	printf("\n");
     464:	8a e0       	ldi	r24, 0x0A	; 10
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <putchar>
	
	
	menu_init();
     46c:	0e 94 67 04 	call	0x8ce	; 0x8ce <menu_init>
     470:	ff cf       	rjmp	.-2      	; 0x470 <main+0xb6>

00000472 <can_init>:
#include "MCP2515.h"

void can_init()
{
	
	mcp2515_init();
     472:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <mcp2515_init>
	
	mcp2515_bit_modify(MCP_RXF0SIDH, 0xff , 0x00);
     476:	40 e0       	ldi	r20, 0x00	; 0
     478:	6f ef       	ldi	r22, 0xFF	; 255
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	0e 94 be 02 	call	0x57c	; 0x57c <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXF0SIDL, 0xE0 , 0x00);
     480:	40 e0       	ldi	r20, 0x00	; 0
     482:	60 ee       	ldi	r22, 0xE0	; 224
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	0e 94 be 02 	call	0x57c	; 0x57c <mcp2515_bit_modify>
     48a:	08 95       	ret

0000048c <can_message_send>:
	
}


void can_message_send(can_message_t *message)
{
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	ec 01       	movw	r28, r24
	char i;
	
	// ID
	mcp2515_write(MCP_TXB0CTRL + 1,message->id);
     494:	68 81       	ld	r22, Y
     496:	81 e3       	ldi	r24, 0x31	; 49
     498:	0e 94 9f 02 	call	0x53e	; 0x53e <mcp2515_write>
	mcp2515_write(0x32,0x00);
     49c:	60 e0       	ldi	r22, 0x00	; 0
     49e:	82 e3       	ldi	r24, 0x32	; 50
     4a0:	0e 94 9f 02 	call	0x53e	; 0x53e <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
     4a4:	69 81       	ldd	r22, Y+1	; 0x01
     4a6:	85 e3       	ldi	r24, 0x35	; 53
     4a8:	0e 94 9f 02 	call	0x53e	; 0x53e <mcp2515_write>
	
	// Data
	for (i = 0; i< message->length; i++){
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	88 23       	and	r24, r24
     4b0:	69 f0       	breq	.+26     	; 0x4cc <can_message_send+0x40>
     4b2:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
     4b4:	fe 01       	movw	r30, r28
     4b6:	e1 0f       	add	r30, r17
     4b8:	f1 1d       	adc	r31, r1
     4ba:	62 81       	ldd	r22, Z+2	; 0x02
     4bc:	86 e3       	ldi	r24, 0x36	; 54
     4be:	81 0f       	add	r24, r17
     4c0:	0e 94 9f 02 	call	0x53e	; 0x53e <mcp2515_write>
	
	//Length
	mcp2515_write(MCP_TXB0CTRL + 5,message->length);
	
	// Data
	for (i = 0; i< message->length; i++){
     4c4:	1f 5f       	subi	r17, 0xFF	; 255
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	18 17       	cp	r17, r24
     4ca:	a0 f3       	brcs	.-24     	; 0x4b4 <can_message_send+0x28>
		mcp2515_write(MCP_TXB0CTRL + 6 + i, *((message->data)+i) );
	}
	
	mcp2515_request_to_send(MCP_RTS_TX0);
     4cc:	81 e8       	ldi	r24, 0x81	; 129
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_request_to_send>
}
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	1f 91       	pop	r17
     4da:	08 95       	ret

000004dc <can_message_receive>:

void can_message_receive(can_message_t* message)
{
     4dc:	1f 93       	push	r17
     4de:	cf 93       	push	r28
     4e0:	df 93       	push	r29
     4e2:	ec 01       	movw	r28, r24
	char i;
	
	// ID
	message->id = mcp2515_read(MCP_RXB0CTRL + 1);
     4e4:	81 e6       	ldi	r24, 0x61	; 97
     4e6:	0e 94 8d 02 	call	0x51a	; 0x51a <mcp2515_read>
     4ea:	88 83       	st	Y, r24
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL + 5);
     4ec:	85 e6       	ldi	r24, 0x65	; 101
     4ee:	0e 94 8d 02 	call	0x51a	; 0x51a <mcp2515_read>
     4f2:	89 83       	std	Y+1, r24	; 0x01
	
	// Data
	for(i=0;i<message->length;i++)
     4f4:	88 23       	and	r24, r24
     4f6:	69 f0       	breq	.+26     	; 0x512 <__stack+0x13>
     4f8:	10 e0       	ldi	r17, 0x00	; 0
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL + 6 + i );
     4fa:	86 e6       	ldi	r24, 0x66	; 102
     4fc:	81 0f       	add	r24, r17
     4fe:	0e 94 8d 02 	call	0x51a	; 0x51a <mcp2515_read>
     502:	fe 01       	movw	r30, r28
     504:	e1 0f       	add	r30, r17
     506:	f1 1d       	adc	r31, r1
     508:	82 83       	std	Z+2, r24	; 0x02
	
	// Length
	message->length = mcp2515_read(MCP_RXB0CTRL + 5);
	
	// Data
	for(i=0;i<message->length;i++)
     50a:	1f 5f       	subi	r17, 0xFF	; 255
     50c:	89 81       	ldd	r24, Y+1	; 0x01
     50e:	18 17       	cp	r17, r24
     510:	a0 f3       	brcs	.-24     	; 0x4fa <can_message_receive+0x1e>
	{
		*((message->data)+i)  = mcp2515_read(MCP_RXB0CTRL + 6 + i );
	}
	
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	1f 91       	pop	r17
     518:	08 95       	ret

0000051a <mcp2515_read>:
	{
		printf("MCP2515 is not in config mode!\n");
	}
	
}
char mcp2515_read (char addr){
     51a:	cf 93       	push	r28
     51c:	c8 2f       	mov	r28, r24
	char result;
	
	spi_select();
     51e:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	
	spi_transmit(MCP_READ);
     522:	83 e0       	ldi	r24, 0x03	; 3
     524:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(addr);
     528:	8c 2f       	mov	r24, r28
     52a:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	result = spi_receive();
     52e:	0e 94 c5 05 	call	0xb8a	; 0xb8a <spi_receive>
     532:	c8 2f       	mov	r28, r24
	
	spi_deselect();
     534:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
	
	return result;
}
     538:	8c 2f       	mov	r24, r28
     53a:	cf 91       	pop	r28
     53c:	08 95       	ret

0000053e <mcp2515_write>:

void mcp2515_write(char addr, char data)
{
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	d8 2f       	mov	r29, r24
     544:	c6 2f       	mov	r28, r22
	spi_select();
     546:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	
	spi_transmit(MCP_WRITE);
     54a:	82 e0       	ldi	r24, 0x02	; 2
     54c:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(addr);
     550:	8d 2f       	mov	r24, r29
     552:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(data);
     556:	8c 2f       	mov	r24, r28
     558:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	
	spi_deselect();
     55c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
	
}
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <mcp2515_request_to_send>:

void mcp2515_request_to_send(int reg)
{
     566:	cf 93       	push	r28
     568:	c8 2f       	mov	r28, r24
	spi_select();
     56a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	
	spi_transmit(reg);
     56e:	8c 2f       	mov	r24, r28
     570:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	
	spi_deselect();
     574:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
}
     578:	cf 91       	pop	r28
     57a:	08 95       	ret

0000057c <mcp2515_bit_modify>:

void mcp2515_bit_modify(char addr, char mask_byte, char data)
{
     57c:	1f 93       	push	r17
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
     582:	18 2f       	mov	r17, r24
     584:	d6 2f       	mov	r29, r22
     586:	c4 2f       	mov	r28, r20
	spi_select();
     588:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	
	spi_transmit(MCP_BITMOD);
     58c:	85 e0       	ldi	r24, 0x05	; 5
     58e:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(addr);
     592:	81 2f       	mov	r24, r17
     594:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(mask_byte);
     598:	8d 2f       	mov	r24, r29
     59a:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(data);
     59e:	8c 2f       	mov	r24, r28
     5a0:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	
	spi_deselect();
     5a4:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
}
     5a8:	df 91       	pop	r29
     5aa:	cf 91       	pop	r28
     5ac:	1f 91       	pop	r17
     5ae:	08 95       	ret

000005b0 <mcp2515_reset>:

void mcp2515_reset()
{
	spi_select();
     5b0:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	
	spi_transmit(MCP_RESET);
     5b4:	80 ec       	ldi	r24, 0xC0	; 192
     5b6:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	
	spi_deselect();
     5ba:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
     5be:	08 95       	ret

000005c0 <mcp2515_read_status>:
}

char mcp2515_read_status()
{
     5c0:	cf 93       	push	r28
	char output;
	spi_select();
     5c2:	0e 94 bd 05 	call	0xb7a	; 0xb7a <spi_select>
	spi_transmit(MCP_READ);
     5c6:	83 e0       	ldi	r24, 0x03	; 3
     5c8:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	spi_transmit(MCP_CANSTAT);
     5cc:	8e e0       	ldi	r24, 0x0E	; 14
     5ce:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
	output = spi_receive();
     5d2:	0e 94 c5 05 	call	0xb8a	; 0xb8a <spi_receive>
     5d6:	c8 2f       	mov	r28, r24
	
	spi_deselect();
     5d8:	0e 94 bf 05 	call	0xb7e	; 0xb7e <spi_deselect>
	return output;
}
     5dc:	8c 2f       	mov	r24, r28
     5de:	cf 91       	pop	r28
     5e0:	08 95       	ret

000005e2 <mcp2515_init>:
#include "spi_control.h"
#include <stdio.h>

void mcp2515_init(){
	char status;
	spi_init();
     5e2:	0e 94 ca 05 	call	0xb94	; 0xb94 <spi_init>
	mcp2515_reset();
     5e6:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <mcp2515_reset>
	
	status = mcp2515_read_status();
     5ea:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <mcp2515_read_status>
	if ((status & MODE_MASK) != MODE_CONFIG)
     5ee:	80 7e       	andi	r24, 0xE0	; 224
     5f0:	80 38       	cpi	r24, 0x80	; 128
     5f2:	21 f0       	breq	.+8      	; 0x5fc <mcp2515_init+0x1a>
	{
		printf("MCP2515 is not in config mode!\n");
     5f4:	8f e7       	ldi	r24, 0x7F	; 127
     5f6:	91 e0       	ldi	r25, 0x01	; 1
     5f8:	0e 94 73 06 	call	0xce6	; 0xce6 <puts>
     5fc:	08 95       	ret

000005fe <joy_calibrate>:
char x_ref = 0;
char y_ref = 0;



void joy_calibrate(){
     5fe:	ef 92       	push	r14
     600:	ff 92       	push	r15
     602:	0f 93       	push	r16
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	ca e0       	ldi	r28, 0x0A	; 10
     60c:	d0 e0       	ldi	r29, 0x00	; 0
	int sum_x=0;
	int sum_y=0;
     60e:	00 e0       	ldi	r16, 0x00	; 0
     610:	10 e0       	ldi	r17, 0x00	; 0
char y_ref = 0;



void joy_calibrate(){
	int sum_x=0;
     612:	e1 2c       	mov	r14, r1
     614:	f1 2c       	mov	r15, r1
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
		sum_x += ADC_read(1);
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     61e:	e8 0e       	add	r14, r24
     620:	f1 1c       	adc	r15, r1
		sum_y += ADC_read(0);
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     62a:	08 0f       	add	r16, r24
     62c:	11 1d       	adc	r17, r1
     62e:	21 97       	sbiw	r28, 0x01	; 1

void joy_calibrate(){
	int sum_x=0;
	int sum_y=0;
	int i;
	for(i=0;i<10;i++){
     630:	20 97       	sbiw	r28, 0x00	; 0
     632:	89 f7       	brne	.-30     	; 0x616 <joy_calibrate+0x18>
		sum_x += ADC_read(1);
		sum_y += ADC_read(0);
	}
	x_ref = sum_x/10;
     634:	2a e0       	ldi	r18, 0x0A	; 10
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	c7 01       	movw	r24, r14
     63a:	b9 01       	movw	r22, r18
     63c:	0e 94 e5 05 	call	0xbca	; 0xbca <__divmodhi4>
     640:	60 93 a1 01 	sts	0x01A1, r22
	y_ref = sum_y/10;
     644:	c8 01       	movw	r24, r16
     646:	b9 01       	movw	r22, r18
     648:	0e 94 e5 05 	call	0xbca	; 0xbca <__divmodhi4>
     64c:	60 93 a0 01 	sts	0x01A0, r22
	
}
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	ff 90       	pop	r15
     65a:	ef 90       	pop	r14
     65c:	08 95       	ret

0000065e <joy_init>:

void joy_init(){
	joy_calibrate();
     65e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <joy_calibrate>
     662:	08 95       	ret

00000664 <get_position>:
	
}

joy_position_t get_position(){
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
	joy_position_t position;
	position.x_pos = (ADC_read(1) - x_ref)*100/128;
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	20 91 a1 01 	lds	r18, 0x01A1
     676:	82 1b       	sub	r24, r18
     678:	91 09       	sbc	r25, r1
     67a:	44 e6       	ldi	r20, 0x64	; 100
     67c:	48 9f       	mul	r20, r24
     67e:	90 01       	movw	r18, r0
     680:	49 9f       	mul	r20, r25
     682:	30 0d       	add	r19, r0
     684:	11 24       	eor	r1, r1
     686:	33 23       	and	r19, r19
     688:	14 f4       	brge	.+4      	; 0x68e <get_position+0x2a>
     68a:	21 58       	subi	r18, 0x81	; 129
     68c:	3f 4f       	sbci	r19, 0xFF	; 255
     68e:	e9 01       	movw	r28, r18
     690:	cc 0f       	add	r28, r28
     692:	cd 2f       	mov	r28, r29
     694:	cc 1f       	adc	r28, r28
     696:	dd 0b       	sbc	r29, r29
	position.y_pos = (ADC_read(0) - y_ref)*100/128;
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_read>
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	20 91 a0 01 	lds	r18, 0x01A0
     6a6:	82 1b       	sub	r24, r18
     6a8:	91 09       	sbc	r25, r1
     6aa:	44 e6       	ldi	r20, 0x64	; 100
     6ac:	48 9f       	mul	r20, r24
     6ae:	90 01       	movw	r18, r0
     6b0:	49 9f       	mul	r20, r25
     6b2:	30 0d       	add	r19, r0
     6b4:	11 24       	eor	r1, r1
     6b6:	33 23       	and	r19, r19
     6b8:	14 f4       	brge	.+4      	; 0x6be <get_position+0x5a>
     6ba:	21 58       	subi	r18, 0x81	; 129
     6bc:	3f 4f       	sbci	r19, 0xFF	; 255
	return position;
     6be:	be 01       	movw	r22, r28
     6c0:	c9 01       	movw	r24, r18
     6c2:	88 0f       	add	r24, r24
     6c4:	89 2f       	mov	r24, r25
     6c6:	88 1f       	adc	r24, r24
     6c8:	99 0b       	sbc	r25, r25
}
     6ca:	df 91       	pop	r29
     6cc:	cf 91       	pop	r28
     6ce:	08 95       	ret

000006d0 <get_direction>:


direction get_direction(){
	
	joy_position_t position = get_position();
     6d0:	0e 94 32 03 	call	0x664	; 0x664 <get_position>
	
	if (position.x_pos > 70)
     6d4:	67 34       	cpi	r22, 0x47	; 71
     6d6:	71 05       	cpc	r23, r1
     6d8:	64 f4       	brge	.+24     	; 0x6f2 <get_direction+0x22>
		{

			return RIGHT;
		}
	else if (position.x_pos < -70)
     6da:	6a 3b       	cpi	r22, 0xBA	; 186
     6dc:	4f ef       	ldi	r20, 0xFF	; 255
     6de:	74 07       	cpc	r23, r20
     6e0:	54 f0       	brlt	.+20     	; 0x6f6 <get_direction+0x26>
		{

			return LEFT;
		}
	else if (position.y_pos > 70)
     6e2:	87 34       	cpi	r24, 0x47	; 71
     6e4:	91 05       	cpc	r25, r1
     6e6:	4c f4       	brge	.+18     	; 0x6fa <get_direction+0x2a>
		{

			return UP;
		}
	else if (position.y_pos < -70)
     6e8:	8a 3b       	cpi	r24, 0xBA	; 186
     6ea:	9f 4f       	sbci	r25, 0xFF	; 255
     6ec:	44 f4       	brge	.+16     	; 0x6fe <get_direction+0x2e>
		{

			return DOWN;
     6ee:	83 e0       	ldi	r24, 0x03	; 3
     6f0:	08 95       	ret
	joy_position_t position = get_position();
	
	if (position.x_pos > 70)
		{

			return RIGHT;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	08 95       	ret
		}
	else if (position.x_pos < -70)
		{

			return LEFT;
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	08 95       	ret
		}
	else if (position.y_pos > 70)
		{

			return UP;
     6fa:	82 e0       	ldi	r24, 0x02	; 2
     6fc:	08 95       	ret
			return DOWN;
		}
	else
		{

			return NEUTRAL;
     6fe:	84 e0       	ldi	r24, 0x04	; 4
		}
	
}
     700:	08 95       	ret

00000702 <menu_print>:
menu_t* current;
int next;
menu_t menu;


void menu_print(menu_t* object){
     702:	ef 92       	push	r14
     704:	ff 92       	push	r15
     706:	0f 93       	push	r16
     708:	1f 93       	push	r17
     70a:	cf 93       	push	r28
     70c:	df 93       	push	r29
     70e:	7c 01       	movw	r14, r24
	oled_clear_all();
     710:	0e 94 b0 05 	call	0xb60	; 0xb60 <oled_clear_all>
	oled_goto(0,0);
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
	oled_print(object->name);
     71c:	c7 01       	movw	r24, r14
     71e:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
	oled_goto(next,0);
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	80 91 c7 01 	lds	r24, 0x01C7
     728:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
	oled_print("-");
     72c:	8e e9       	ldi	r24, 0x9E	; 158
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     734:	f7 01       	movw	r30, r14
     736:	87 85       	ldd	r24, Z+15	; 0x0f
     738:	90 89       	ldd	r25, Z+16	; 0x10
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	02 97       	sbiw	r24, 0x02	; 2
     73e:	c4 f0       	brlt	.+48     	; 0x770 <menu_print+0x6e>
     740:	87 01       	movw	r16, r14
     742:	0b 5e       	subi	r16, 0xEB	; 235
     744:	1f 4f       	sbci	r17, 0xFF	; 255
     746:	c1 e0       	ldi	r28, 0x01	; 1
     748:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_goto(i,8);
     74a:	68 e0       	ldi	r22, 0x08	; 8
     74c:	8c 2f       	mov	r24, r28
     74e:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
		oled_print((object->children[i-1])->name);
     752:	f8 01       	movw	r30, r16
     754:	81 91       	ld	r24, Z+
     756:	91 91       	ld	r25, Z+
     758:	8f 01       	movw	r16, r30
     75a:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
	oled_print(object->name);
	oled_goto(next,0);
	oled_print("-");
	
	int i;
	for (i=1;i<object->number_children+1;i++)
     75e:	21 96       	adiw	r28, 0x01	; 1
     760:	f7 01       	movw	r30, r14
     762:	27 85       	ldd	r18, Z+15	; 0x0f
     764:	30 89       	ldd	r19, Z+16	; 0x10
     766:	2f 5f       	subi	r18, 0xFF	; 255
     768:	3f 4f       	sbci	r19, 0xFF	; 255
     76a:	c2 17       	cp	r28, r18
     76c:	d3 07       	cpc	r29, r19
     76e:	6c f3       	brlt	.-38     	; 0x74a <menu_print+0x48>
	{
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	0f 91       	pop	r16
     778:	ff 90       	pop	r15
     77a:	ef 90       	pop	r14
     77c:	08 95       	ret

0000077e <update_next>:
		
	}
}

void update_next(direction dir){
	if (dir == DOWN) {
     77e:	83 30       	cpi	r24, 0x03	; 3
     780:	41 f5       	brne	.+80     	; 0x7d2 <update_next+0x54>
		if (next+1 <= current->number_children){
     782:	80 91 c7 01 	lds	r24, 0x01C7
     786:	90 91 c8 01 	lds	r25, 0x01C8
     78a:	ac 01       	movw	r20, r24
     78c:	4f 5f       	subi	r20, 0xFF	; 255
     78e:	5f 4f       	sbci	r21, 0xFF	; 255
     790:	e0 91 c5 01 	lds	r30, 0x01C5
     794:	f0 91 c6 01 	lds	r31, 0x01C6
     798:	27 85       	ldd	r18, Z+15	; 0x0f
     79a:	30 89       	ldd	r19, Z+16	; 0x10
     79c:	24 17       	cp	r18, r20
     79e:	35 07       	cpc	r19, r21
     7a0:	b4 f1       	brlt	.+108    	; 0x80e <update_next+0x90>
			oled_goto(next,0);
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
			oled_print(" ");
     7a8:	8d e7       	ldi	r24, 0x7D	; 125
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
			next++;
     7b0:	80 91 c7 01 	lds	r24, 0x01C7
     7b4:	90 91 c8 01 	lds	r25, 0x01C8
     7b8:	01 96       	adiw	r24, 0x01	; 1
     7ba:	90 93 c8 01 	sts	0x01C8, r25
     7be:	80 93 c7 01 	sts	0x01C7, r24
			oled_goto(next,0);
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
			oled_print("-");
     7c8:	8e e9       	ldi	r24, 0x9E	; 158
     7ca:	91 e0       	ldi	r25, 0x01	; 1
     7cc:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
     7d0:	08 95       	ret
		}
		
	}
	else{
		if (next > 1){
     7d2:	80 91 c7 01 	lds	r24, 0x01C7
     7d6:	90 91 c8 01 	lds	r25, 0x01C8
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	91 05       	cpc	r25, r1
     7de:	bc f0       	brlt	.+46     	; 0x80e <update_next+0x90>
			oled_goto(next,0);
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
			oled_print(" ");
     7e6:	8d e7       	ldi	r24, 0x7D	; 125
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
			next--;
     7ee:	80 91 c7 01 	lds	r24, 0x01C7
     7f2:	90 91 c8 01 	lds	r25, 0x01C8
     7f6:	01 97       	sbiw	r24, 0x01	; 1
     7f8:	90 93 c8 01 	sts	0x01C8, r25
     7fc:	80 93 c7 01 	sts	0x01C7, r24
			oled_goto(next,0);
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
			oled_print("-");
     806:	8e e9       	ldi	r24, 0x9E	; 158
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_print>
     80e:	08 95       	ret

00000810 <menu_handler>:
		}
	}	
}

void menu_handler(direction* curr_dir, direction* last_dir)
{
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	8c 01       	movw	r16, r24
     81a:	eb 01       	movw	r28, r22
	
	*curr_dir = get_direction();
     81c:	0e 94 68 03 	call	0x6d0	; 0x6d0 <get_direction>
     820:	f8 01       	movw	r30, r16
     822:	80 83       	st	Z, r24
	if (*curr_dir != *last_dir)
     824:	98 81       	ld	r25, Y
     826:	89 17       	cp	r24, r25
     828:	d9 f1       	breq	.+118    	; 0x8a0 <menu_handler+0x90>
	{
		switch (*curr_dir){
     82a:	81 30       	cpi	r24, 0x01	; 1
     82c:	31 f0       	breq	.+12     	; 0x83a <menu_handler+0x2a>
     82e:	e0 f0       	brcs	.+56     	; 0x868 <menu_handler+0x58>
     830:	82 30       	cpi	r24, 0x02	; 2
     832:	79 f1       	breq	.+94     	; 0x892 <menu_handler+0x82>
     834:	83 30       	cpi	r24, 0x03	; 3
     836:	89 f1       	breq	.+98     	; 0x89a <menu_handler+0x8a>
     838:	33 c0       	rjmp	.+102    	; 0x8a0 <menu_handler+0x90>
			case RIGHT:
			//if (current->children[next]->number_children == 0){
			//current->children[next]->fnc_pointer();
			//}
			
			if (next == 3)
     83a:	80 91 c7 01 	lds	r24, 0x01C7
     83e:	90 91 c8 01 	lds	r25, 0x01C8
     842:	03 97       	sbiw	r24, 0x03	; 3
     844:	69 f5       	brne	.+90     	; 0x8a0 <menu_handler+0x90>
			{
				current = menu.children[next-1];
     846:	80 91 bb 01 	lds	r24, 0x01BB
     84a:	90 91 bc 01 	lds	r25, 0x01BC
     84e:	90 93 c6 01 	sts	0x01C6, r25
     852:	80 93 c5 01 	sts	0x01C5, r24
				
				next = 1;
     856:	21 e0       	ldi	r18, 0x01	; 1
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	30 93 c8 01 	sts	0x01C8, r19
     85e:	20 93 c7 01 	sts	0x01C7, r18
				menu_print(current);
     862:	0e 94 81 03 	call	0x702	; 0x702 <menu_print>
     866:	1c c0       	rjmp	.+56     	; 0x8a0 <menu_handler+0x90>
			}

			break;
			case LEFT:
			if (current->parent != NULL){
     868:	e0 91 c5 01 	lds	r30, 0x01C5
     86c:	f0 91 c6 01 	lds	r31, 0x01C6
     870:	83 89       	ldd	r24, Z+19	; 0x13
     872:	94 89       	ldd	r25, Z+20	; 0x14
     874:	00 97       	sbiw	r24, 0x00	; 0
     876:	a1 f0       	breq	.+40     	; 0x8a0 <menu_handler+0x90>
				current = current->parent;
     878:	90 93 c6 01 	sts	0x01C6, r25
     87c:	80 93 c5 01 	sts	0x01C5, r24
				next = 1;
     880:	21 e0       	ldi	r18, 0x01	; 1
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	30 93 c8 01 	sts	0x01C8, r19
     888:	20 93 c7 01 	sts	0x01C7, r18
				menu_print(current);
     88c:	0e 94 81 03 	call	0x702	; 0x702 <menu_print>
     890:	07 c0       	rjmp	.+14     	; 0x8a0 <menu_handler+0x90>
			}
			break;
			case UP:
			
			update_next(*curr_dir);
     892:	82 e0       	ldi	r24, 0x02	; 2
     894:	0e 94 bf 03 	call	0x77e	; 0x77e <update_next>
			break;
     898:	03 c0       	rjmp	.+6      	; 0x8a0 <menu_handler+0x90>
			case DOWN:
			
			update_next(*curr_dir);
     89a:	83 e0       	ldi	r24, 0x03	; 3
     89c:	0e 94 bf 03 	call	0x77e	; 0x77e <update_next>
			break;
			default:
			break;
		}
	}
	*last_dir = *curr_dir;
     8a0:	f8 01       	movw	r30, r16
     8a2:	80 81       	ld	r24, Z
     8a4:	88 83       	st	Y, r24
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	0f 91       	pop	r16
     8ae:	08 95       	ret

000008b0 <menu_fsm>:
	menu_fsm();
	
}


void menu_fsm(){
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	00 d0       	rcall	.+0      	; 0x8b6 <menu_fsm+0x6>
     8b6:	cd b7       	in	r28, 0x3d	; 61
     8b8:	de b7       	in	r29, 0x3e	; 62
	direction curr_dir;
	direction last_dir = NEUTRAL;
     8ba:	84 e0       	ldi	r24, 0x04	; 4
     8bc:	8a 83       	std	Y+2, r24	; 0x02
	while(1){
		menu_handler(&curr_dir, &last_dir);
     8be:	be 01       	movw	r22, r28
     8c0:	6e 5f       	subi	r22, 0xFE	; 254
     8c2:	7f 4f       	sbci	r23, 0xFF	; 255
     8c4:	ce 01       	movw	r24, r28
     8c6:	01 96       	adiw	r24, 0x01	; 1
     8c8:	0e 94 08 04 	call	0x810	; 0x810 <menu_handler>
     8cc:	f8 cf       	rjmp	.-16     	; 0x8be <menu_fsm+0xe>

000008ce <menu_init>:
		oled_goto(i,8);
		oled_print((object->children[i-1])->name);
	}
}

void menu_init(){
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	cd b7       	in	r28, 0x3d	; 61
     8d4:	de b7       	in	r29, 0x3e	; 62
     8d6:	c2 5d       	subi	r28, 0xD2	; 210
     8d8:	d1 09       	sbc	r29, r1
     8da:	0f b6       	in	r0, 0x3f	; 63
     8dc:	f8 94       	cli
     8de:	de bf       	out	0x3e, r29	; 62
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	cd bf       	out	0x3d, r28	; 61
	
	menu_t sub3sub1 = {"Calibrate",0,NULL,NULL,{}};
     8e4:	0f 2e       	mov	r0, r31
     8e6:	f3 e2       	ldi	r31, 0x23	; 35
     8e8:	cf 2e       	mov	r12, r31
     8ea:	f0 2d       	mov	r31, r0
     8ec:	ce 01       	movw	r24, r28
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	dc 01       	movw	r26, r24
     8f2:	ec 2d       	mov	r30, r12
     8f4:	1d 92       	st	X+, r1
     8f6:	ea 95       	dec	r30
     8f8:	e9 f7       	brne	.-6      	; 0x8f4 <menu_init+0x26>
     8fa:	2a e0       	ldi	r18, 0x0A	; 10
     8fc:	e0 e1       	ldi	r30, 0x10	; 16
     8fe:	f1 e0       	ldi	r31, 0x01	; 1
     900:	dc 01       	movw	r26, r24
     902:	01 90       	ld	r0, Z+
     904:	0d 92       	st	X+, r0
     906:	2a 95       	dec	r18
     908:	e1 f7       	brne	.-8      	; 0x902 <menu_init+0x34>
     90a:	0f 2e       	mov	r0, r31
     90c:	f5 e0       	ldi	r31, 0x05	; 5
     90e:	df 2e       	mov	r13, r31
     910:	f0 2d       	mov	r31, r0
     912:	fe 01       	movw	r30, r28
     914:	3b 96       	adiw	r30, 0x0b	; 11
     916:	df 01       	movw	r26, r30
     918:	2d 2d       	mov	r18, r13
     91a:	1d 92       	st	X+, r1
     91c:	2a 95       	dec	r18
     91e:	e9 f7       	brne	.-6      	; 0x91a <menu_init+0x4c>
	
	menu_t sub1 = {"Play game",0,NULL,NULL,{}};
     920:	8e 01       	movw	r16, r28
     922:	0c 5d       	subi	r16, 0xDC	; 220
     924:	1f 4f       	sbci	r17, 0xFF	; 255
     926:	d8 01       	movw	r26, r16
     928:	ec 2d       	mov	r30, r12
     92a:	1d 92       	st	X+, r1
     92c:	ea 95       	dec	r30
     92e:	e9 f7       	brne	.-6      	; 0x92a <menu_init+0x5c>
     930:	2a e0       	ldi	r18, 0x0A	; 10
     932:	ef e1       	ldi	r30, 0x1F	; 31
     934:	f1 e0       	ldi	r31, 0x01	; 1
     936:	d8 01       	movw	r26, r16
     938:	01 90       	ld	r0, Z+
     93a:	0d 92       	st	X+, r0
     93c:	2a 95       	dec	r18
     93e:	e1 f7       	brne	.-8      	; 0x938 <menu_init+0x6a>
     940:	fe 01       	movw	r30, r28
     942:	be 96       	adiw	r30, 0x2e	; 46
     944:	df 01       	movw	r26, r30
     946:	2d 2d       	mov	r18, r13
     948:	1d 92       	st	X+, r1
     94a:	2a 95       	dec	r18
     94c:	e9 f7       	brne	.-6      	; 0x948 <menu_init+0x7a>
	menu_t sub2 = {"Highscores",0,NULL,NULL,{}};
     94e:	ae 01       	movw	r20, r28
     950:	49 5b       	subi	r20, 0xB9	; 185
     952:	5f 4f       	sbci	r21, 0xFF	; 255
     954:	da 01       	movw	r26, r20
     956:	ec 2d       	mov	r30, r12
     958:	1d 92       	st	X+, r1
     95a:	ea 95       	dec	r30
     95c:	e9 f7       	brne	.-6      	; 0x958 <menu_init+0x8a>
     95e:	2b e0       	ldi	r18, 0x0B	; 11
     960:	ee e2       	ldi	r30, 0x2E	; 46
     962:	f1 e0       	ldi	r31, 0x01	; 1
     964:	da 01       	movw	r26, r20
     966:	01 90       	ld	r0, Z+
     968:	0d 92       	st	X+, r0
     96a:	2a 95       	dec	r18
     96c:	e1 f7       	brne	.-8      	; 0x966 <menu_init+0x98>
     96e:	da 01       	movw	r26, r20
     970:	1b 96       	adiw	r26, 0x0b	; 11
     972:	1d 92       	st	X+, r1
     974:	1d 92       	st	X+, r1
     976:	1d 92       	st	X+, r1
     978:	1c 92       	st	X, r1
     97a:	1e 97       	sbiw	r26, 0x0e	; 14
	menu_t sub3 = {"Settings",1,NULL,NULL, {&sub3sub1}	};
     97c:	9e 01       	movw	r18, r28
     97e:	26 59       	subi	r18, 0x96	; 150
     980:	3f 4f       	sbci	r19, 0xFF	; 255
     982:	f9 01       	movw	r30, r18
     984:	6c 2d       	mov	r22, r12
     986:	11 92       	st	Z+, r1
     988:	6a 95       	dec	r22
     98a:	e9 f7       	brne	.-6      	; 0x986 <menu_init+0xb8>
     98c:	69 e0       	ldi	r22, 0x09	; 9
     98e:	ed e3       	ldi	r30, 0x3D	; 61
     990:	f1 e0       	ldi	r31, 0x01	; 1
     992:	d9 01       	movw	r26, r18
     994:	01 90       	ld	r0, Z+
     996:	0d 92       	st	X+, r0
     998:	6a 95       	dec	r22
     99a:	e1 f7       	brne	.-8      	; 0x994 <menu_init+0xc6>
     99c:	f9 01       	movw	r30, r18
     99e:	39 96       	adiw	r30, 0x09	; 9
     9a0:	66 e0       	ldi	r22, 0x06	; 6
     9a2:	df 01       	movw	r26, r30
     9a4:	1d 92       	st	X+, r1
     9a6:	6a 95       	dec	r22
     9a8:	e9 f7       	brne	.-6      	; 0x9a4 <menu_init+0xd6>
     9aa:	ee 24       	eor	r14, r14
     9ac:	e3 94       	inc	r14
     9ae:	f1 2c       	mov	r15, r1
     9b0:	f9 01       	movw	r30, r18
     9b2:	f0 8a       	std	Z+16, r15	; 0x10
     9b4:	e7 86       	std	Z+15, r14	; 0x0f
     9b6:	96 8b       	std	Z+22, r25	; 0x16
     9b8:	85 8b       	std	Z+21, r24	; 0x15
	menu_t sub4 = {"Debug",0,NULL ,NULL,{}};
     9ba:	be 01       	movw	r22, r28
     9bc:	63 57       	subi	r22, 0x73	; 115
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	db 01       	movw	r26, r22
     9c2:	ec 2d       	mov	r30, r12
     9c4:	1d 92       	st	X+, r1
     9c6:	ea 95       	dec	r30
     9c8:	e9 f7       	brne	.-6      	; 0x9c4 <menu_init+0xf6>
     9ca:	86 e0       	ldi	r24, 0x06	; 6
     9cc:	ec e4       	ldi	r30, 0x4C	; 76
     9ce:	f1 e0       	ldi	r31, 0x01	; 1
     9d0:	db 01       	movw	r26, r22
     9d2:	01 90       	ld	r0, Z+
     9d4:	0d 92       	st	X+, r0
     9d6:	8a 95       	dec	r24
     9d8:	e1 f7       	brne	.-8      	; 0x9d2 <menu_init+0x104>
     9da:	fb 01       	movw	r30, r22
     9dc:	36 96       	adiw	r30, 0x06	; 6
     9de:	89 e0       	ldi	r24, 0x09	; 9
     9e0:	df 01       	movw	r26, r30
     9e2:	1d 92       	st	X+, r1
     9e4:	8a 95       	dec	r24
     9e6:	e9 f7       	brne	.-6      	; 0x9e2 <menu_init+0x114>
	
	
	menu_t main_menu = {"Main Menu",4,NULL,NULL,{&sub1,&sub2,&sub3,&sub4}};
     9e8:	ce 01       	movw	r24, r28
     9ea:	80 55       	subi	r24, 0x50	; 80
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	fc 01       	movw	r30, r24
     9f0:	11 92       	st	Z+, r1
     9f2:	ca 94       	dec	r12
     9f4:	e9 f7       	brne	.-6      	; 0x9f0 <menu_init+0x122>
     9f6:	0f 2e       	mov	r0, r31
     9f8:	fa e0       	ldi	r31, 0x0A	; 10
     9fa:	cf 2e       	mov	r12, r31
     9fc:	f0 2d       	mov	r31, r0
     9fe:	eb e5       	ldi	r30, 0x5B	; 91
     a00:	f1 e0       	ldi	r31, 0x01	; 1
     a02:	dc 01       	movw	r26, r24
     a04:	01 90       	ld	r0, Z+
     a06:	0d 92       	st	X+, r0
     a08:	ca 94       	dec	r12
     a0a:	e1 f7       	brne	.-8      	; 0xa04 <menu_init+0x136>
     a0c:	fc 01       	movw	r30, r24
     a0e:	3a 96       	adiw	r30, 0x0a	; 10
     a10:	df 01       	movw	r26, r30
     a12:	1d 92       	st	X+, r1
     a14:	da 94       	dec	r13
     a16:	e9 f7       	brne	.-6      	; 0xa12 <menu_init+0x144>
     a18:	e4 e0       	ldi	r30, 0x04	; 4
     a1a:	f0 e0       	ldi	r31, 0x00	; 0
     a1c:	dc 01       	movw	r26, r24
     a1e:	50 96       	adiw	r26, 0x10	; 16
     a20:	fc 93       	st	X, r31
     a22:	ee 93       	st	-X, r30
     a24:	1f 97       	sbiw	r26, 0x0f	; 15
     a26:	56 96       	adiw	r26, 0x16	; 22
     a28:	1c 93       	st	X, r17
     a2a:	0e 93       	st	-X, r16
     a2c:	55 97       	sbiw	r26, 0x15	; 21
     a2e:	58 96       	adiw	r26, 0x18	; 24
     a30:	5c 93       	st	X, r21
     a32:	4e 93       	st	-X, r20
     a34:	57 97       	sbiw	r26, 0x17	; 23
     a36:	5a 96       	adiw	r26, 0x1a	; 26
     a38:	3c 93       	st	X, r19
     a3a:	2e 93       	st	-X, r18
     a3c:	59 97       	sbiw	r26, 0x19	; 25
     a3e:	5c 96       	adiw	r26, 0x1c	; 28
     a40:	7c 93       	st	X, r23
     a42:	6e 93       	st	-X, r22
     a44:	5b 97       	sbiw	r26, 0x1b	; 27
	sub1.parent =&main_menu;	
     a46:	98 af       	std	Y+56, r25	; 0x38
     a48:	8f ab       	std	Y+55, r24	; 0x37
	sub2.parent =&main_menu;
     a4a:	fa 01       	movw	r30, r20
     a4c:	94 8b       	std	Z+20, r25	; 0x14
     a4e:	83 8b       	std	Z+19, r24	; 0x13
	sub3.parent =&main_menu;
     a50:	d9 01       	movw	r26, r18
     a52:	54 96       	adiw	r26, 0x14	; 20
     a54:	9c 93       	st	X, r25
     a56:	8e 93       	st	-X, r24
     a58:	53 97       	sbiw	r26, 0x13	; 19
	sub3sub1.parent= &sub3;
     a5a:	3d 8b       	std	Y+21, r19	; 0x15
     a5c:	2c 8b       	std	Y+20, r18	; 0x14
	
	menu = main_menu;
     a5e:	23 e2       	ldi	r18, 0x23	; 35
     a60:	fc 01       	movw	r30, r24
     a62:	a2 ea       	ldi	r26, 0xA2	; 162
     a64:	b1 e0       	ldi	r27, 0x01	; 1
     a66:	01 90       	ld	r0, Z+
     a68:	0d 92       	st	X+, r0
     a6a:	2a 95       	dec	r18
     a6c:	e1 f7       	brne	.-8      	; 0xa66 <menu_init+0x198>
	current = &menu;
     a6e:	82 ea       	ldi	r24, 0xA2	; 162
     a70:	91 e0       	ldi	r25, 0x01	; 1
     a72:	90 93 c6 01 	sts	0x01C6, r25
     a76:	80 93 c5 01 	sts	0x01C5, r24
	next = 1;
     a7a:	f0 92 c8 01 	sts	0x01C8, r15
     a7e:	e0 92 c7 01 	sts	0x01C7, r14
	
	
	menu_print(current);
     a82:	0e 94 81 03 	call	0x702	; 0x702 <menu_print>
	menu_fsm();
     a86:	0e 94 58 04 	call	0x8b0	; 0x8b0 <menu_fsm>

00000a8a <oled_print_char>:
     a8a:	cf 93       	push	r28
     a8c:	df 93       	push	r29
     a8e:	ec 01       	movw	r28, r24
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	a0 e0       	ldi	r26, 0x00	; 0
     a96:	b2 e1       	ldi	r27, 0x12	; 18
     a98:	e8 81       	ld	r30, Y
     a9a:	f0 e0       	ldi	r31, 0x00	; 0
     a9c:	b0 97       	sbiw	r30, 0x20	; 32
     a9e:	ee 0f       	add	r30, r30
     aa0:	ff 1f       	adc	r31, r31
     aa2:	ee 0f       	add	r30, r30
     aa4:	ff 1f       	adc	r31, r31
     aa6:	ee 0f       	add	r30, r30
     aa8:	ff 1f       	adc	r31, r31
     aaa:	e2 0f       	add	r30, r18
     aac:	f3 1f       	adc	r31, r19
     aae:	e0 59       	subi	r30, 0x90	; 144
     ab0:	ff 4f       	sbci	r31, 0xFF	; 255
     ab2:	e4 91       	lpm	r30, Z
     ab4:	ec 93       	st	X, r30
     ab6:	2f 5f       	subi	r18, 0xFF	; 255
     ab8:	3f 4f       	sbci	r19, 0xFF	; 255
     aba:	28 30       	cpi	r18, 0x08	; 8
     abc:	31 05       	cpc	r19, r1
     abe:	61 f7       	brne	.-40     	; 0xa98 <oled_print_char+0xe>
     ac0:	df 91       	pop	r29
     ac2:	cf 91       	pop	r28
     ac4:	08 95       	ret

00000ac6 <oled_print>:
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
     aca:	fc 01       	movw	r30, r24
     acc:	20 81       	ld	r18, Z
     ace:	22 23       	and	r18, r18
     ad0:	51 f0       	breq	.+20     	; 0xae6 <oled_print+0x20>
     ad2:	ec 01       	movw	r28, r24
     ad4:	21 96       	adiw	r28, 0x01	; 1
     ad6:	0e 94 45 05 	call	0xa8a	; 0xa8a <oled_print_char>
     ada:	ce 01       	movw	r24, r28
     adc:	21 96       	adiw	r28, 0x01	; 1
     ade:	fc 01       	movw	r30, r24
     ae0:	20 81       	ld	r18, Z
     ae2:	21 11       	cpse	r18, r1
     ae4:	f8 cf       	rjmp	.-16     	; 0xad6 <oled_print+0x10>
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <oled_init>:
     aec:	e0 e0       	ldi	r30, 0x00	; 0
     aee:	f0 e1       	ldi	r31, 0x10	; 16
     af0:	8e ea       	ldi	r24, 0xAE	; 174
     af2:	80 83       	st	Z, r24
     af4:	81 ea       	ldi	r24, 0xA1	; 161
     af6:	80 83       	st	Z, r24
     af8:	8a ed       	ldi	r24, 0xDA	; 218
     afa:	80 83       	st	Z, r24
     afc:	82 e1       	ldi	r24, 0x12	; 18
     afe:	80 83       	st	Z, r24
     b00:	88 ec       	ldi	r24, 0xC8	; 200
     b02:	80 83       	st	Z, r24
     b04:	88 ea       	ldi	r24, 0xA8	; 168
     b06:	80 83       	st	Z, r24
     b08:	8f e3       	ldi	r24, 0x3F	; 63
     b0a:	80 83       	st	Z, r24
     b0c:	85 ed       	ldi	r24, 0xD5	; 213
     b0e:	80 83       	st	Z, r24
     b10:	80 e8       	ldi	r24, 0x80	; 128
     b12:	80 83       	st	Z, r24
     b14:	81 e8       	ldi	r24, 0x81	; 129
     b16:	80 83       	st	Z, r24
     b18:	80 e5       	ldi	r24, 0x50	; 80
     b1a:	80 83       	st	Z, r24
     b1c:	89 ed       	ldi	r24, 0xD9	; 217
     b1e:	80 83       	st	Z, r24
     b20:	81 e2       	ldi	r24, 0x21	; 33
     b22:	80 83       	st	Z, r24
     b24:	80 e2       	ldi	r24, 0x20	; 32
     b26:	80 83       	st	Z, r24
     b28:	10 82       	st	Z, r1
     b2a:	8b ed       	ldi	r24, 0xDB	; 219
     b2c:	80 83       	st	Z, r24
     b2e:	80 e3       	ldi	r24, 0x30	; 48
     b30:	80 83       	st	Z, r24
     b32:	8d ea       	ldi	r24, 0xAD	; 173
     b34:	80 83       	st	Z, r24
     b36:	10 82       	st	Z, r1
     b38:	84 ea       	ldi	r24, 0xA4	; 164
     b3a:	80 83       	st	Z, r24
     b3c:	86 ea       	ldi	r24, 0xA6	; 166
     b3e:	80 83       	st	Z, r24
     b40:	8f ea       	ldi	r24, 0xAF	; 175
     b42:	80 83       	st	Z, r24
     b44:	08 95       	ret

00000b46 <oled_goto>:
     b46:	e0 e0       	ldi	r30, 0x00	; 0
     b48:	f0 e1       	ldi	r31, 0x10	; 16
     b4a:	91 e2       	ldi	r25, 0x21	; 33
     b4c:	90 83       	st	Z, r25
     b4e:	60 83       	st	Z, r22
     b50:	9f e7       	ldi	r25, 0x7F	; 127
     b52:	90 83       	st	Z, r25
     b54:	92 e2       	ldi	r25, 0x22	; 34
     b56:	90 83       	st	Z, r25
     b58:	80 83       	st	Z, r24
     b5a:	87 e0       	ldi	r24, 0x07	; 7
     b5c:	80 83       	st	Z, r24
     b5e:	08 95       	ret

00000b60 <oled_clear_all>:
     b60:	60 e0       	ldi	r22, 0x00	; 0
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	0e 94 a3 05 	call	0xb46	; 0xb46 <oled_goto>
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	94 e0       	ldi	r25, 0x04	; 4
     b6c:	e0 e0       	ldi	r30, 0x00	; 0
     b6e:	f2 e1       	ldi	r31, 0x12	; 18
     b70:	10 82       	st	Z, r1
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	00 97       	sbiw	r24, 0x00	; 0
     b76:	e1 f7       	brne	.-8      	; 0xb70 <oled_clear_all+0x10>
     b78:	08 95       	ret

00000b7a <spi_select>:
     b7a:	c4 98       	cbi	0x18, 4	; 24
     b7c:	08 95       	ret

00000b7e <spi_deselect>:
     b7e:	c4 9a       	sbi	0x18, 4	; 24
     b80:	08 95       	ret

00000b82 <spi_transmit>:
     b82:	8f b9       	out	0x0f, r24	; 15
     b84:	77 9b       	sbis	0x0e, 7	; 14
     b86:	fe cf       	rjmp	.-4      	; 0xb84 <spi_transmit+0x2>
     b88:	08 95       	ret

00000b8a <spi_receive>:
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	0e 94 c1 05 	call	0xb82	; 0xb82 <spi_transmit>
     b90:	8f b1       	in	r24, 0x0f	; 15
     b92:	08 95       	ret

00000b94 <spi_init>:
     b94:	87 b3       	in	r24, 0x17	; 23
     b96:	80 6b       	ori	r24, 0xB0	; 176
     b98:	87 bb       	out	0x17, r24	; 23
     b9a:	81 e5       	ldi	r24, 0x51	; 81
     b9c:	8d b9       	out	0x0d, r24	; 13
     b9e:	08 95       	ret

00000ba0 <USART_transmit>:
     ba0:	5d 9b       	sbis	0x0b, 5	; 11
     ba2:	fe cf       	rjmp	.-4      	; 0xba0 <USART_transmit>
     ba4:	8c b9       	out	0x0c, r24	; 12
     ba6:	08 95       	ret

00000ba8 <USART_receive>:
     ba8:	5f 9b       	sbis	0x0b, 7	; 11
     baa:	fe cf       	rjmp	.-4      	; 0xba8 <USART_receive>
     bac:	8c b1       	in	r24, 0x0c	; 12
     bae:	08 95       	ret

00000bb0 <USART_init>:
     bb0:	90 bd       	out	0x20, r25	; 32
     bb2:	89 b9       	out	0x09, r24	; 9
     bb4:	88 e1       	ldi	r24, 0x18	; 24
     bb6:	8a b9       	out	0x0a, r24	; 10
     bb8:	8e e8       	ldi	r24, 0x8E	; 142
     bba:	80 bd       	out	0x20, r24	; 32
     bbc:	64 ed       	ldi	r22, 0xD4	; 212
     bbe:	75 e0       	ldi	r23, 0x05	; 5
     bc0:	80 ed       	ldi	r24, 0xD0	; 208
     bc2:	95 e0       	ldi	r25, 0x05	; 5
     bc4:	0e 94 0d 06 	call	0xc1a	; 0xc1a <fdevopen>
     bc8:	08 95       	ret

00000bca <__divmodhi4>:
     bca:	97 fb       	bst	r25, 7
     bcc:	07 2e       	mov	r0, r23
     bce:	16 f4       	brtc	.+4      	; 0xbd4 <__divmodhi4+0xa>
     bd0:	00 94       	com	r0
     bd2:	07 d0       	rcall	.+14     	; 0xbe2 <__divmodhi4_neg1>
     bd4:	77 fd       	sbrc	r23, 7
     bd6:	09 d0       	rcall	.+18     	; 0xbea <__divmodhi4_neg2>
     bd8:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__udivmodhi4>
     bdc:	07 fc       	sbrc	r0, 7
     bde:	05 d0       	rcall	.+10     	; 0xbea <__divmodhi4_neg2>
     be0:	3e f4       	brtc	.+14     	; 0xbf0 <__divmodhi4_exit>

00000be2 <__divmodhi4_neg1>:
     be2:	90 95       	com	r25
     be4:	81 95       	neg	r24
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	08 95       	ret

00000bea <__divmodhi4_neg2>:
     bea:	70 95       	com	r23
     bec:	61 95       	neg	r22
     bee:	7f 4f       	sbci	r23, 0xFF	; 255

00000bf0 <__divmodhi4_exit>:
     bf0:	08 95       	ret

00000bf2 <__udivmodhi4>:
     bf2:	aa 1b       	sub	r26, r26
     bf4:	bb 1b       	sub	r27, r27
     bf6:	51 e1       	ldi	r21, 0x11	; 17
     bf8:	07 c0       	rjmp	.+14     	; 0xc08 <__udivmodhi4_ep>

00000bfa <__udivmodhi4_loop>:
     bfa:	aa 1f       	adc	r26, r26
     bfc:	bb 1f       	adc	r27, r27
     bfe:	a6 17       	cp	r26, r22
     c00:	b7 07       	cpc	r27, r23
     c02:	10 f0       	brcs	.+4      	; 0xc08 <__udivmodhi4_ep>
     c04:	a6 1b       	sub	r26, r22
     c06:	b7 0b       	sbc	r27, r23

00000c08 <__udivmodhi4_ep>:
     c08:	88 1f       	adc	r24, r24
     c0a:	99 1f       	adc	r25, r25
     c0c:	5a 95       	dec	r21
     c0e:	a9 f7       	brne	.-22     	; 0xbfa <__udivmodhi4_loop>
     c10:	80 95       	com	r24
     c12:	90 95       	com	r25
     c14:	bc 01       	movw	r22, r24
     c16:	cd 01       	movw	r24, r26
     c18:	08 95       	ret

00000c1a <fdevopen>:
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	ec 01       	movw	r28, r24
     c24:	8b 01       	movw	r16, r22
     c26:	00 97       	sbiw	r24, 0x00	; 0
     c28:	31 f4       	brne	.+12     	; 0xc36 <fdevopen+0x1c>
     c2a:	61 15       	cp	r22, r1
     c2c:	71 05       	cpc	r23, r1
     c2e:	19 f4       	brne	.+6      	; 0xc36 <fdevopen+0x1c>
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	38 c0       	rjmp	.+112    	; 0xca6 <fdevopen+0x8c>
     c36:	6e e0       	ldi	r22, 0x0E	; 14
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	0e 94 72 08 	call	0x10e4	; 0x10e4 <calloc>
     c42:	fc 01       	movw	r30, r24
     c44:	00 97       	sbiw	r24, 0x00	; 0
     c46:	a1 f3       	breq	.-24     	; 0xc30 <fdevopen+0x16>
     c48:	80 e8       	ldi	r24, 0x80	; 128
     c4a:	83 83       	std	Z+3, r24	; 0x03
     c4c:	01 15       	cp	r16, r1
     c4e:	11 05       	cpc	r17, r1
     c50:	71 f0       	breq	.+28     	; 0xc6e <fdevopen+0x54>
     c52:	13 87       	std	Z+11, r17	; 0x0b
     c54:	02 87       	std	Z+10, r16	; 0x0a
     c56:	81 e8       	ldi	r24, 0x81	; 129
     c58:	83 83       	std	Z+3, r24	; 0x03
     c5a:	80 91 c9 01 	lds	r24, 0x01C9
     c5e:	90 91 ca 01 	lds	r25, 0x01CA
     c62:	89 2b       	or	r24, r25
     c64:	21 f4       	brne	.+8      	; 0xc6e <fdevopen+0x54>
     c66:	f0 93 ca 01 	sts	0x01CA, r31
     c6a:	e0 93 c9 01 	sts	0x01C9, r30
     c6e:	20 97       	sbiw	r28, 0x00	; 0
     c70:	c9 f0       	breq	.+50     	; 0xca4 <fdevopen+0x8a>
     c72:	d1 87       	std	Z+9, r29	; 0x09
     c74:	c0 87       	std	Z+8, r28	; 0x08
     c76:	83 81       	ldd	r24, Z+3	; 0x03
     c78:	82 60       	ori	r24, 0x02	; 2
     c7a:	83 83       	std	Z+3, r24	; 0x03
     c7c:	80 91 cb 01 	lds	r24, 0x01CB
     c80:	90 91 cc 01 	lds	r25, 0x01CC
     c84:	89 2b       	or	r24, r25
     c86:	71 f4       	brne	.+28     	; 0xca4 <fdevopen+0x8a>
     c88:	f0 93 cc 01 	sts	0x01CC, r31
     c8c:	e0 93 cb 01 	sts	0x01CB, r30
     c90:	80 91 cd 01 	lds	r24, 0x01CD
     c94:	90 91 ce 01 	lds	r25, 0x01CE
     c98:	89 2b       	or	r24, r25
     c9a:	21 f4       	brne	.+8      	; 0xca4 <fdevopen+0x8a>
     c9c:	f0 93 ce 01 	sts	0x01CE, r31
     ca0:	e0 93 cd 01 	sts	0x01CD, r30
     ca4:	cf 01       	movw	r24, r30
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	1f 91       	pop	r17
     cac:	0f 91       	pop	r16
     cae:	08 95       	ret

00000cb0 <printf>:
     cb0:	a0 e0       	ldi	r26, 0x00	; 0
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	ee e5       	ldi	r30, 0x5E	; 94
     cb6:	f6 e0       	ldi	r31, 0x06	; 6
     cb8:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x20>
     cbc:	fe 01       	movw	r30, r28
     cbe:	35 96       	adiw	r30, 0x05	; 5
     cc0:	61 91       	ld	r22, Z+
     cc2:	71 91       	ld	r23, Z+
     cc4:	af 01       	movw	r20, r30
     cc6:	80 91 cb 01 	lds	r24, 0x01CB
     cca:	90 91 cc 01 	lds	r25, 0x01CC
     cce:	0e 94 a0 06 	call	0xd40	; 0xd40 <vfprintf>
     cd2:	e2 e0       	ldi	r30, 0x02	; 2
     cd4:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x20>

00000cd8 <putchar>:
     cd8:	60 91 cb 01 	lds	r22, 0x01CB
     cdc:	70 91 cc 01 	lds	r23, 0x01CC
     ce0:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
     ce4:	08 95       	ret

00000ce6 <puts>:
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	e0 91 cb 01 	lds	r30, 0x01CB
     cf2:	f0 91 cc 01 	lds	r31, 0x01CC
     cf6:	23 81       	ldd	r18, Z+3	; 0x03
     cf8:	21 ff       	sbrs	r18, 1
     cfa:	1b c0       	rjmp	.+54     	; 0xd32 <puts+0x4c>
     cfc:	ec 01       	movw	r28, r24
     cfe:	00 e0       	ldi	r16, 0x00	; 0
     d00:	10 e0       	ldi	r17, 0x00	; 0
     d02:	89 91       	ld	r24, Y+
     d04:	60 91 cb 01 	lds	r22, 0x01CB
     d08:	70 91 cc 01 	lds	r23, 0x01CC
     d0c:	db 01       	movw	r26, r22
     d0e:	18 96       	adiw	r26, 0x08	; 8
     d10:	ed 91       	ld	r30, X+
     d12:	fc 91       	ld	r31, X
     d14:	19 97       	sbiw	r26, 0x09	; 9
     d16:	88 23       	and	r24, r24
     d18:	31 f0       	breq	.+12     	; 0xd26 <puts+0x40>
     d1a:	09 95       	icall
     d1c:	89 2b       	or	r24, r25
     d1e:	89 f3       	breq	.-30     	; 0xd02 <puts+0x1c>
     d20:	0f ef       	ldi	r16, 0xFF	; 255
     d22:	1f ef       	ldi	r17, 0xFF	; 255
     d24:	ee cf       	rjmp	.-36     	; 0xd02 <puts+0x1c>
     d26:	8a e0       	ldi	r24, 0x0A	; 10
     d28:	09 95       	icall
     d2a:	89 2b       	or	r24, r25
     d2c:	11 f4       	brne	.+4      	; 0xd32 <puts+0x4c>
     d2e:	c8 01       	movw	r24, r16
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <puts+0x50>
     d32:	8f ef       	ldi	r24, 0xFF	; 255
     d34:	9f ef       	ldi	r25, 0xFF	; 255
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	0f 91       	pop	r16
     d3e:	08 95       	ret

00000d40 <vfprintf>:
     d40:	ac e0       	ldi	r26, 0x0C	; 12
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	e6 ea       	ldi	r30, 0xA6	; 166
     d46:	f6 e0       	ldi	r31, 0x06	; 6
     d48:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__prologue_saves__>
     d4c:	7c 01       	movw	r14, r24
     d4e:	6b 01       	movw	r12, r22
     d50:	8a 01       	movw	r16, r20
     d52:	fc 01       	movw	r30, r24
     d54:	17 82       	std	Z+7, r1	; 0x07
     d56:	16 82       	std	Z+6, r1	; 0x06
     d58:	83 81       	ldd	r24, Z+3	; 0x03
     d5a:	81 ff       	sbrs	r24, 1
     d5c:	bd c1       	rjmp	.+890    	; 0x10d8 <vfprintf+0x398>
     d5e:	ce 01       	movw	r24, r28
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	4c 01       	movw	r8, r24
     d64:	f7 01       	movw	r30, r14
     d66:	93 81       	ldd	r25, Z+3	; 0x03
     d68:	f6 01       	movw	r30, r12
     d6a:	93 fd       	sbrc	r25, 3
     d6c:	85 91       	lpm	r24, Z+
     d6e:	93 ff       	sbrs	r25, 3
     d70:	81 91       	ld	r24, Z+
     d72:	6f 01       	movw	r12, r30
     d74:	88 23       	and	r24, r24
     d76:	09 f4       	brne	.+2      	; 0xd7a <vfprintf+0x3a>
     d78:	ab c1       	rjmp	.+854    	; 0x10d0 <vfprintf+0x390>
     d7a:	85 32       	cpi	r24, 0x25	; 37
     d7c:	39 f4       	brne	.+14     	; 0xd8c <vfprintf+0x4c>
     d7e:	93 fd       	sbrc	r25, 3
     d80:	85 91       	lpm	r24, Z+
     d82:	93 ff       	sbrs	r25, 3
     d84:	81 91       	ld	r24, Z+
     d86:	6f 01       	movw	r12, r30
     d88:	85 32       	cpi	r24, 0x25	; 37
     d8a:	29 f4       	brne	.+10     	; 0xd96 <vfprintf+0x56>
     d8c:	b7 01       	movw	r22, r14
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
     d94:	e7 cf       	rjmp	.-50     	; 0xd64 <vfprintf+0x24>
     d96:	51 2c       	mov	r5, r1
     d98:	31 2c       	mov	r3, r1
     d9a:	20 e0       	ldi	r18, 0x00	; 0
     d9c:	20 32       	cpi	r18, 0x20	; 32
     d9e:	a0 f4       	brcc	.+40     	; 0xdc8 <vfprintf+0x88>
     da0:	8b 32       	cpi	r24, 0x2B	; 43
     da2:	69 f0       	breq	.+26     	; 0xdbe <vfprintf+0x7e>
     da4:	30 f4       	brcc	.+12     	; 0xdb2 <vfprintf+0x72>
     da6:	80 32       	cpi	r24, 0x20	; 32
     da8:	59 f0       	breq	.+22     	; 0xdc0 <vfprintf+0x80>
     daa:	83 32       	cpi	r24, 0x23	; 35
     dac:	69 f4       	brne	.+26     	; 0xdc8 <vfprintf+0x88>
     dae:	20 61       	ori	r18, 0x10	; 16
     db0:	2c c0       	rjmp	.+88     	; 0xe0a <vfprintf+0xca>
     db2:	8d 32       	cpi	r24, 0x2D	; 45
     db4:	39 f0       	breq	.+14     	; 0xdc4 <vfprintf+0x84>
     db6:	80 33       	cpi	r24, 0x30	; 48
     db8:	39 f4       	brne	.+14     	; 0xdc8 <vfprintf+0x88>
     dba:	21 60       	ori	r18, 0x01	; 1
     dbc:	26 c0       	rjmp	.+76     	; 0xe0a <vfprintf+0xca>
     dbe:	22 60       	ori	r18, 0x02	; 2
     dc0:	24 60       	ori	r18, 0x04	; 4
     dc2:	23 c0       	rjmp	.+70     	; 0xe0a <vfprintf+0xca>
     dc4:	28 60       	ori	r18, 0x08	; 8
     dc6:	21 c0       	rjmp	.+66     	; 0xe0a <vfprintf+0xca>
     dc8:	27 fd       	sbrc	r18, 7
     dca:	27 c0       	rjmp	.+78     	; 0xe1a <vfprintf+0xda>
     dcc:	30 ed       	ldi	r19, 0xD0	; 208
     dce:	38 0f       	add	r19, r24
     dd0:	3a 30       	cpi	r19, 0x0A	; 10
     dd2:	78 f4       	brcc	.+30     	; 0xdf2 <vfprintf+0xb2>
     dd4:	26 ff       	sbrs	r18, 6
     dd6:	06 c0       	rjmp	.+12     	; 0xde4 <vfprintf+0xa4>
     dd8:	fa e0       	ldi	r31, 0x0A	; 10
     dda:	5f 9e       	mul	r5, r31
     ddc:	30 0d       	add	r19, r0
     dde:	11 24       	eor	r1, r1
     de0:	53 2e       	mov	r5, r19
     de2:	13 c0       	rjmp	.+38     	; 0xe0a <vfprintf+0xca>
     de4:	8a e0       	ldi	r24, 0x0A	; 10
     de6:	38 9e       	mul	r3, r24
     de8:	30 0d       	add	r19, r0
     dea:	11 24       	eor	r1, r1
     dec:	33 2e       	mov	r3, r19
     dee:	20 62       	ori	r18, 0x20	; 32
     df0:	0c c0       	rjmp	.+24     	; 0xe0a <vfprintf+0xca>
     df2:	8e 32       	cpi	r24, 0x2E	; 46
     df4:	21 f4       	brne	.+8      	; 0xdfe <vfprintf+0xbe>
     df6:	26 fd       	sbrc	r18, 6
     df8:	6b c1       	rjmp	.+726    	; 0x10d0 <vfprintf+0x390>
     dfa:	20 64       	ori	r18, 0x40	; 64
     dfc:	06 c0       	rjmp	.+12     	; 0xe0a <vfprintf+0xca>
     dfe:	8c 36       	cpi	r24, 0x6C	; 108
     e00:	11 f4       	brne	.+4      	; 0xe06 <vfprintf+0xc6>
     e02:	20 68       	ori	r18, 0x80	; 128
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <vfprintf+0xca>
     e06:	88 36       	cpi	r24, 0x68	; 104
     e08:	41 f4       	brne	.+16     	; 0xe1a <vfprintf+0xda>
     e0a:	f6 01       	movw	r30, r12
     e0c:	93 fd       	sbrc	r25, 3
     e0e:	85 91       	lpm	r24, Z+
     e10:	93 ff       	sbrs	r25, 3
     e12:	81 91       	ld	r24, Z+
     e14:	6f 01       	movw	r12, r30
     e16:	81 11       	cpse	r24, r1
     e18:	c1 cf       	rjmp	.-126    	; 0xd9c <vfprintf+0x5c>
     e1a:	98 2f       	mov	r25, r24
     e1c:	9f 7d       	andi	r25, 0xDF	; 223
     e1e:	95 54       	subi	r25, 0x45	; 69
     e20:	93 30       	cpi	r25, 0x03	; 3
     e22:	28 f4       	brcc	.+10     	; 0xe2e <vfprintf+0xee>
     e24:	0c 5f       	subi	r16, 0xFC	; 252
     e26:	1f 4f       	sbci	r17, 0xFF	; 255
     e28:	ff e3       	ldi	r31, 0x3F	; 63
     e2a:	f9 83       	std	Y+1, r31	; 0x01
     e2c:	0d c0       	rjmp	.+26     	; 0xe48 <vfprintf+0x108>
     e2e:	83 36       	cpi	r24, 0x63	; 99
     e30:	31 f0       	breq	.+12     	; 0xe3e <vfprintf+0xfe>
     e32:	83 37       	cpi	r24, 0x73	; 115
     e34:	71 f0       	breq	.+28     	; 0xe52 <vfprintf+0x112>
     e36:	83 35       	cpi	r24, 0x53	; 83
     e38:	09 f0       	breq	.+2      	; 0xe3c <vfprintf+0xfc>
     e3a:	5b c0       	rjmp	.+182    	; 0xef2 <vfprintf+0x1b2>
     e3c:	22 c0       	rjmp	.+68     	; 0xe82 <vfprintf+0x142>
     e3e:	f8 01       	movw	r30, r16
     e40:	80 81       	ld	r24, Z
     e42:	89 83       	std	Y+1, r24	; 0x01
     e44:	0e 5f       	subi	r16, 0xFE	; 254
     e46:	1f 4f       	sbci	r17, 0xFF	; 255
     e48:	44 24       	eor	r4, r4
     e4a:	43 94       	inc	r4
     e4c:	51 2c       	mov	r5, r1
     e4e:	54 01       	movw	r10, r8
     e50:	15 c0       	rjmp	.+42     	; 0xe7c <vfprintf+0x13c>
     e52:	38 01       	movw	r6, r16
     e54:	f2 e0       	ldi	r31, 0x02	; 2
     e56:	6f 0e       	add	r6, r31
     e58:	71 1c       	adc	r7, r1
     e5a:	f8 01       	movw	r30, r16
     e5c:	a0 80       	ld	r10, Z
     e5e:	b1 80       	ldd	r11, Z+1	; 0x01
     e60:	26 ff       	sbrs	r18, 6
     e62:	03 c0       	rjmp	.+6      	; 0xe6a <vfprintf+0x12a>
     e64:	65 2d       	mov	r22, r5
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	02 c0       	rjmp	.+4      	; 0xe6e <vfprintf+0x12e>
     e6a:	6f ef       	ldi	r22, 0xFF	; 255
     e6c:	7f ef       	ldi	r23, 0xFF	; 255
     e6e:	c5 01       	movw	r24, r10
     e70:	2c 87       	std	Y+12, r18	; 0x0c
     e72:	0e 94 c7 09 	call	0x138e	; 0x138e <strnlen>
     e76:	2c 01       	movw	r4, r24
     e78:	83 01       	movw	r16, r6
     e7a:	2c 85       	ldd	r18, Y+12	; 0x0c
     e7c:	2f 77       	andi	r18, 0x7F	; 127
     e7e:	22 2e       	mov	r2, r18
     e80:	17 c0       	rjmp	.+46     	; 0xeb0 <vfprintf+0x170>
     e82:	38 01       	movw	r6, r16
     e84:	f2 e0       	ldi	r31, 0x02	; 2
     e86:	6f 0e       	add	r6, r31
     e88:	71 1c       	adc	r7, r1
     e8a:	f8 01       	movw	r30, r16
     e8c:	a0 80       	ld	r10, Z
     e8e:	b1 80       	ldd	r11, Z+1	; 0x01
     e90:	26 ff       	sbrs	r18, 6
     e92:	03 c0       	rjmp	.+6      	; 0xe9a <vfprintf+0x15a>
     e94:	65 2d       	mov	r22, r5
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <vfprintf+0x15e>
     e9a:	6f ef       	ldi	r22, 0xFF	; 255
     e9c:	7f ef       	ldi	r23, 0xFF	; 255
     e9e:	c5 01       	movw	r24, r10
     ea0:	2c 87       	std	Y+12, r18	; 0x0c
     ea2:	0e 94 b5 09 	call	0x136a	; 0x136a <strnlen_P>
     ea6:	2c 01       	movw	r4, r24
     ea8:	2c 85       	ldd	r18, Y+12	; 0x0c
     eaa:	20 68       	ori	r18, 0x80	; 128
     eac:	22 2e       	mov	r2, r18
     eae:	83 01       	movw	r16, r6
     eb0:	23 fc       	sbrc	r2, 3
     eb2:	1b c0       	rjmp	.+54     	; 0xeea <vfprintf+0x1aa>
     eb4:	83 2d       	mov	r24, r3
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	48 16       	cp	r4, r24
     eba:	59 06       	cpc	r5, r25
     ebc:	b0 f4       	brcc	.+44     	; 0xeea <vfprintf+0x1aa>
     ebe:	b7 01       	movw	r22, r14
     ec0:	80 e2       	ldi	r24, 0x20	; 32
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
     ec8:	3a 94       	dec	r3
     eca:	f4 cf       	rjmp	.-24     	; 0xeb4 <vfprintf+0x174>
     ecc:	f5 01       	movw	r30, r10
     ece:	27 fc       	sbrc	r2, 7
     ed0:	85 91       	lpm	r24, Z+
     ed2:	27 fe       	sbrs	r2, 7
     ed4:	81 91       	ld	r24, Z+
     ed6:	5f 01       	movw	r10, r30
     ed8:	b7 01       	movw	r22, r14
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
     ee0:	31 10       	cpse	r3, r1
     ee2:	3a 94       	dec	r3
     ee4:	f1 e0       	ldi	r31, 0x01	; 1
     ee6:	4f 1a       	sub	r4, r31
     ee8:	51 08       	sbc	r5, r1
     eea:	41 14       	cp	r4, r1
     eec:	51 04       	cpc	r5, r1
     eee:	71 f7       	brne	.-36     	; 0xecc <vfprintf+0x18c>
     ef0:	e5 c0       	rjmp	.+458    	; 0x10bc <vfprintf+0x37c>
     ef2:	84 36       	cpi	r24, 0x64	; 100
     ef4:	11 f0       	breq	.+4      	; 0xefa <vfprintf+0x1ba>
     ef6:	89 36       	cpi	r24, 0x69	; 105
     ef8:	39 f5       	brne	.+78     	; 0xf48 <vfprintf+0x208>
     efa:	f8 01       	movw	r30, r16
     efc:	27 ff       	sbrs	r18, 7
     efe:	07 c0       	rjmp	.+14     	; 0xf0e <vfprintf+0x1ce>
     f00:	60 81       	ld	r22, Z
     f02:	71 81       	ldd	r23, Z+1	; 0x01
     f04:	82 81       	ldd	r24, Z+2	; 0x02
     f06:	93 81       	ldd	r25, Z+3	; 0x03
     f08:	0c 5f       	subi	r16, 0xFC	; 252
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
     f0c:	08 c0       	rjmp	.+16     	; 0xf1e <vfprintf+0x1de>
     f0e:	60 81       	ld	r22, Z
     f10:	71 81       	ldd	r23, Z+1	; 0x01
     f12:	88 27       	eor	r24, r24
     f14:	77 fd       	sbrc	r23, 7
     f16:	80 95       	com	r24
     f18:	98 2f       	mov	r25, r24
     f1a:	0e 5f       	subi	r16, 0xFE	; 254
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	2f 76       	andi	r18, 0x6F	; 111
     f20:	b2 2e       	mov	r11, r18
     f22:	97 ff       	sbrs	r25, 7
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <vfprintf+0x1f8>
     f26:	90 95       	com	r25
     f28:	80 95       	com	r24
     f2a:	70 95       	com	r23
     f2c:	61 95       	neg	r22
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	8f 4f       	sbci	r24, 0xFF	; 255
     f32:	9f 4f       	sbci	r25, 0xFF	; 255
     f34:	20 68       	ori	r18, 0x80	; 128
     f36:	b2 2e       	mov	r11, r18
     f38:	2a e0       	ldi	r18, 0x0A	; 10
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	a4 01       	movw	r20, r8
     f3e:	0e 94 04 0a 	call	0x1408	; 0x1408 <__ultoa_invert>
     f42:	a8 2e       	mov	r10, r24
     f44:	a8 18       	sub	r10, r8
     f46:	44 c0       	rjmp	.+136    	; 0xfd0 <vfprintf+0x290>
     f48:	85 37       	cpi	r24, 0x75	; 117
     f4a:	29 f4       	brne	.+10     	; 0xf56 <vfprintf+0x216>
     f4c:	2f 7e       	andi	r18, 0xEF	; 239
     f4e:	b2 2e       	mov	r11, r18
     f50:	2a e0       	ldi	r18, 0x0A	; 10
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	25 c0       	rjmp	.+74     	; 0xfa0 <vfprintf+0x260>
     f56:	f2 2f       	mov	r31, r18
     f58:	f9 7f       	andi	r31, 0xF9	; 249
     f5a:	bf 2e       	mov	r11, r31
     f5c:	8f 36       	cpi	r24, 0x6F	; 111
     f5e:	c1 f0       	breq	.+48     	; 0xf90 <vfprintf+0x250>
     f60:	18 f4       	brcc	.+6      	; 0xf68 <vfprintf+0x228>
     f62:	88 35       	cpi	r24, 0x58	; 88
     f64:	79 f0       	breq	.+30     	; 0xf84 <vfprintf+0x244>
     f66:	b4 c0       	rjmp	.+360    	; 0x10d0 <vfprintf+0x390>
     f68:	80 37       	cpi	r24, 0x70	; 112
     f6a:	19 f0       	breq	.+6      	; 0xf72 <vfprintf+0x232>
     f6c:	88 37       	cpi	r24, 0x78	; 120
     f6e:	21 f0       	breq	.+8      	; 0xf78 <vfprintf+0x238>
     f70:	af c0       	rjmp	.+350    	; 0x10d0 <vfprintf+0x390>
     f72:	2f 2f       	mov	r18, r31
     f74:	20 61       	ori	r18, 0x10	; 16
     f76:	b2 2e       	mov	r11, r18
     f78:	b4 fe       	sbrs	r11, 4
     f7a:	0d c0       	rjmp	.+26     	; 0xf96 <vfprintf+0x256>
     f7c:	8b 2d       	mov	r24, r11
     f7e:	84 60       	ori	r24, 0x04	; 4
     f80:	b8 2e       	mov	r11, r24
     f82:	09 c0       	rjmp	.+18     	; 0xf96 <vfprintf+0x256>
     f84:	24 ff       	sbrs	r18, 4
     f86:	0a c0       	rjmp	.+20     	; 0xf9c <vfprintf+0x25c>
     f88:	9f 2f       	mov	r25, r31
     f8a:	96 60       	ori	r25, 0x06	; 6
     f8c:	b9 2e       	mov	r11, r25
     f8e:	06 c0       	rjmp	.+12     	; 0xf9c <vfprintf+0x25c>
     f90:	28 e0       	ldi	r18, 0x08	; 8
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <vfprintf+0x260>
     f96:	20 e1       	ldi	r18, 0x10	; 16
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <vfprintf+0x260>
     f9c:	20 e1       	ldi	r18, 0x10	; 16
     f9e:	32 e0       	ldi	r19, 0x02	; 2
     fa0:	f8 01       	movw	r30, r16
     fa2:	b7 fe       	sbrs	r11, 7
     fa4:	07 c0       	rjmp	.+14     	; 0xfb4 <vfprintf+0x274>
     fa6:	60 81       	ld	r22, Z
     fa8:	71 81       	ldd	r23, Z+1	; 0x01
     faa:	82 81       	ldd	r24, Z+2	; 0x02
     fac:	93 81       	ldd	r25, Z+3	; 0x03
     fae:	0c 5f       	subi	r16, 0xFC	; 252
     fb0:	1f 4f       	sbci	r17, 0xFF	; 255
     fb2:	06 c0       	rjmp	.+12     	; 0xfc0 <vfprintf+0x280>
     fb4:	60 81       	ld	r22, Z
     fb6:	71 81       	ldd	r23, Z+1	; 0x01
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 5f       	subi	r16, 0xFE	; 254
     fbe:	1f 4f       	sbci	r17, 0xFF	; 255
     fc0:	a4 01       	movw	r20, r8
     fc2:	0e 94 04 0a 	call	0x1408	; 0x1408 <__ultoa_invert>
     fc6:	a8 2e       	mov	r10, r24
     fc8:	a8 18       	sub	r10, r8
     fca:	fb 2d       	mov	r31, r11
     fcc:	ff 77       	andi	r31, 0x7F	; 127
     fce:	bf 2e       	mov	r11, r31
     fd0:	b6 fe       	sbrs	r11, 6
     fd2:	0b c0       	rjmp	.+22     	; 0xfea <vfprintf+0x2aa>
     fd4:	2b 2d       	mov	r18, r11
     fd6:	2e 7f       	andi	r18, 0xFE	; 254
     fd8:	a5 14       	cp	r10, r5
     fda:	50 f4       	brcc	.+20     	; 0xff0 <vfprintf+0x2b0>
     fdc:	b4 fe       	sbrs	r11, 4
     fde:	0a c0       	rjmp	.+20     	; 0xff4 <vfprintf+0x2b4>
     fe0:	b2 fc       	sbrc	r11, 2
     fe2:	08 c0       	rjmp	.+16     	; 0xff4 <vfprintf+0x2b4>
     fe4:	2b 2d       	mov	r18, r11
     fe6:	2e 7e       	andi	r18, 0xEE	; 238
     fe8:	05 c0       	rjmp	.+10     	; 0xff4 <vfprintf+0x2b4>
     fea:	7a 2c       	mov	r7, r10
     fec:	2b 2d       	mov	r18, r11
     fee:	03 c0       	rjmp	.+6      	; 0xff6 <vfprintf+0x2b6>
     ff0:	7a 2c       	mov	r7, r10
     ff2:	01 c0       	rjmp	.+2      	; 0xff6 <vfprintf+0x2b6>
     ff4:	75 2c       	mov	r7, r5
     ff6:	24 ff       	sbrs	r18, 4
     ff8:	0d c0       	rjmp	.+26     	; 0x1014 <vfprintf+0x2d4>
     ffa:	fe 01       	movw	r30, r28
     ffc:	ea 0d       	add	r30, r10
     ffe:	f1 1d       	adc	r31, r1
    1000:	80 81       	ld	r24, Z
    1002:	80 33       	cpi	r24, 0x30	; 48
    1004:	11 f4       	brne	.+4      	; 0x100a <vfprintf+0x2ca>
    1006:	29 7e       	andi	r18, 0xE9	; 233
    1008:	09 c0       	rjmp	.+18     	; 0x101c <vfprintf+0x2dc>
    100a:	22 ff       	sbrs	r18, 2
    100c:	06 c0       	rjmp	.+12     	; 0x101a <vfprintf+0x2da>
    100e:	73 94       	inc	r7
    1010:	73 94       	inc	r7
    1012:	04 c0       	rjmp	.+8      	; 0x101c <vfprintf+0x2dc>
    1014:	82 2f       	mov	r24, r18
    1016:	86 78       	andi	r24, 0x86	; 134
    1018:	09 f0       	breq	.+2      	; 0x101c <vfprintf+0x2dc>
    101a:	73 94       	inc	r7
    101c:	23 fd       	sbrc	r18, 3
    101e:	13 c0       	rjmp	.+38     	; 0x1046 <vfprintf+0x306>
    1020:	20 ff       	sbrs	r18, 0
    1022:	06 c0       	rjmp	.+12     	; 0x1030 <vfprintf+0x2f0>
    1024:	5a 2c       	mov	r5, r10
    1026:	73 14       	cp	r7, r3
    1028:	18 f4       	brcc	.+6      	; 0x1030 <vfprintf+0x2f0>
    102a:	53 0c       	add	r5, r3
    102c:	57 18       	sub	r5, r7
    102e:	73 2c       	mov	r7, r3
    1030:	73 14       	cp	r7, r3
    1032:	68 f4       	brcc	.+26     	; 0x104e <vfprintf+0x30e>
    1034:	b7 01       	movw	r22, r14
    1036:	80 e2       	ldi	r24, 0x20	; 32
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	2c 87       	std	Y+12, r18	; 0x0c
    103c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    1040:	73 94       	inc	r7
    1042:	2c 85       	ldd	r18, Y+12	; 0x0c
    1044:	f5 cf       	rjmp	.-22     	; 0x1030 <vfprintf+0x2f0>
    1046:	73 14       	cp	r7, r3
    1048:	10 f4       	brcc	.+4      	; 0x104e <vfprintf+0x30e>
    104a:	37 18       	sub	r3, r7
    104c:	01 c0       	rjmp	.+2      	; 0x1050 <vfprintf+0x310>
    104e:	31 2c       	mov	r3, r1
    1050:	24 ff       	sbrs	r18, 4
    1052:	12 c0       	rjmp	.+36     	; 0x1078 <vfprintf+0x338>
    1054:	b7 01       	movw	r22, r14
    1056:	80 e3       	ldi	r24, 0x30	; 48
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	2c 87       	std	Y+12, r18	; 0x0c
    105c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    1060:	2c 85       	ldd	r18, Y+12	; 0x0c
    1062:	22 ff       	sbrs	r18, 2
    1064:	17 c0       	rjmp	.+46     	; 0x1094 <vfprintf+0x354>
    1066:	21 ff       	sbrs	r18, 1
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <vfprintf+0x330>
    106a:	88 e5       	ldi	r24, 0x58	; 88
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <vfprintf+0x334>
    1070:	88 e7       	ldi	r24, 0x78	; 120
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	b7 01       	movw	r22, r14
    1076:	0c c0       	rjmp	.+24     	; 0x1090 <vfprintf+0x350>
    1078:	82 2f       	mov	r24, r18
    107a:	86 78       	andi	r24, 0x86	; 134
    107c:	59 f0       	breq	.+22     	; 0x1094 <vfprintf+0x354>
    107e:	21 fd       	sbrc	r18, 1
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <vfprintf+0x346>
    1082:	80 e2       	ldi	r24, 0x20	; 32
    1084:	01 c0       	rjmp	.+2      	; 0x1088 <vfprintf+0x348>
    1086:	8b e2       	ldi	r24, 0x2B	; 43
    1088:	27 fd       	sbrc	r18, 7
    108a:	8d e2       	ldi	r24, 0x2D	; 45
    108c:	b7 01       	movw	r22, r14
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    1094:	a5 14       	cp	r10, r5
    1096:	38 f4       	brcc	.+14     	; 0x10a6 <vfprintf+0x366>
    1098:	b7 01       	movw	r22, r14
    109a:	80 e3       	ldi	r24, 0x30	; 48
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    10a2:	5a 94       	dec	r5
    10a4:	f7 cf       	rjmp	.-18     	; 0x1094 <vfprintf+0x354>
    10a6:	aa 94       	dec	r10
    10a8:	f4 01       	movw	r30, r8
    10aa:	ea 0d       	add	r30, r10
    10ac:	f1 1d       	adc	r31, r1
    10ae:	80 81       	ld	r24, Z
    10b0:	b7 01       	movw	r22, r14
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    10b8:	a1 10       	cpse	r10, r1
    10ba:	f5 cf       	rjmp	.-22     	; 0x10a6 <vfprintf+0x366>
    10bc:	33 20       	and	r3, r3
    10be:	09 f4       	brne	.+2      	; 0x10c2 <vfprintf+0x382>
    10c0:	51 ce       	rjmp	.-862    	; 0xd64 <vfprintf+0x24>
    10c2:	b7 01       	movw	r22, r14
    10c4:	80 e2       	ldi	r24, 0x20	; 32
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <fputc>
    10cc:	3a 94       	dec	r3
    10ce:	f6 cf       	rjmp	.-20     	; 0x10bc <vfprintf+0x37c>
    10d0:	f7 01       	movw	r30, r14
    10d2:	86 81       	ldd	r24, Z+6	; 0x06
    10d4:	97 81       	ldd	r25, Z+7	; 0x07
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <vfprintf+0x39c>
    10d8:	8f ef       	ldi	r24, 0xFF	; 255
    10da:	9f ef       	ldi	r25, 0xFF	; 255
    10dc:	2c 96       	adiw	r28, 0x0c	; 12
    10de:	e2 e1       	ldi	r30, 0x12	; 18
    10e0:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__epilogue_restores__>

000010e4 <calloc>:
    10e4:	0f 93       	push	r16
    10e6:	1f 93       	push	r17
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	86 9f       	mul	r24, r22
    10ee:	80 01       	movw	r16, r0
    10f0:	87 9f       	mul	r24, r23
    10f2:	10 0d       	add	r17, r0
    10f4:	96 9f       	mul	r25, r22
    10f6:	10 0d       	add	r17, r0
    10f8:	11 24       	eor	r1, r1
    10fa:	c8 01       	movw	r24, r16
    10fc:	0e 94 8e 08 	call	0x111c	; 0x111c <malloc>
    1100:	ec 01       	movw	r28, r24
    1102:	00 97       	sbiw	r24, 0x00	; 0
    1104:	29 f0       	breq	.+10     	; 0x1110 <calloc+0x2c>
    1106:	a8 01       	movw	r20, r16
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	70 e0       	ldi	r23, 0x00	; 0
    110c:	0e 94 c0 09 	call	0x1380	; 0x1380 <memset>
    1110:	ce 01       	movw	r24, r28
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	1f 91       	pop	r17
    1118:	0f 91       	pop	r16
    111a:	08 95       	ret

0000111c <malloc>:
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	82 30       	cpi	r24, 0x02	; 2
    1122:	91 05       	cpc	r25, r1
    1124:	10 f4       	brcc	.+4      	; 0x112a <malloc+0xe>
    1126:	82 e0       	ldi	r24, 0x02	; 2
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	e0 91 d1 01 	lds	r30, 0x01D1
    112e:	f0 91 d2 01 	lds	r31, 0x01D2
    1132:	20 e0       	ldi	r18, 0x00	; 0
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	a0 e0       	ldi	r26, 0x00	; 0
    1138:	b0 e0       	ldi	r27, 0x00	; 0
    113a:	30 97       	sbiw	r30, 0x00	; 0
    113c:	39 f1       	breq	.+78     	; 0x118c <malloc+0x70>
    113e:	40 81       	ld	r20, Z
    1140:	51 81       	ldd	r21, Z+1	; 0x01
    1142:	48 17       	cp	r20, r24
    1144:	59 07       	cpc	r21, r25
    1146:	b8 f0       	brcs	.+46     	; 0x1176 <malloc+0x5a>
    1148:	48 17       	cp	r20, r24
    114a:	59 07       	cpc	r21, r25
    114c:	71 f4       	brne	.+28     	; 0x116a <malloc+0x4e>
    114e:	82 81       	ldd	r24, Z+2	; 0x02
    1150:	93 81       	ldd	r25, Z+3	; 0x03
    1152:	10 97       	sbiw	r26, 0x00	; 0
    1154:	29 f0       	breq	.+10     	; 0x1160 <malloc+0x44>
    1156:	13 96       	adiw	r26, 0x03	; 3
    1158:	9c 93       	st	X, r25
    115a:	8e 93       	st	-X, r24
    115c:	12 97       	sbiw	r26, 0x02	; 2
    115e:	2c c0       	rjmp	.+88     	; 0x11b8 <malloc+0x9c>
    1160:	90 93 d2 01 	sts	0x01D2, r25
    1164:	80 93 d1 01 	sts	0x01D1, r24
    1168:	27 c0       	rjmp	.+78     	; 0x11b8 <malloc+0x9c>
    116a:	21 15       	cp	r18, r1
    116c:	31 05       	cpc	r19, r1
    116e:	31 f0       	breq	.+12     	; 0x117c <malloc+0x60>
    1170:	42 17       	cp	r20, r18
    1172:	53 07       	cpc	r21, r19
    1174:	18 f0       	brcs	.+6      	; 0x117c <malloc+0x60>
    1176:	a9 01       	movw	r20, r18
    1178:	db 01       	movw	r26, r22
    117a:	01 c0       	rjmp	.+2      	; 0x117e <malloc+0x62>
    117c:	ef 01       	movw	r28, r30
    117e:	9a 01       	movw	r18, r20
    1180:	bd 01       	movw	r22, r26
    1182:	df 01       	movw	r26, r30
    1184:	02 80       	ldd	r0, Z+2	; 0x02
    1186:	f3 81       	ldd	r31, Z+3	; 0x03
    1188:	e0 2d       	mov	r30, r0
    118a:	d7 cf       	rjmp	.-82     	; 0x113a <malloc+0x1e>
    118c:	21 15       	cp	r18, r1
    118e:	31 05       	cpc	r19, r1
    1190:	f9 f0       	breq	.+62     	; 0x11d0 <malloc+0xb4>
    1192:	28 1b       	sub	r18, r24
    1194:	39 0b       	sbc	r19, r25
    1196:	24 30       	cpi	r18, 0x04	; 4
    1198:	31 05       	cpc	r19, r1
    119a:	80 f4       	brcc	.+32     	; 0x11bc <malloc+0xa0>
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	9b 81       	ldd	r25, Y+3	; 0x03
    11a0:	61 15       	cp	r22, r1
    11a2:	71 05       	cpc	r23, r1
    11a4:	21 f0       	breq	.+8      	; 0x11ae <malloc+0x92>
    11a6:	fb 01       	movw	r30, r22
    11a8:	93 83       	std	Z+3, r25	; 0x03
    11aa:	82 83       	std	Z+2, r24	; 0x02
    11ac:	04 c0       	rjmp	.+8      	; 0x11b6 <malloc+0x9a>
    11ae:	90 93 d2 01 	sts	0x01D2, r25
    11b2:	80 93 d1 01 	sts	0x01D1, r24
    11b6:	fe 01       	movw	r30, r28
    11b8:	32 96       	adiw	r30, 0x02	; 2
    11ba:	44 c0       	rjmp	.+136    	; 0x1244 <malloc+0x128>
    11bc:	fe 01       	movw	r30, r28
    11be:	e2 0f       	add	r30, r18
    11c0:	f3 1f       	adc	r31, r19
    11c2:	81 93       	st	Z+, r24
    11c4:	91 93       	st	Z+, r25
    11c6:	22 50       	subi	r18, 0x02	; 2
    11c8:	31 09       	sbc	r19, r1
    11ca:	39 83       	std	Y+1, r19	; 0x01
    11cc:	28 83       	st	Y, r18
    11ce:	3a c0       	rjmp	.+116    	; 0x1244 <malloc+0x128>
    11d0:	20 91 cf 01 	lds	r18, 0x01CF
    11d4:	30 91 d0 01 	lds	r19, 0x01D0
    11d8:	23 2b       	or	r18, r19
    11da:	41 f4       	brne	.+16     	; 0x11ec <malloc+0xd0>
    11dc:	20 91 02 01 	lds	r18, 0x0102
    11e0:	30 91 03 01 	lds	r19, 0x0103
    11e4:	30 93 d0 01 	sts	0x01D0, r19
    11e8:	20 93 cf 01 	sts	0x01CF, r18
    11ec:	20 91 00 01 	lds	r18, 0x0100
    11f0:	30 91 01 01 	lds	r19, 0x0101
    11f4:	21 15       	cp	r18, r1
    11f6:	31 05       	cpc	r19, r1
    11f8:	41 f4       	brne	.+16     	; 0x120a <malloc+0xee>
    11fa:	2d b7       	in	r18, 0x3d	; 61
    11fc:	3e b7       	in	r19, 0x3e	; 62
    11fe:	40 91 04 01 	lds	r20, 0x0104
    1202:	50 91 05 01 	lds	r21, 0x0105
    1206:	24 1b       	sub	r18, r20
    1208:	35 0b       	sbc	r19, r21
    120a:	e0 91 cf 01 	lds	r30, 0x01CF
    120e:	f0 91 d0 01 	lds	r31, 0x01D0
    1212:	e2 17       	cp	r30, r18
    1214:	f3 07       	cpc	r31, r19
    1216:	a0 f4       	brcc	.+40     	; 0x1240 <malloc+0x124>
    1218:	2e 1b       	sub	r18, r30
    121a:	3f 0b       	sbc	r19, r31
    121c:	28 17       	cp	r18, r24
    121e:	39 07       	cpc	r19, r25
    1220:	78 f0       	brcs	.+30     	; 0x1240 <malloc+0x124>
    1222:	ac 01       	movw	r20, r24
    1224:	4e 5f       	subi	r20, 0xFE	; 254
    1226:	5f 4f       	sbci	r21, 0xFF	; 255
    1228:	24 17       	cp	r18, r20
    122a:	35 07       	cpc	r19, r21
    122c:	48 f0       	brcs	.+18     	; 0x1240 <malloc+0x124>
    122e:	4e 0f       	add	r20, r30
    1230:	5f 1f       	adc	r21, r31
    1232:	50 93 d0 01 	sts	0x01D0, r21
    1236:	40 93 cf 01 	sts	0x01CF, r20
    123a:	81 93       	st	Z+, r24
    123c:	91 93       	st	Z+, r25
    123e:	02 c0       	rjmp	.+4      	; 0x1244 <malloc+0x128>
    1240:	e0 e0       	ldi	r30, 0x00	; 0
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	cf 01       	movw	r24, r30
    1246:	df 91       	pop	r29
    1248:	cf 91       	pop	r28
    124a:	08 95       	ret

0000124c <free>:
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	09 f4       	brne	.+2      	; 0x1256 <free+0xa>
    1254:	87 c0       	rjmp	.+270    	; 0x1364 <free+0x118>
    1256:	fc 01       	movw	r30, r24
    1258:	32 97       	sbiw	r30, 0x02	; 2
    125a:	13 82       	std	Z+3, r1	; 0x03
    125c:	12 82       	std	Z+2, r1	; 0x02
    125e:	c0 91 d1 01 	lds	r28, 0x01D1
    1262:	d0 91 d2 01 	lds	r29, 0x01D2
    1266:	20 97       	sbiw	r28, 0x00	; 0
    1268:	81 f4       	brne	.+32     	; 0x128a <free+0x3e>
    126a:	20 81       	ld	r18, Z
    126c:	31 81       	ldd	r19, Z+1	; 0x01
    126e:	28 0f       	add	r18, r24
    1270:	39 1f       	adc	r19, r25
    1272:	80 91 cf 01 	lds	r24, 0x01CF
    1276:	90 91 d0 01 	lds	r25, 0x01D0
    127a:	82 17       	cp	r24, r18
    127c:	93 07       	cpc	r25, r19
    127e:	79 f5       	brne	.+94     	; 0x12de <free+0x92>
    1280:	f0 93 d0 01 	sts	0x01D0, r31
    1284:	e0 93 cf 01 	sts	0x01CF, r30
    1288:	6d c0       	rjmp	.+218    	; 0x1364 <free+0x118>
    128a:	de 01       	movw	r26, r28
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	ae 17       	cp	r26, r30
    1292:	bf 07       	cpc	r27, r31
    1294:	50 f4       	brcc	.+20     	; 0x12aa <free+0x5e>
    1296:	12 96       	adiw	r26, 0x02	; 2
    1298:	4d 91       	ld	r20, X+
    129a:	5c 91       	ld	r21, X
    129c:	13 97       	sbiw	r26, 0x03	; 3
    129e:	9d 01       	movw	r18, r26
    12a0:	41 15       	cp	r20, r1
    12a2:	51 05       	cpc	r21, r1
    12a4:	09 f1       	breq	.+66     	; 0x12e8 <free+0x9c>
    12a6:	da 01       	movw	r26, r20
    12a8:	f3 cf       	rjmp	.-26     	; 0x1290 <free+0x44>
    12aa:	b3 83       	std	Z+3, r27	; 0x03
    12ac:	a2 83       	std	Z+2, r26	; 0x02
    12ae:	40 81       	ld	r20, Z
    12b0:	51 81       	ldd	r21, Z+1	; 0x01
    12b2:	84 0f       	add	r24, r20
    12b4:	95 1f       	adc	r25, r21
    12b6:	8a 17       	cp	r24, r26
    12b8:	9b 07       	cpc	r25, r27
    12ba:	71 f4       	brne	.+28     	; 0x12d8 <free+0x8c>
    12bc:	8d 91       	ld	r24, X+
    12be:	9c 91       	ld	r25, X
    12c0:	11 97       	sbiw	r26, 0x01	; 1
    12c2:	84 0f       	add	r24, r20
    12c4:	95 1f       	adc	r25, r21
    12c6:	02 96       	adiw	r24, 0x02	; 2
    12c8:	91 83       	std	Z+1, r25	; 0x01
    12ca:	80 83       	st	Z, r24
    12cc:	12 96       	adiw	r26, 0x02	; 2
    12ce:	8d 91       	ld	r24, X+
    12d0:	9c 91       	ld	r25, X
    12d2:	13 97       	sbiw	r26, 0x03	; 3
    12d4:	93 83       	std	Z+3, r25	; 0x03
    12d6:	82 83       	std	Z+2, r24	; 0x02
    12d8:	21 15       	cp	r18, r1
    12da:	31 05       	cpc	r19, r1
    12dc:	29 f4       	brne	.+10     	; 0x12e8 <free+0x9c>
    12de:	f0 93 d2 01 	sts	0x01D2, r31
    12e2:	e0 93 d1 01 	sts	0x01D1, r30
    12e6:	3e c0       	rjmp	.+124    	; 0x1364 <free+0x118>
    12e8:	d9 01       	movw	r26, r18
    12ea:	13 96       	adiw	r26, 0x03	; 3
    12ec:	fc 93       	st	X, r31
    12ee:	ee 93       	st	-X, r30
    12f0:	12 97       	sbiw	r26, 0x02	; 2
    12f2:	4d 91       	ld	r20, X+
    12f4:	5d 91       	ld	r21, X+
    12f6:	a4 0f       	add	r26, r20
    12f8:	b5 1f       	adc	r27, r21
    12fa:	ea 17       	cp	r30, r26
    12fc:	fb 07       	cpc	r31, r27
    12fe:	79 f4       	brne	.+30     	; 0x131e <free+0xd2>
    1300:	80 81       	ld	r24, Z
    1302:	91 81       	ldd	r25, Z+1	; 0x01
    1304:	84 0f       	add	r24, r20
    1306:	95 1f       	adc	r25, r21
    1308:	02 96       	adiw	r24, 0x02	; 2
    130a:	d9 01       	movw	r26, r18
    130c:	11 96       	adiw	r26, 0x01	; 1
    130e:	9c 93       	st	X, r25
    1310:	8e 93       	st	-X, r24
    1312:	82 81       	ldd	r24, Z+2	; 0x02
    1314:	93 81       	ldd	r25, Z+3	; 0x03
    1316:	13 96       	adiw	r26, 0x03	; 3
    1318:	9c 93       	st	X, r25
    131a:	8e 93       	st	-X, r24
    131c:	12 97       	sbiw	r26, 0x02	; 2
    131e:	e0 e0       	ldi	r30, 0x00	; 0
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	8a 81       	ldd	r24, Y+2	; 0x02
    1324:	9b 81       	ldd	r25, Y+3	; 0x03
    1326:	00 97       	sbiw	r24, 0x00	; 0
    1328:	19 f0       	breq	.+6      	; 0x1330 <free+0xe4>
    132a:	fe 01       	movw	r30, r28
    132c:	ec 01       	movw	r28, r24
    132e:	f9 cf       	rjmp	.-14     	; 0x1322 <free+0xd6>
    1330:	ce 01       	movw	r24, r28
    1332:	02 96       	adiw	r24, 0x02	; 2
    1334:	28 81       	ld	r18, Y
    1336:	39 81       	ldd	r19, Y+1	; 0x01
    1338:	82 0f       	add	r24, r18
    133a:	93 1f       	adc	r25, r19
    133c:	20 91 cf 01 	lds	r18, 0x01CF
    1340:	30 91 d0 01 	lds	r19, 0x01D0
    1344:	28 17       	cp	r18, r24
    1346:	39 07       	cpc	r19, r25
    1348:	69 f4       	brne	.+26     	; 0x1364 <free+0x118>
    134a:	30 97       	sbiw	r30, 0x00	; 0
    134c:	29 f4       	brne	.+10     	; 0x1358 <free+0x10c>
    134e:	10 92 d2 01 	sts	0x01D2, r1
    1352:	10 92 d1 01 	sts	0x01D1, r1
    1356:	02 c0       	rjmp	.+4      	; 0x135c <free+0x110>
    1358:	13 82       	std	Z+3, r1	; 0x03
    135a:	12 82       	std	Z+2, r1	; 0x02
    135c:	d0 93 d0 01 	sts	0x01D0, r29
    1360:	c0 93 cf 01 	sts	0x01CF, r28
    1364:	df 91       	pop	r29
    1366:	cf 91       	pop	r28
    1368:	08 95       	ret

0000136a <strnlen_P>:
    136a:	fc 01       	movw	r30, r24
    136c:	05 90       	lpm	r0, Z+
    136e:	61 50       	subi	r22, 0x01	; 1
    1370:	70 40       	sbci	r23, 0x00	; 0
    1372:	01 10       	cpse	r0, r1
    1374:	d8 f7       	brcc	.-10     	; 0x136c <strnlen_P+0x2>
    1376:	80 95       	com	r24
    1378:	90 95       	com	r25
    137a:	8e 0f       	add	r24, r30
    137c:	9f 1f       	adc	r25, r31
    137e:	08 95       	ret

00001380 <memset>:
    1380:	dc 01       	movw	r26, r24
    1382:	01 c0       	rjmp	.+2      	; 0x1386 <memset+0x6>
    1384:	6d 93       	st	X+, r22
    1386:	41 50       	subi	r20, 0x01	; 1
    1388:	50 40       	sbci	r21, 0x00	; 0
    138a:	e0 f7       	brcc	.-8      	; 0x1384 <memset+0x4>
    138c:	08 95       	ret

0000138e <strnlen>:
    138e:	fc 01       	movw	r30, r24
    1390:	61 50       	subi	r22, 0x01	; 1
    1392:	70 40       	sbci	r23, 0x00	; 0
    1394:	01 90       	ld	r0, Z+
    1396:	01 10       	cpse	r0, r1
    1398:	d8 f7       	brcc	.-10     	; 0x1390 <strnlen+0x2>
    139a:	80 95       	com	r24
    139c:	90 95       	com	r25
    139e:	8e 0f       	add	r24, r30
    13a0:	9f 1f       	adc	r25, r31
    13a2:	08 95       	ret

000013a4 <fputc>:
    13a4:	0f 93       	push	r16
    13a6:	1f 93       	push	r17
    13a8:	cf 93       	push	r28
    13aa:	df 93       	push	r29
    13ac:	18 2f       	mov	r17, r24
    13ae:	09 2f       	mov	r16, r25
    13b0:	eb 01       	movw	r28, r22
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	81 fd       	sbrc	r24, 1
    13b6:	03 c0       	rjmp	.+6      	; 0x13be <fputc+0x1a>
    13b8:	8f ef       	ldi	r24, 0xFF	; 255
    13ba:	9f ef       	ldi	r25, 0xFF	; 255
    13bc:	20 c0       	rjmp	.+64     	; 0x13fe <fputc+0x5a>
    13be:	82 ff       	sbrs	r24, 2
    13c0:	10 c0       	rjmp	.+32     	; 0x13e2 <fputc+0x3e>
    13c2:	4e 81       	ldd	r20, Y+6	; 0x06
    13c4:	5f 81       	ldd	r21, Y+7	; 0x07
    13c6:	2c 81       	ldd	r18, Y+4	; 0x04
    13c8:	3d 81       	ldd	r19, Y+5	; 0x05
    13ca:	42 17       	cp	r20, r18
    13cc:	53 07       	cpc	r21, r19
    13ce:	7c f4       	brge	.+30     	; 0x13ee <fputc+0x4a>
    13d0:	e8 81       	ld	r30, Y
    13d2:	f9 81       	ldd	r31, Y+1	; 0x01
    13d4:	9f 01       	movw	r18, r30
    13d6:	2f 5f       	subi	r18, 0xFF	; 255
    13d8:	3f 4f       	sbci	r19, 0xFF	; 255
    13da:	39 83       	std	Y+1, r19	; 0x01
    13dc:	28 83       	st	Y, r18
    13de:	10 83       	st	Z, r17
    13e0:	06 c0       	rjmp	.+12     	; 0x13ee <fputc+0x4a>
    13e2:	e8 85       	ldd	r30, Y+8	; 0x08
    13e4:	f9 85       	ldd	r31, Y+9	; 0x09
    13e6:	81 2f       	mov	r24, r17
    13e8:	09 95       	icall
    13ea:	89 2b       	or	r24, r25
    13ec:	29 f7       	brne	.-54     	; 0x13b8 <fputc+0x14>
    13ee:	2e 81       	ldd	r18, Y+6	; 0x06
    13f0:	3f 81       	ldd	r19, Y+7	; 0x07
    13f2:	2f 5f       	subi	r18, 0xFF	; 255
    13f4:	3f 4f       	sbci	r19, 0xFF	; 255
    13f6:	3f 83       	std	Y+7, r19	; 0x07
    13f8:	2e 83       	std	Y+6, r18	; 0x06
    13fa:	81 2f       	mov	r24, r17
    13fc:	90 2f       	mov	r25, r16
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	08 95       	ret

00001408 <__ultoa_invert>:
    1408:	fa 01       	movw	r30, r20
    140a:	aa 27       	eor	r26, r26
    140c:	28 30       	cpi	r18, 0x08	; 8
    140e:	51 f1       	breq	.+84     	; 0x1464 <__ultoa_invert+0x5c>
    1410:	20 31       	cpi	r18, 0x10	; 16
    1412:	81 f1       	breq	.+96     	; 0x1474 <__ultoa_invert+0x6c>
    1414:	e8 94       	clt
    1416:	6f 93       	push	r22
    1418:	6e 7f       	andi	r22, 0xFE	; 254
    141a:	6e 5f       	subi	r22, 0xFE	; 254
    141c:	7f 4f       	sbci	r23, 0xFF	; 255
    141e:	8f 4f       	sbci	r24, 0xFF	; 255
    1420:	9f 4f       	sbci	r25, 0xFF	; 255
    1422:	af 4f       	sbci	r26, 0xFF	; 255
    1424:	b1 e0       	ldi	r27, 0x01	; 1
    1426:	3e d0       	rcall	.+124    	; 0x14a4 <__ultoa_invert+0x9c>
    1428:	b4 e0       	ldi	r27, 0x04	; 4
    142a:	3c d0       	rcall	.+120    	; 0x14a4 <__ultoa_invert+0x9c>
    142c:	67 0f       	add	r22, r23
    142e:	78 1f       	adc	r23, r24
    1430:	89 1f       	adc	r24, r25
    1432:	9a 1f       	adc	r25, r26
    1434:	a1 1d       	adc	r26, r1
    1436:	68 0f       	add	r22, r24
    1438:	79 1f       	adc	r23, r25
    143a:	8a 1f       	adc	r24, r26
    143c:	91 1d       	adc	r25, r1
    143e:	a1 1d       	adc	r26, r1
    1440:	6a 0f       	add	r22, r26
    1442:	71 1d       	adc	r23, r1
    1444:	81 1d       	adc	r24, r1
    1446:	91 1d       	adc	r25, r1
    1448:	a1 1d       	adc	r26, r1
    144a:	20 d0       	rcall	.+64     	; 0x148c <__ultoa_invert+0x84>
    144c:	09 f4       	brne	.+2      	; 0x1450 <__ultoa_invert+0x48>
    144e:	68 94       	set
    1450:	3f 91       	pop	r19
    1452:	2a e0       	ldi	r18, 0x0A	; 10
    1454:	26 9f       	mul	r18, r22
    1456:	11 24       	eor	r1, r1
    1458:	30 19       	sub	r19, r0
    145a:	30 5d       	subi	r19, 0xD0	; 208
    145c:	31 93       	st	Z+, r19
    145e:	de f6       	brtc	.-74     	; 0x1416 <__ultoa_invert+0xe>
    1460:	cf 01       	movw	r24, r30
    1462:	08 95       	ret
    1464:	46 2f       	mov	r20, r22
    1466:	47 70       	andi	r20, 0x07	; 7
    1468:	40 5d       	subi	r20, 0xD0	; 208
    146a:	41 93       	st	Z+, r20
    146c:	b3 e0       	ldi	r27, 0x03	; 3
    146e:	0f d0       	rcall	.+30     	; 0x148e <__ultoa_invert+0x86>
    1470:	c9 f7       	brne	.-14     	; 0x1464 <__ultoa_invert+0x5c>
    1472:	f6 cf       	rjmp	.-20     	; 0x1460 <__ultoa_invert+0x58>
    1474:	46 2f       	mov	r20, r22
    1476:	4f 70       	andi	r20, 0x0F	; 15
    1478:	40 5d       	subi	r20, 0xD0	; 208
    147a:	4a 33       	cpi	r20, 0x3A	; 58
    147c:	18 f0       	brcs	.+6      	; 0x1484 <__ultoa_invert+0x7c>
    147e:	49 5d       	subi	r20, 0xD9	; 217
    1480:	31 fd       	sbrc	r19, 1
    1482:	40 52       	subi	r20, 0x20	; 32
    1484:	41 93       	st	Z+, r20
    1486:	02 d0       	rcall	.+4      	; 0x148c <__ultoa_invert+0x84>
    1488:	a9 f7       	brne	.-22     	; 0x1474 <__ultoa_invert+0x6c>
    148a:	ea cf       	rjmp	.-44     	; 0x1460 <__ultoa_invert+0x58>
    148c:	b4 e0       	ldi	r27, 0x04	; 4
    148e:	a6 95       	lsr	r26
    1490:	97 95       	ror	r25
    1492:	87 95       	ror	r24
    1494:	77 95       	ror	r23
    1496:	67 95       	ror	r22
    1498:	ba 95       	dec	r27
    149a:	c9 f7       	brne	.-14     	; 0x148e <__ultoa_invert+0x86>
    149c:	00 97       	sbiw	r24, 0x00	; 0
    149e:	61 05       	cpc	r22, r1
    14a0:	71 05       	cpc	r23, r1
    14a2:	08 95       	ret
    14a4:	9b 01       	movw	r18, r22
    14a6:	ac 01       	movw	r20, r24
    14a8:	0a 2e       	mov	r0, r26
    14aa:	06 94       	lsr	r0
    14ac:	57 95       	ror	r21
    14ae:	47 95       	ror	r20
    14b0:	37 95       	ror	r19
    14b2:	27 95       	ror	r18
    14b4:	ba 95       	dec	r27
    14b6:	c9 f7       	brne	.-14     	; 0x14aa <__ultoa_invert+0xa2>
    14b8:	62 0f       	add	r22, r18
    14ba:	73 1f       	adc	r23, r19
    14bc:	84 1f       	adc	r24, r20
    14be:	95 1f       	adc	r25, r21
    14c0:	a0 1d       	adc	r26, r0
    14c2:	08 95       	ret

000014c4 <__prologue_saves__>:
    14c4:	2f 92       	push	r2
    14c6:	3f 92       	push	r3
    14c8:	4f 92       	push	r4
    14ca:	5f 92       	push	r5
    14cc:	6f 92       	push	r6
    14ce:	7f 92       	push	r7
    14d0:	8f 92       	push	r8
    14d2:	9f 92       	push	r9
    14d4:	af 92       	push	r10
    14d6:	bf 92       	push	r11
    14d8:	cf 92       	push	r12
    14da:	df 92       	push	r13
    14dc:	ef 92       	push	r14
    14de:	ff 92       	push	r15
    14e0:	0f 93       	push	r16
    14e2:	1f 93       	push	r17
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
    14e8:	cd b7       	in	r28, 0x3d	; 61
    14ea:	de b7       	in	r29, 0x3e	; 62
    14ec:	ca 1b       	sub	r28, r26
    14ee:	db 0b       	sbc	r29, r27
    14f0:	0f b6       	in	r0, 0x3f	; 63
    14f2:	f8 94       	cli
    14f4:	de bf       	out	0x3e, r29	; 62
    14f6:	0f be       	out	0x3f, r0	; 63
    14f8:	cd bf       	out	0x3d, r28	; 61
    14fa:	09 94       	ijmp

000014fc <__epilogue_restores__>:
    14fc:	2a 88       	ldd	r2, Y+18	; 0x12
    14fe:	39 88       	ldd	r3, Y+17	; 0x11
    1500:	48 88       	ldd	r4, Y+16	; 0x10
    1502:	5f 84       	ldd	r5, Y+15	; 0x0f
    1504:	6e 84       	ldd	r6, Y+14	; 0x0e
    1506:	7d 84       	ldd	r7, Y+13	; 0x0d
    1508:	8c 84       	ldd	r8, Y+12	; 0x0c
    150a:	9b 84       	ldd	r9, Y+11	; 0x0b
    150c:	aa 84       	ldd	r10, Y+10	; 0x0a
    150e:	b9 84       	ldd	r11, Y+9	; 0x09
    1510:	c8 84       	ldd	r12, Y+8	; 0x08
    1512:	df 80       	ldd	r13, Y+7	; 0x07
    1514:	ee 80       	ldd	r14, Y+6	; 0x06
    1516:	fd 80       	ldd	r15, Y+5	; 0x05
    1518:	0c 81       	ldd	r16, Y+4	; 0x04
    151a:	1b 81       	ldd	r17, Y+3	; 0x03
    151c:	aa 81       	ldd	r26, Y+2	; 0x02
    151e:	b9 81       	ldd	r27, Y+1	; 0x01
    1520:	ce 0f       	add	r28, r30
    1522:	d1 1d       	adc	r29, r1
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	f8 94       	cli
    1528:	de bf       	out	0x3e, r29	; 62
    152a:	0f be       	out	0x3f, r0	; 63
    152c:	cd bf       	out	0x3d, r28	; 61
    152e:	ed 01       	movw	r28, r26
    1530:	08 95       	ret

00001532 <_exit>:
    1532:	f8 94       	cli

00001534 <__stop_program>:
    1534:	ff cf       	rjmp	.-2      	; 0x1534 <__stop_program>
